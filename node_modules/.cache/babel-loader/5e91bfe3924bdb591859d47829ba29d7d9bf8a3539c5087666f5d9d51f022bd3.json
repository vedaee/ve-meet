{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST - 3\\\\client\\\\src\\\\components\\\\GuestRoom.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// GuestRoom.js\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./GuestRoom.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"https://192.168.29.23:5000\");\nconst GuestRoom = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [screenShareStream, setScreenShareStream] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\");\n  const [joined, setJoined] = useState(false);\n  const [localStream, setLocalStream] = useState(null);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  useEffect(() => {\n    const storedRoomID = localStorage.getItem(\"roomID\");\n    if (storedRoomID) setRoomID(storedRoomID);\n  }, []);\n  useEffect(() => {\n    if (userVideo.current && localStream) {\n      userVideo.current.srcObject = localStream;\n    }\n  }, [localStream]);\n  const handleJoin = async () => {\n    if (!name.trim()) return alert(\"Please enter your name.\");\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      setLocalStream(stream);\n      setJoined(true);\n      socket.emit(\"join-room\", {\n        roomID,\n        name\n      });\n      socket.on(\"all-users\", users => {\n        const peers = [];\n        users.forEach(({\n          socketID,\n          userName\n        }) => {\n          const peer = createPeer(socketID, socket.id, stream);\n          peersRef.current.push({\n            peerID: socketID,\n            peer,\n            userName\n          });\n          peers.push({\n            peerID: socketID,\n            peer,\n            userName\n          });\n        });\n        setPeers(peers);\n      });\n      socket.on(\"user-joined\", ({\n        signal,\n        callerID,\n        userName\n      }) => {\n        const peer = addPeer(signal, callerID, stream);\n        peersRef.current.push({\n          peerID: callerID,\n          peer,\n          userName\n        });\n        setPeers(users => [...users, {\n          peerID: callerID,\n          peer,\n          userName\n        }]);\n      });\n      socket.on(\"receiving-returned-signal\", ({\n        id,\n        signal\n      }) => {\n        const item = peersRef.current.find(p => p.peerID === id);\n        item === null || item === void 0 ? void 0 : item.peer.signal(signal);\n      });\n      socket.on(\"user-disconnected\", id => {\n        const peerObj = peersRef.current.find(p => p.peerID === id);\n        if (peerObj) {\n          peerObj.peer.destroy();\n        }\n        peersRef.current = peersRef.current.filter(p => p.peerID !== id);\n        setPeers(users => users.filter(p => p.peerID !== id));\n      });\n      socket.on(\"screen-share-started\", ({\n        streamID\n      }) => {\n        const screenTrack = new MediaStream();\n        screenTrack.id = streamID;\n        socket.emit(\"request-screen-stream\", streamID);\n      });\n      socket.on(\"receive-screen-stream\", stream => {\n        setScreenShareStream(stream);\n      });\n    } catch (err) {\n      console.error(\"Error accessing media devices.\", err);\n    }\n  };\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal,\n        userName: name\n      });\n    });\n    return peer;\n  };\n  const addPeer = (incomingSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"returning-signal\", {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  };\n  const toggleFullscreen = () => {\n    const video = document.getElementById(\"screen-share-video\");\n    if (video.requestFullscreen) video.requestFullscreen();else if (video.webkitRequestFullscreen) video.webkitRequestFullscreen();else if (video.msRequestFullscreen) video.msRequestFullscreen();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guest-room-container\",\n    children: !joined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-ui\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"ve-meet-logo\",\n        children: \"Ve Meet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoin,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            muted: true,\n            ref: userVideo,\n            autoPlay: true,\n            playsInline: true,\n            className: \"video-element\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name-label\",\n            children: [name, \" (You)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), peers.map(({\n          peerID,\n          peer,\n          userName\n        }) => /*#__PURE__*/_jsxDEV(Video, {\n          peer: peer,\n          name: userName\n        }, peerID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), screenShareStream && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"screen-share-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          id: \"screen-share-video\",\n          className: \"screen-share-video\",\n          autoPlay: true,\n          playsInline: true,\n          ref: video => {\n            if (video) video.srcObject = screenShareStream;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fullscreen-btn\",\n          onClick: toggleFullscreen,\n          children: \"\\u26F6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(GuestRoom, \"6e+bxg2mtt/a53tsuhFo4fAM7m8=\");\n_c = GuestRoom;\nconst Video = ({\n  peer,\n  name\n}) => {\n  _s2();\n  const ref = useRef();\n  useEffect(() => {\n    peer.on(\"stream\", stream => {\n      if (ref.current) ref.current.srcObject = stream;\n    });\n  }, [peer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      playsInline: true,\n      autoPlay: true,\n      ref: ref,\n      className: \"video-element\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-label\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s2(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c2 = Video;\nexport default GuestRoom;\nvar _c, _c2;\n$RefreshReg$(_c, \"GuestRoom\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","socket","connect","GuestRoom","_s","peers","setPeers","screenShareStream","setScreenShareStream","name","setName","roomID","setRoomID","joined","setJoined","localStream","setLocalStream","userVideo","peersRef","storedRoomID","localStorage","getItem","current","srcObject","handleJoin","trim","alert","stream","navigator","mediaDevices","getUserMedia","video","audio","emit","on","users","forEach","socketID","userName","peer","createPeer","id","push","peerID","signal","callerID","addPeer","item","find","p","peerObj","destroy","filter","streamID","screenTrack","MediaStream","err","console","error","userToSignal","initiator","trickle","incomingSignal","toggleFullscreen","document","getElementById","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","muted","ref","autoPlay","playsInline","map","Video","_c","_s2","_c2","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST - 3/client/src/components/GuestRoom.js"],"sourcesContent":["// GuestRoom.js\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./GuestRoom.css\";\r\n\r\nconst socket = io.connect(\"https://192.168.29.23:5000\");\r\n\r\nconst GuestRoom = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [screenShareStream, setScreenShareStream] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [joined, setJoined] = useState(false);\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const storedRoomID = localStorage.getItem(\"roomID\");\r\n    if (storedRoomID) setRoomID(storedRoomID);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userVideo.current && localStream) {\r\n      userVideo.current.srcObject = localStream;\r\n    }\r\n  }, [localStream]);\r\n\r\n  const handleJoin = async () => {\r\n    if (!name.trim()) return alert(\"Please enter your name.\");\r\n\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      });\r\n      setLocalStream(stream);\r\n      setJoined(true);\r\n      socket.emit(\"join-room\", { roomID, name });\r\n\r\n      socket.on(\"all-users\", (users) => {\r\n        const peers = [];\r\n        users.forEach(({ socketID, userName }) => {\r\n          const peer = createPeer(socketID, socket.id, stream);\r\n          peersRef.current.push({ peerID: socketID, peer, userName });\r\n          peers.push({ peerID: socketID, peer, userName });\r\n        });\r\n        setPeers(peers);\r\n      });\r\n\r\n      socket.on(\"user-joined\", ({ signal, callerID, userName }) => {\r\n        const peer = addPeer(signal, callerID, stream);\r\n        peersRef.current.push({ peerID: callerID, peer, userName });\r\n        setPeers((users) => [...users, { peerID: callerID, peer, userName }]);\r\n      });\r\n\r\n      socket.on(\"receiving-returned-signal\", ({ id, signal }) => {\r\n        const item = peersRef.current.find((p) => p.peerID === id);\r\n        item?.peer.signal(signal);\r\n      });\r\n\r\n      socket.on(\"user-disconnected\", (id) => {\r\n        const peerObj = peersRef.current.find((p) => p.peerID === id);\r\n        if (peerObj) {\r\n          peerObj.peer.destroy();\r\n        }\r\n        peersRef.current = peersRef.current.filter((p) => p.peerID !== id);\r\n        setPeers((users) => users.filter((p) => p.peerID !== id));\r\n      });\r\n\r\n      socket.on(\"screen-share-started\", ({ streamID }) => {\r\n        const screenTrack = new MediaStream();\r\n        screenTrack.id = streamID;\r\n        socket.emit(\"request-screen-stream\", streamID);\r\n      });\r\n\r\n      socket.on(\"receive-screen-stream\", (stream) => {\r\n        setScreenShareStream(stream);\r\n      });\r\n\r\n    } catch (err) {\r\n      console.error(\"Error accessing media devices.\", err);\r\n    }\r\n  };\r\n\r\n  const createPeer = (userToSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"sending-signal\", {\r\n        userToSignal,\r\n        callerID,\r\n        signal,\r\n        userName: name,\r\n      });\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (incomingSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"returning-signal\", { signal, callerID });\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n    return peer;\r\n  };\r\n\r\n  const toggleFullscreen = () => {\r\n    const video = document.getElementById(\"screen-share-video\");\r\n    if (video.requestFullscreen) video.requestFullscreen();\r\n    else if (video.webkitRequestFullscreen) video.webkitRequestFullscreen();\r\n    else if (video.msRequestFullscreen) video.msRequestFullscreen();\r\n  };\r\n\r\n  return (\r\n    <div className=\"guest-room-container\">\r\n      {!joined ? (\r\n        <div className=\"join-ui\">\r\n          <h2 className=\"ve-meet-logo\">Ve Meet</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <button onClick={handleJoin}>Join</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"video-grid-container\">\r\n          <div className=\"video-grid\">\r\n            <div className=\"video-block\">\r\n              <video\r\n                muted\r\n                ref={userVideo}\r\n                autoPlay\r\n                playsInline\r\n                className=\"video-element\"\r\n              />\r\n              <div className=\"name-label\">{name} (You)</div>\r\n            </div>\r\n\r\n            {peers.map(({ peerID, peer, userName }) => (\r\n              <Video key={peerID} peer={peer} name={userName} />\r\n            ))}\r\n          </div>\r\n\r\n          {screenShareStream && (\r\n            <div className=\"screen-share-block\">\r\n              <video\r\n                id=\"screen-share-video\"\r\n                className=\"screen-share-video\"\r\n                autoPlay\r\n                playsInline\r\n                ref={(video) => {\r\n                  if (video) video.srcObject = screenShareStream;\r\n                }}\r\n              />\r\n              <button className=\"fullscreen-btn\" onClick={toggleFullscreen}>\r\n                ⛶\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Video = ({ peer, name }) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    peer.on(\"stream\", (stream) => {\r\n      if (ref.current) ref.current.srcObject = stream;\r\n    });\r\n  }, [peer]);\r\n\r\n  return (\r\n    <div className=\"video-block\">\r\n      <video playsInline autoPlay ref={ref} className=\"video-element\" />\r\n      <div className=\"name-label\">{name}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GuestRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}