{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST - 3\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || \"https://192.168.29.23:5000\";\nconst socket = io(SERVER_URL, {\n  secure: true,\n  reconnection: true,\n  rejectUnauthorized: false\n});\nconst Room = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [participants, setParticipants] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\");\n  const [micOn, setMicOn] = useState(true);\n  const [camOn, setCamOn] = useState(true);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const streamRef = useRef();\n  const screenTrackRef = useRef();\n  const videoRefs = useRef({});\n  useEffect(() => {\n    const name = prompt(\"Enter your name\");\n    const room = prompt(\"Enter room code\");\n    setUserName(name);\n    setRoomID(room);\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      streamRef.current = stream;\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n      socket.emit(\"join-room\", {\n        roomId: room,\n        userName: name\n      });\n      socket.on(\"all-users\", users => {\n        const newPeers = [];\n        users.forEach(user => {\n          if (user.id === socket.id) return;\n          const peer = createPeer(user.id, socket.id, stream);\n          peersRef.current.push({\n            peerID: user.id,\n            peer,\n            userName: user.name\n          });\n          newPeers.push({\n            peerID: user.id,\n            peer,\n            userName: user.name\n          });\n        });\n        setPeers(newPeers);\n        setParticipants(users.map(u => u.name));\n      });\n      socket.on(\"user-joined\", payload => {\n        const alreadyExists = peersRef.current.some(p => p.peerID === payload.id);\n        if (alreadyExists) return;\n        const peer = addPeer(payload.signal, payload.id, payload.name, streamRef.current);\n        peersRef.current.push({\n          peerID: payload.id,\n          peer,\n          userName: payload.name\n        });\n        setPeers(users => [...users, {\n          peerID: payload.id,\n          peer,\n          userName: payload.name\n        }]);\n        setParticipants(list => {\n          if (!list.includes(payload.name)) return [...list, payload.name];else return list;\n        });\n      });\n      socket.on(\"receiving-returned-signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        if (item && item.peer) {\n          item.peer.signal(payload.signal);\n        }\n      });\n      socket.on(\"user-disconnected\", id => {\n        setPeers(users => users.filter(p => p.peerID !== id));\n        peersRef.current = peersRef.current.filter(p => p.peerID !== id);\n        setParticipants(peersRef.current.map(p => p.userName));\n        delete videoRefs.current[id];\n      });\n    }).catch(err => {\n      console.error(\"Media Device Error:\", err);\n      alert(\"Could not access camera/microphone.\");\n    });\n    return () => {\n      socket.disconnect();\n      peersRef.current.forEach(({\n        peer\n      }) => peer.destroy());\n      if (streamRef.current) streamRef.current.getTracks().forEach(t => t.stop());\n    };\n  }, []);\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const videoElem = videoRefs.current[userToSignal];\n      if (videoElem) {\n        try {\n          videoElem.srcObject = remoteStream;\n        } catch (e) {\n          videoElem.src = window.URL.createObjectURL(remoteStream);\n        }\n      }\n    });\n    peer.on(\"error\", err => {\n      console.error(\"Peer error (createPeer):\", err);\n    });\n    return peer;\n  };\n  const addPeer = (incomingSignal, callerId, name, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"returning-signal\", {\n        signal,\n        callerID: callerId\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const videoElem = videoRefs.current[callerId];\n      if (videoElem) {\n        try {\n          videoElem.srcObject = remoteStream;\n        } catch (e) {\n          videoElem.src = window.URL.createObjectURL(remoteStream);\n        }\n      }\n    });\n    peer.on(\"error\", err => {\n      console.error(\"Peer error (addPeer):\", err);\n    });\n    if (peer && typeof peer.signal === \"function\" && incomingSignal) {\n      try {\n        peer.signal(incomingSignal);\n      } catch (err) {\n        console.error(\"Error signaling peer:\", err);\n      }\n    }\n    return peer;\n  };\n  const toggleMic = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getAudioTracks().forEach(track => {\n      track.enabled = !micOn;\n    });\n    setMicOn(!micOn);\n  };\n  const toggleCam = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getVideoTracks().forEach(track => {\n      track.enabled = !camOn;\n    });\n    setCamOn(!camOn);\n  };\n  const handleScreenShare = async () => {\n    if (!screenSharing) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true\n        });\n        const screenTrack = screenStream.getVideoTracks()[0];\n        screenTrackRef.current = screenTrack;\n\n        // Replace video track with screen track for each peer\n        peersRef.current.forEach(({\n          peer\n        }) => {\n          const sender = peer._pc.getSenders().find(s => s.track.kind === \"video\");\n          if (sender) sender.replaceTrack(screenTrack);\n        });\n\n        // Replace local video to screen share stream\n        if (userVideo.current) userVideo.current.srcObject = screenStream;\n        screenTrack.onended = () => {\n          peersRef.current.forEach(({\n            peer\n          }) => {\n            const sender = peer._pc.getSenders().find(s => s.track.kind === \"video\");\n            if (sender) sender.replaceTrack(streamRef.current.getVideoTracks()[0]);\n          });\n          if (userVideo.current) userVideo.current.srcObject = streamRef.current;\n          setScreenSharing(false);\n        };\n        setScreenSharing(true);\n      } catch (err) {\n        console.error(\"Screen share error:\", err);\n      }\n    } else {\n      if (screenTrackRef.current) screenTrackRef.current.stop();\n      setScreenSharing(false);\n    }\n  };\n  const endMeeting = () => {\n    peersRef.current.forEach(({\n      peer\n    }) => peer.destroy());\n    peersRef.current = [];\n    if (streamRef.current) streamRef.current.getTracks().forEach(track => track.stop());\n    socket.disconnect();\n    window.location.href = \"/\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"room-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logo\",\n        children: [\"Ve \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gold\",\n          children: \"Meet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Room: \", roomID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"You: \", userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          muted: true,\n          ref: userVideo,\n          autoPlay: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), peers.map(({\n        peerID,\n        userName\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          autoPlay: true,\n          className: \"video\",\n          ref: el => {\n            if (el) videoRefs.current[peerID] = el;else delete videoRefs.current[peerID];\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, peerID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"participants-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Participants (\", participants.length + 1, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [userName, \" (You)\"]\n          }, userName + \"-self\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), participants.map(pName => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: pName\n          }, pName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gold-btn\",\n          onClick: toggleMic,\n          children: micOn ? \"Mute\" : \"Unmute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gold-btn\",\n          onClick: toggleCam,\n          children: camOn ? \"Video Off\" : \"Video On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gold-btn\",\n          onClick: handleScreenShare,\n          children: screenSharing ? \"Stop Sharing\" : \"Share Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"red-btn\",\n          onClick: endMeeting,\n          children: \"End Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"RoaFfDUeVEuuIrkPVDHyKrTb4ZA=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","SERVER_URL","process","env","REACT_APP_SERVER_URL","socket","secure","reconnection","rejectUnauthorized","Room","_s","peers","setPeers","participants","setParticipants","userName","setUserName","roomID","setRoomID","micOn","setMicOn","camOn","setCamOn","screenSharing","setScreenSharing","userVideo","peersRef","streamRef","screenTrackRef","videoRefs","name","prompt","room","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","emit","roomId","on","users","newPeers","forEach","user","id","peer","createPeer","push","peerID","map","u","payload","alreadyExists","some","p","addPeer","signal","list","includes","item","find","filter","catch","err","console","error","alert","disconnect","destroy","getTracks","t","stop","userToSignal","callerID","initiator","trickle","remoteStream","videoElem","e","src","window","URL","createObjectURL","incomingSignal","callerId","toggleMic","getAudioTracks","track","enabled","toggleCam","getVideoTracks","handleScreenShare","screenStream","getDisplayMedia","screenTrack","sender","_pc","getSenders","s","kind","replaceTrack","onended","endMeeting","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","muted","ref","autoPlay","playsInline","el","length","pName","onClick","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST - 3/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./Room.css\";\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || \"https://192.168.29.23:5000\";\r\n\r\nconst socket = io(SERVER_URL, {\r\n  secure: true,\r\n  reconnection: true,\r\n  rejectUnauthorized: false,\r\n});\r\n\r\nconst Room = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [micOn, setMicOn] = useState(true);\r\n  const [camOn, setCamOn] = useState(true);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const streamRef = useRef();\r\n  const screenTrackRef = useRef();\r\n  const videoRefs = useRef({});\r\n\r\n  useEffect(() => {\r\n    const name = prompt(\"Enter your name\");\r\n    const room = prompt(\"Enter room code\");\r\n    setUserName(name);\r\n    setRoomID(room);\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        streamRef.current = stream;\r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = stream;\r\n        }\r\n\r\n        socket.emit(\"join-room\", { roomId: room, userName: name });\r\n\r\n        socket.on(\"all-users\", (users) => {\r\n          const newPeers = [];\r\n          users.forEach((user) => {\r\n            if (user.id === socket.id) return;\r\n            const peer = createPeer(user.id, socket.id, stream);\r\n            peersRef.current.push({ peerID: user.id, peer, userName: user.name });\r\n            newPeers.push({ peerID: user.id, peer, userName: user.name });\r\n          });\r\n          setPeers(newPeers);\r\n          setParticipants(users.map((u) => u.name));\r\n        });\r\n\r\n        socket.on(\"user-joined\", (payload) => {\r\n          const alreadyExists = peersRef.current.some(p => p.peerID === payload.id);\r\n          if (alreadyExists) return;\r\n\r\n          const peer = addPeer(payload.signal, payload.id, payload.name, streamRef.current);\r\n          peersRef.current.push({ peerID: payload.id, peer, userName: payload.name });\r\n          setPeers((users) => [...users, { peerID: payload.id, peer, userName: payload.name }]);\r\n          setParticipants((list) => {\r\n            if (!list.includes(payload.name)) return [...list, payload.name];\r\n            else return list;\r\n          });\r\n        });\r\n\r\n        socket.on(\"receiving-returned-signal\", (payload) => {\r\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\r\n          if (item && item.peer) {\r\n            item.peer.signal(payload.signal);\r\n          }\r\n        });\r\n\r\n        socket.on(\"user-disconnected\", (id) => {\r\n          setPeers((users) => users.filter((p) => p.peerID !== id));\r\n          peersRef.current = peersRef.current.filter((p) => p.peerID !== id);\r\n          setParticipants(peersRef.current.map((p) => p.userName));\r\n          delete videoRefs.current[id];\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Media Device Error:\", err);\r\n        alert(\"Could not access camera/microphone.\");\r\n      });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      peersRef.current.forEach(({ peer }) => peer.destroy());\r\n      if (streamRef.current) streamRef.current.getTracks().forEach((t) => t.stop());\r\n    };\r\n  }, []);\r\n\r\n  const createPeer = (userToSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"sending-signal\", { userToSignal, callerID, signal });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const videoElem = videoRefs.current[userToSignal];\r\n      if (videoElem) {\r\n        try {\r\n          videoElem.srcObject = remoteStream;\r\n        } catch (e) {\r\n          videoElem.src = window.URL.createObjectURL(remoteStream);\r\n        }\r\n      }\r\n    });\r\n\r\n    peer.on(\"error\", (err) => {\r\n      console.error(\"Peer error (createPeer):\", err);\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (incomingSignal, callerId, name, stream) => {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"returning-signal\", { signal, callerID: callerId });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const videoElem = videoRefs.current[callerId];\r\n      if (videoElem) {\r\n        try {\r\n          videoElem.srcObject = remoteStream;\r\n        } catch (e) {\r\n          videoElem.src = window.URL.createObjectURL(remoteStream);\r\n        }\r\n      }\r\n    });\r\n\r\n    peer.on(\"error\", (err) => {\r\n      console.error(\"Peer error (addPeer):\", err);\r\n    });\r\n\r\n    if (peer && typeof peer.signal === \"function\" && incomingSignal) {\r\n      try {\r\n        peer.signal(incomingSignal);\r\n      } catch (err) {\r\n        console.error(\"Error signaling peer:\", err);\r\n      }\r\n    }\r\n\r\n    return peer;\r\n  };\r\n\r\n  const toggleMic = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getAudioTracks().forEach((track) => {\r\n      track.enabled = !micOn;\r\n    });\r\n    setMicOn(!micOn);\r\n  };\r\n\r\n  const toggleCam = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getVideoTracks().forEach((track) => {\r\n      track.enabled = !camOn;\r\n    });\r\n    setCamOn(!camOn);\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    if (!screenSharing) {\r\n      try {\r\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n        const screenTrack = screenStream.getVideoTracks()[0];\r\n        screenTrackRef.current = screenTrack;\r\n\r\n        // Replace video track with screen track for each peer\r\n        peersRef.current.forEach(({ peer }) => {\r\n          const sender = peer._pc.getSenders().find((s) => s.track.kind === \"video\");\r\n          if (sender) sender.replaceTrack(screenTrack);\r\n        });\r\n\r\n        // Replace local video to screen share stream\r\n        if (userVideo.current) userVideo.current.srcObject = screenStream;\r\n\r\n        screenTrack.onended = () => {\r\n          peersRef.current.forEach(({ peer }) => {\r\n            const sender = peer._pc.getSenders().find((s) => s.track.kind === \"video\");\r\n            if (sender) sender.replaceTrack(streamRef.current.getVideoTracks()[0]);\r\n          });\r\n          if (userVideo.current) userVideo.current.srcObject = streamRef.current;\r\n          setScreenSharing(false);\r\n        };\r\n\r\n        setScreenSharing(true);\r\n      } catch (err) {\r\n        console.error(\"Screen share error:\", err);\r\n      }\r\n    } else {\r\n      if (screenTrackRef.current) screenTrackRef.current.stop();\r\n      setScreenSharing(false);\r\n    }\r\n  };\r\n\r\n  const endMeeting = () => {\r\n    peersRef.current.forEach(({ peer }) => peer.destroy());\r\n    peersRef.current = [];\r\n    if (streamRef.current) streamRef.current.getTracks().forEach((track) => track.stop());\r\n    socket.disconnect();\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <header className=\"room-header\">\r\n        <h2 className=\"logo\">\r\n          Ve <span className=\"gold\">Meet</span>\r\n        </h2>\r\n        <div>\r\n          <span>Room: {roomID}</span>\r\n          <span className=\"username\">You: {userName}</span>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"video-grid\">\r\n        <div className=\"video-block\">\r\n          <video muted ref={userVideo} autoPlay playsInline className=\"video\" />\r\n          <p>{userName} (You)</p>\r\n        </div>\r\n        {peers.map(({ peerID, userName }) => (\r\n          <div className=\"video-block\" key={peerID}>\r\n            <video\r\n              playsInline\r\n              autoPlay\r\n              className=\"video\"\r\n              ref={(el) => {\r\n                if (el) videoRefs.current[peerID] = el;\r\n                else delete videoRefs.current[peerID];\r\n              }}\r\n            />\r\n            <p>{userName}</p>\r\n          </div>\r\n        ))}\r\n      </main>\r\n\r\n      <aside className=\"participants-panel\">\r\n        <div>\r\n          <h3>Participants ({participants.length + 1})</h3>\r\n          <ul>\r\n            <li key={userName + \"-self\"}>{userName} (You)</li>\r\n            {participants.map((pName) => (\r\n              <li key={pName}>{pName}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"controls\">\r\n          <button className=\"gold-btn\" onClick={toggleMic}>\r\n            {micOn ? \"Mute\" : \"Unmute\"}\r\n          </button>\r\n          <button className=\"gold-btn\" onClick={toggleCam}>\r\n            {camOn ? \"Video Off\" : \"Video On\"}\r\n          </button>\r\n          <button className=\"gold-btn\" onClick={handleScreenShare}>\r\n            {screenSharing ? \"Stop Sharing\" : \"Share Screen\"}\r\n          </button>\r\n          <button className=\"red-btn\" onClick={endMeeting}>\r\n            End Meeting\r\n          </button>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}