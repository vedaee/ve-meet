{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST - 3\\\\client\\\\src\\\\components\\\\GuestRoom.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Final GuestRoom.js with separate screen share block (UI untouched)\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./GuestRoom.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"https://192.168.29.23:5000\");\nconst GuestRoom = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [myStream, setMyStream] = useState();\n  const [myName, setMyName] = useState(\"\");\n  const [roomId, setRoomId] = useState(\"\");\n  const [joined, setJoined] = useState(false);\n  const [participants, setParticipants] = useState([]);\n  const [screenStream, setScreenStream] = useState(null);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  useEffect(() => {\n    socket.on(\"all-users\", users => {\n      const peers = [];\n      users.forEach(user => {\n        const peer = createPeer(user.socketId, socket.id, myStream);\n        peersRef.current.push({\n          peerID: user.socketId,\n          peer\n        });\n        peers.push({\n          peerID: user.socketId,\n          peer,\n          name: user.name\n        });\n      });\n      setPeers(peers);\n    });\n    socket.on(\"user-joined\", payload => {\n      const peer = addPeer(payload.signal, payload.callerID, myStream);\n      peersRef.current.push({\n        peerID: payload.callerID,\n        peer\n      });\n      setPeers(users => [...users, {\n        peerID: payload.callerID,\n        peer,\n        name: payload.name\n      }]);\n    });\n    socket.on(\"receiving-returned-signal\", payload => {\n      const item = peersRef.current.find(p => p.peerID === payload.id);\n      item.peer.signal(payload.signal);\n    });\n    socket.on(\"user-disconnected\", id => {\n      const updatedPeers = peersRef.current.filter(p => p.peerID !== id);\n      peersRef.current = updatedPeers;\n      setPeers(peers => peers.filter(p => p.peerID !== id));\n    });\n    socket.on(\"update-participant-list\", list => {\n      setParticipants(list);\n    });\n    socket.on(\"host-screen-share\", streamId => {\n      navigator.mediaDevices.getUserMedia({\n        video: false,\n        audio: false\n      }).then(() => {\n        const screenVideo = document.getElementById(\"host-screen-video\");\n        const screenTrack = new MediaStream();\n        const hostStream = new MediaStream();\n        socket.emit(\"request-screen-stream\", {\n          streamId\n        });\n        socket.on(\"screen-stream-data\", ({\n          id,\n          data\n        }) => {\n          if (id === streamId && screenVideo) {\n            const screen = new MediaStream();\n            screen.addTrack(data);\n            setScreenStream(screen);\n          }\n        });\n      });\n    });\n  }, [myStream]);\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal,\n        name: myName\n      });\n    });\n    return peer;\n  }\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  }\n  const handleJoin = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      setMyStream(stream);\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n      socket.emit(\"join-room\", {\n        roomId,\n        name: myName\n      });\n      setJoined(true);\n    } catch (err) {\n      console.error(\"Error accessing media devices.\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guest-room-container\",\n    children: !joined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your Name\",\n        value: myName,\n        onChange: e => setMyName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room Code\",\n        value: roomId,\n        onChange: e => setRoomId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoin,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          muted: true,\n          ref: userVideo,\n          autoPlay: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-tag\",\n          children: [myName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), peers.map((peerObj, index) => /*#__PURE__*/_jsxDEV(Video, {\n        peer: peerObj.peer,\n        name: peerObj.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)), screenStream && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block fullscreen-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          id: \"host-screen-video\",\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          ref: video => {\n            if (video && screenStream) {\n              video.srcObject = screenStream;\n            }\n          },\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-tag\",\n          children: \"Host Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participant-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Participants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: participants.map((p, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: p\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(GuestRoom, \"KUIkYKSwQi7BglzOUrABK09s4Bg=\");\n_c = GuestRoom;\nconst Video = ({\n  peer,\n  name\n}) => {\n  _s2();\n  const ref = useRef();\n  useEffect(() => {\n    peer.on(\"stream\", stream => {\n      if (ref.current) ref.current.srcObject = stream;\n    });\n  }, [peer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      playsInline: true,\n      autoPlay: true,\n      ref: ref,\n      className: \"video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-tag\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s2(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c2 = Video;\nexport default GuestRoom;\nvar _c, _c2;\n$RefreshReg$(_c, \"GuestRoom\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","socket","connect","GuestRoom","_s","peers","setPeers","myStream","setMyStream","myName","setMyName","roomId","setRoomId","joined","setJoined","participants","setParticipants","screenStream","setScreenStream","userVideo","peersRef","on","users","forEach","user","peer","createPeer","socketId","id","current","push","peerID","name","payload","addPeer","signal","callerID","item","find","p","updatedPeers","filter","list","streamId","navigator","mediaDevices","getUserMedia","video","audio","then","screenVideo","document","getElementById","screenTrack","MediaStream","hostStream","emit","data","screen","addTrack","userToSignal","stream","initiator","trickle","incomingSignal","handleJoin","srcObject","err","console","error","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","muted","ref","autoPlay","playsInline","map","peerObj","index","Video","idx","_c","_s2","_c2","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST - 3/client/src/components/GuestRoom.js"],"sourcesContent":["// Final GuestRoom.js with separate screen share block (UI untouched)\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./GuestRoom.css\";\r\n\r\nconst socket = io.connect(\"https://192.168.29.23:5000\");\r\n\r\nconst GuestRoom = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [myStream, setMyStream] = useState();\r\n  const [myName, setMyName] = useState(\"\");\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const [joined, setJoined] = useState(false);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [screenStream, setScreenStream] = useState(null);\r\n\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"all-users\", (users) => {\r\n      const peers = [];\r\n      users.forEach((user) => {\r\n        const peer = createPeer(user.socketId, socket.id, myStream);\r\n        peersRef.current.push({ peerID: user.socketId, peer });\r\n        peers.push({ peerID: user.socketId, peer, name: user.name });\r\n      });\r\n      setPeers(peers);\r\n    });\r\n\r\n    socket.on(\"user-joined\", (payload) => {\r\n      const peer = addPeer(payload.signal, payload.callerID, myStream);\r\n      peersRef.current.push({ peerID: payload.callerID, peer });\r\n      setPeers((users) => [...users, { peerID: payload.callerID, peer, name: payload.name }]);\r\n    });\r\n\r\n    socket.on(\"receiving-returned-signal\", (payload) => {\r\n      const item = peersRef.current.find(p => p.peerID === payload.id);\r\n      item.peer.signal(payload.signal);\r\n    });\r\n\r\n    socket.on(\"user-disconnected\", (id) => {\r\n      const updatedPeers = peersRef.current.filter(p => p.peerID !== id);\r\n      peersRef.current = updatedPeers;\r\n      setPeers(peers => peers.filter(p => p.peerID !== id));\r\n    });\r\n\r\n    socket.on(\"update-participant-list\", (list) => {\r\n      setParticipants(list);\r\n    });\r\n\r\n    socket.on(\"host-screen-share\", (streamId) => {\r\n      navigator.mediaDevices.getUserMedia({ video: false, audio: false }).then(() => {\r\n        const screenVideo = document.getElementById(\"host-screen-video\");\r\n        const screenTrack = new MediaStream();\r\n        const hostStream = new MediaStream();\r\n\r\n        socket.emit(\"request-screen-stream\", { streamId });\r\n\r\n        socket.on(\"screen-stream-data\", ({ id, data }) => {\r\n          if (id === streamId && screenVideo) {\r\n            const screen = new MediaStream();\r\n            screen.addTrack(data);\r\n            setScreenStream(screen);\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }, [myStream]);\r\n\r\n  function createPeer(userToSignal, callerID, stream) {\r\n    const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n    peer.on(\"signal\", signal => {\r\n      socket.emit(\"sending-signal\", { userToSignal, callerID, signal, name: myName });\r\n    });\r\n\r\n    return peer;\r\n  }\r\n\r\n  function addPeer(incomingSignal, callerID, stream) {\r\n    const peer = new Peer({ initiator: false, trickle: false, stream });\r\n    peer.signal(incomingSignal);\r\n    return peer;\r\n  }\r\n\r\n  const handleJoin = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n      setMyStream(stream);\r\n      if (userVideo.current) {\r\n        userVideo.current.srcObject = stream;\r\n      }\r\n      socket.emit(\"join-room\", { roomId, name: myName });\r\n      setJoined(true);\r\n    } catch (err) {\r\n      console.error(\"Error accessing media devices.\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"guest-room-container\">\r\n      {!joined ? (\r\n        <div className=\"join-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Your Name\"\r\n            value={myName}\r\n            onChange={(e) => setMyName(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Room Code\"\r\n            value={roomId}\r\n            onChange={(e) => setRoomId(e.target.value)}\r\n          />\r\n          <button onClick={handleJoin}>Join</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"video-grid\">\r\n          <div className=\"video-block\">\r\n            <video muted ref={userVideo} autoPlay playsInline className=\"video\" />\r\n            <div className=\"name-tag\">{myName} (You)</div>\r\n          </div>\r\n\r\n          {peers.map((peerObj, index) => (\r\n            <Video key={index} peer={peerObj.peer} name={peerObj.name} />\r\n          ))}\r\n\r\n          {screenStream && (\r\n            <div className=\"video-block fullscreen-screen\">\r\n              <video\r\n                id=\"host-screen-video\"\r\n                autoPlay\r\n                playsInline\r\n                muted\r\n                ref={(video) => {\r\n                  if (video && screenStream) {\r\n                    video.srcObject = screenStream;\r\n                  }\r\n                }}\r\n                className=\"video\"\r\n              />\r\n              <div className=\"name-tag\">Host Screen</div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"participant-list\">\r\n            <h4>Participants</h4>\r\n            <ul>\r\n              {participants.map((p, idx) => (\r\n                <li key={idx}>{p}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Video = ({ peer, name }) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    peer.on(\"stream\", stream => {\r\n      if (ref.current) ref.current.srcObject = stream;\r\n    });\r\n  }, [peer]);\r\n\r\n  return (\r\n    <div className=\"video-block\">\r\n      <video playsInline autoPlay ref={ref} className=\"video\" />\r\n      <div className=\"name-tag\">{name}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GuestRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}