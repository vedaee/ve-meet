{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST - 3\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Room = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [participants, setParticipants] = useState([]);\n  const [stream, setStream] = useState();\n  const [screenStream, setScreenStream] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\");\n  const [joined, setJoined] = useState(false);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const socketRef = useRef();\n  const screenSharingRef = useRef(false);\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const nameParam = urlParams.get(\"name\");\n    const roomParam = urlParams.get(\"room\");\n    if (nameParam && roomParam) {\n      setName(nameParam);\n      setRoomID(roomParam);\n    }\n  }, []);\n  const handleJoin = () => {\n    socketRef.current = io.connect(\"https://192.168.29.23:5000\");\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n      socketRef.current.emit(\"join-room\", {\n        roomID,\n        name\n      });\n      socketRef.current.on(\"all-users\", users => {\n        const peers = [];\n        users.forEach(({\n          socketID,\n          userName\n        }) => {\n          const peer = createPeer(socketID, socketRef.current.id, stream);\n          peersRef.current.push({\n            peerID: socketID,\n            peer,\n            userName\n          });\n          peers.push({\n            peerID: socketID,\n            peer,\n            userName\n          });\n        });\n        setPeers(peers);\n      });\n      socketRef.current.on(\"user-joined\", ({\n        signal,\n        callerID,\n        userName\n      }) => {\n        const peer = addPeer(signal, callerID, stream);\n        peersRef.current.push({\n          peerID: callerID,\n          peer,\n          userName\n        });\n        setPeers(users => [...users, {\n          peerID: callerID,\n          peer,\n          userName\n        }]);\n      });\n      socketRef.current.on(\"receiving-returned-signal\", ({\n        id,\n        signal\n      }) => {\n        const item = peersRef.current.find(p => p.peerID === id);\n        if (item) item.peer.signal(signal);\n      });\n      socketRef.current.on(\"user-left\", id => {\n        const peerObj = peersRef.current.find(p => p.peerID === id);\n        if (peerObj) {\n          peerObj.peer.destroy();\n        }\n        peersRef.current = peersRef.current.filter(p => p.peerID !== id);\n        setPeers(peers => peers.filter(p => p.peerID !== id));\n      });\n      socketRef.current.on(\"update-participants\", list => {\n        setParticipants(list);\n      });\n    });\n    setJoined(true);\n  };\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal,\n        userName: name\n      });\n    });\n    return peer;\n  };\n  const addPeer = (incomingSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"returning-signal\", {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  };\n  const startScreenShare = async () => {\n    if (screenSharingRef.current) return;\n    try {\n      const screen = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      setScreenStream(screen);\n      screenSharingRef.current = true;\n\n      // Send screen as new peer to everyone\n      peersRef.current.forEach(({\n        peerID\n      }) => {\n        const screenPeer = new Peer({\n          initiator: true,\n          trickle: false,\n          stream: screen\n        });\n        screenPeer.on(\"signal\", signal => {\n          socketRef.current.emit(\"sending-signal\", {\n            userToSignal: peerID,\n            callerID: socketRef.current.id + \"-screen\",\n            signal,\n            userName: \"📺 Shared Screen\",\n            isScreen: true\n          });\n        });\n      });\n      screen.getTracks()[0].onended = () => {\n        stopScreenShare();\n      };\n    } catch (err) {\n      console.error(\"Error sharing screen\", err);\n    }\n  };\n  const stopScreenShare = () => {\n    if (!screenStream) return;\n    screenStream.getTracks().forEach(track => track.stop());\n    setScreenStream(null);\n    screenSharingRef.current = false;\n  };\n  const toggleMic = () => {\n    stream.getAudioTracks()[0].enabled = !stream.getAudioTracks()[0].enabled;\n  };\n  const toggleCamera = () => {\n    stream.getVideoTracks()[0].enabled = !stream.getVideoTracks()[0].enabled;\n  };\n  const endMeeting = () => {\n    peersRef.current.forEach(p => p.peer.destroy());\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n    }\n    if (screenStream) {\n      screenStream.getTracks().forEach(track => track.stop());\n    }\n    socketRef.current.disconnect();\n    window.location.href = \"/\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"room-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-text\",\n        children: [\"Ve \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Meet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-code\",\n          children: [\"Room: \", roomID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"your-name\",\n          children: [\"You: \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), !joined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"join-btn\",\n        onClick: handleJoin,\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: userVideo,\n            autoPlay: true,\n            muted: true,\n            playsInline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-name\",\n            children: [name, \" (You)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), peers.map(peer => /*#__PURE__*/_jsxDEV(Video, {\n          peer: peer.peer,\n          name: peer.userName\n        }, peer.peerID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMic,\n          children: \"\\uD83C\\uDFA4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleCamera,\n          children: \"\\uD83D\\uDCF7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startScreenShare,\n          children: \"\\uD83D\\uDDA5\\uFE0F Share Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: endMeeting,\n          children: \"\\u274C End\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participants-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Participants (\", participants.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: participants.map((p, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: p\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 43\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"xFzKt9vtDduwRv8GWE6ZHaWsYFY=\");\n_c = Room;\nconst Video = ({\n  peer,\n  name\n}) => {\n  _s2();\n  const ref = useRef();\n  useEffect(() => {\n    peer.on(\"stream\", stream => {\n      if (ref.current) {\n        ref.current.srcObject = stream;\n      }\n    });\n  }, [peer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      playsInline: true,\n      autoPlay: true,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-name\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s2(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c2 = Video;\nexport default Room;\nvar _c, _c2;\n$RefreshReg$(_c, \"Room\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","Room","_s","peers","setPeers","participants","setParticipants","stream","setStream","screenStream","setScreenStream","name","setName","roomID","setRoomID","joined","setJoined","userVideo","peersRef","socketRef","screenSharingRef","urlParams","URLSearchParams","window","location","search","nameParam","get","roomParam","handleJoin","current","connect","navigator","mediaDevices","getUserMedia","video","audio","then","srcObject","emit","on","users","forEach","socketID","userName","peer","createPeer","id","push","peerID","signal","callerID","addPeer","item","find","p","peerObj","destroy","filter","list","userToSignal","initiator","trickle","incomingSignal","startScreenShare","screen","getDisplayMedia","screenPeer","isScreen","getTracks","onended","stopScreenShare","err","console","error","track","stop","toggleMic","getAudioTracks","enabled","toggleCamera","getVideoTracks","endMeeting","disconnect","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","autoPlay","muted","playsInline","map","Video","length","i","_c","_s2","_c2","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST - 3/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./Room.css\";\r\n\r\nconst Room = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [stream, setStream] = useState();\r\n  const [screenStream, setScreenStream] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [joined, setJoined] = useState(false);\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const socketRef = useRef();\r\n  const screenSharingRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const nameParam = urlParams.get(\"name\");\r\n    const roomParam = urlParams.get(\"room\");\r\n\r\n    if (nameParam && roomParam) {\r\n      setName(nameParam);\r\n      setRoomID(roomParam);\r\n    }\r\n  }, []);\r\n\r\n  const handleJoin = () => {\r\n    socketRef.current = io.connect(\"https://192.168.29.23:5000\");\r\n\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n      setStream(stream);\r\n      if (userVideo.current) {\r\n        userVideo.current.srcObject = stream;\r\n      }\r\n\r\n      socketRef.current.emit(\"join-room\", { roomID, name });\r\n\r\n      socketRef.current.on(\"all-users\", (users) => {\r\n        const peers = [];\r\n        users.forEach(({ socketID, userName }) => {\r\n          const peer = createPeer(socketID, socketRef.current.id, stream);\r\n          peersRef.current.push({ peerID: socketID, peer, userName });\r\n          peers.push({ peerID: socketID, peer, userName });\r\n        });\r\n        setPeers(peers);\r\n      });\r\n\r\n      socketRef.current.on(\"user-joined\", ({ signal, callerID, userName }) => {\r\n        const peer = addPeer(signal, callerID, stream);\r\n        peersRef.current.push({ peerID: callerID, peer, userName });\r\n        setPeers((users) => [...users, { peerID: callerID, peer, userName }]);\r\n      });\r\n\r\n      socketRef.current.on(\"receiving-returned-signal\", ({ id, signal }) => {\r\n        const item = peersRef.current.find(p => p.peerID === id);\r\n        if (item) item.peer.signal(signal);\r\n      });\r\n\r\n      socketRef.current.on(\"user-left\", (id) => {\r\n        const peerObj = peersRef.current.find(p => p.peerID === id);\r\n        if (peerObj) {\r\n          peerObj.peer.destroy();\r\n        }\r\n        peersRef.current = peersRef.current.filter(p => p.peerID !== id);\r\n        setPeers(peers => peers.filter(p => p.peerID !== id));\r\n      });\r\n\r\n      socketRef.current.on(\"update-participants\", (list) => {\r\n        setParticipants(list);\r\n      });\r\n    });\r\n\r\n    setJoined(true);\r\n  };\r\n\r\n  const createPeer = (userToSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", signal => {\r\n      socketRef.current.emit(\"sending-signal\", {\r\n        userToSignal,\r\n        callerID,\r\n        signal,\r\n        userName: name,\r\n      });\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (incomingSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", signal => {\r\n      socketRef.current.emit(\"returning-signal\", { signal, callerID });\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n    return peer;\r\n  };\r\n\r\n  const startScreenShare = async () => {\r\n    if (screenSharingRef.current) return;\r\n\r\n    try {\r\n      const screen = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n      setScreenStream(screen);\r\n      screenSharingRef.current = true;\r\n\r\n      // Send screen as new peer to everyone\r\n      peersRef.current.forEach(({ peerID }) => {\r\n        const screenPeer = new Peer({\r\n          initiator: true,\r\n          trickle: false,\r\n          stream: screen,\r\n        });\r\n\r\n        screenPeer.on(\"signal\", (signal) => {\r\n          socketRef.current.emit(\"sending-signal\", {\r\n            userToSignal: peerID,\r\n            callerID: socketRef.current.id + \"-screen\",\r\n            signal,\r\n            userName: \"📺 Shared Screen\",\r\n            isScreen: true,\r\n          });\r\n        });\r\n      });\r\n\r\n      screen.getTracks()[0].onended = () => {\r\n        stopScreenShare();\r\n      };\r\n    } catch (err) {\r\n      console.error(\"Error sharing screen\", err);\r\n    }\r\n  };\r\n\r\n  const stopScreenShare = () => {\r\n    if (!screenStream) return;\r\n    screenStream.getTracks().forEach(track => track.stop());\r\n    setScreenStream(null);\r\n    screenSharingRef.current = false;\r\n  };\r\n\r\n  const toggleMic = () => {\r\n    stream.getAudioTracks()[0].enabled = !stream.getAudioTracks()[0].enabled;\r\n  };\r\n\r\n  const toggleCamera = () => {\r\n    stream.getVideoTracks()[0].enabled = !stream.getVideoTracks()[0].enabled;\r\n  };\r\n\r\n  const endMeeting = () => {\r\n    peersRef.current.forEach(p => p.peer.destroy());\r\n    if (stream) {\r\n      stream.getTracks().forEach(track => track.stop());\r\n    }\r\n    if (screenStream) {\r\n      screenStream.getTracks().forEach(track => track.stop());\r\n    }\r\n    socketRef.current.disconnect();\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <header className=\"room-header\">\r\n        <div className=\"logo-text\">Ve <span>Meet</span></div>\r\n        <div className=\"room-info\">\r\n          <div className=\"room-code\">Room: {roomID}</div>\r\n          <div className=\"your-name\">You: {name}</div>\r\n        </div>\r\n      </header>\r\n\r\n      {!joined ? (\r\n        <div className=\"join-screen\">\r\n          <button className=\"join-btn\" onClick={handleJoin}>Join Room</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"room-content\">\r\n          <div className=\"video-grid\">\r\n            <div className=\"video-block\">\r\n              <video ref={userVideo} autoPlay muted playsInline />\r\n              <div className=\"video-name\">{name} (You)</div>\r\n            </div>\r\n            {peers.map((peer) => (\r\n              <Video key={peer.peerID} peer={peer.peer} name={peer.userName} />\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"controls\">\r\n            <button onClick={toggleMic}>🎤</button>\r\n            <button onClick={toggleCamera}>📷</button>\r\n            <button onClick={startScreenShare}>🖥️ Share Screen</button>\r\n            <button onClick={endMeeting}>❌ End</button>\r\n          </div>\r\n\r\n          <div className=\"participants-panel\">\r\n            <h4>Participants ({participants.length})</h4>\r\n            <ul>\r\n              {participants.map((p, i) => <li key={i}>{p}</li>)}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Video = ({ peer, name }) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    peer.on(\"stream\", stream => {\r\n      if (ref.current) {\r\n        ref.current.srcObject = stream;\r\n      }\r\n    });\r\n  }, [peer]);\r\n\r\n  return (\r\n    <div className=\"video-block\">\r\n      <video playsInline autoPlay ref={ref} />\r\n      <div className=\"video-name\">{name}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}