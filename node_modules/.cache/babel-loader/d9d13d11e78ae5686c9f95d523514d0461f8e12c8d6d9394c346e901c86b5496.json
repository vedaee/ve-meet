{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST - 3\\\\client\\\\src\\\\components\\\\GuestRoom.js\",\n  _s = $RefreshSig$();\n// GuestRoom.js\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./GuestRoom.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || \"https://192.168.29.23:5000\";\nconst socket = io(SERVER_URL, {\n  secure: true,\n  reconnection: true,\n  rejectUnauthorized: false\n});\nconst GuestRoom = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [participants, setParticipants] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\");\n  const [micOn, setMicOn] = useState(true);\n  const [camOn, setCamOn] = useState(true);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const streamRef = useRef();\n  const videoRefs = useRef({});\n  const [screenSharerID, setScreenSharerID] = useState(null);\n  useEffect(() => {\n    const name = prompt(\"Enter your name\");\n    const room = prompt(\"Enter room code\");\n    setUserName(name);\n    setRoomID(room);\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      streamRef.current = stream;\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n      socket.emit(\"join-room\", {\n        roomId: room,\n        userName: name\n      });\n      socket.on(\"all-users\", users => {\n        const newPeers = [];\n        users.forEach(user => {\n          if (user.id === socket.id) return;\n          const peer = createPeer(user.id, socket.id, stream);\n          peersRef.current.push({\n            peerID: user.id,\n            peer,\n            userName: user.name\n          });\n          newPeers.push({\n            peerID: user.id,\n            peer,\n            userName: user.name\n          });\n        });\n        setPeers(newPeers);\n        setParticipants(users.map(u => u.name));\n      });\n      socket.on(\"user-joined\", payload => {\n        const peer = addPeer(payload.signal, payload.id, payload.name, stream);\n        peersRef.current.push({\n          peerID: payload.id,\n          peer,\n          userName: payload.name\n        });\n        setPeers(users => [...users, {\n          peerID: payload.id,\n          peer,\n          userName: payload.name\n        }]);\n        setParticipants(list => {\n          if (!list.includes(payload.name)) return [...list, payload.name];\n          return list;\n        });\n      });\n      socket.on(\"receiving-returned-signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        if (item && item.peer) {\n          item.peer.signal(payload.signal);\n        }\n      });\n      socket.on(\"user-disconnected\", id => {\n        setPeers(users => users.filter(p => p.peerID !== id));\n        peersRef.current = peersRef.current.filter(p => p.peerID !== id);\n        setParticipants(peersRef.current.map(p => p.userName));\n        delete videoRefs.current[id];\n        if (screenSharerID === id) setScreenSharerID(null);\n      });\n    }).catch(err => {\n      console.error(\"Media Device Error:\", err);\n      alert(\"Could not access camera/microphone.\");\n    });\n    return () => {\n      socket.disconnect();\n      peersRef.current.forEach(({\n        peer\n      }) => peer.destroy());\n      if (streamRef.current) streamRef.current.getTracks().forEach(t => t.stop());\n    };\n  }, []);\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const videoElem = videoRefs.current[userToSignal];\n      if (videoElem) {\n        var _remoteStream$getVide, _remoteStream$getVide2;\n        videoElem.srcObject = remoteStream;\n        const trackLabel = ((_remoteStream$getVide = remoteStream.getVideoTracks()) === null || _remoteStream$getVide === void 0 ? void 0 : (_remoteStream$getVide2 = _remoteStream$getVide[0]) === null || _remoteStream$getVide2 === void 0 ? void 0 : _remoteStream$getVide2.label) || \"\";\n        if (trackLabel.toLowerCase().includes(\"screen\")) {\n          var _videoElem$requestFul;\n          setScreenSharerID(userToSignal);\n\n          // Try fullscreen\n          (_videoElem$requestFul = videoElem.requestFullscreen) === null || _videoElem$requestFul === void 0 ? void 0 : _videoElem$requestFul.call(videoElem).catch(err => console.warn(\"Fullscreen request failed:\", err));\n        }\n      }\n    });\n    peer.on(\"error\", err => {\n      console.error(\"Peer error (createPeer):\", err);\n    });\n    return peer;\n  };\n  const addPeer = (incomingSignal, callerId, name, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"returning-signal\", {\n        signal,\n        callerID: callerId\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const videoElem = videoRefs.current[callerId];\n      if (videoElem) {\n        var _remoteStream$getVide3, _remoteStream$getVide4;\n        videoElem.srcObject = remoteStream;\n        const trackLabel = ((_remoteStream$getVide3 = remoteStream.getVideoTracks()) === null || _remoteStream$getVide3 === void 0 ? void 0 : (_remoteStream$getVide4 = _remoteStream$getVide3[0]) === null || _remoteStream$getVide4 === void 0 ? void 0 : _remoteStream$getVide4.label) || \"\";\n        if (trackLabel.toLowerCase().includes(\"screen\")) {\n          var _videoElem$requestFul2;\n          setScreenSharerID(callerId);\n\n          // Try fullscreen\n          (_videoElem$requestFul2 = videoElem.requestFullscreen) === null || _videoElem$requestFul2 === void 0 ? void 0 : _videoElem$requestFul2.call(videoElem).catch(err => console.warn(\"Fullscreen request failed:\", err));\n        }\n      }\n    });\n    peer.on(\"error\", err => {\n      console.error(\"Peer error (addPeer):\", err);\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  };\n  const toggleMic = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getAudioTracks().forEach(track => {\n      track.enabled = !micOn;\n    });\n    setMicOn(!micOn);\n  };\n  const toggleCam = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getVideoTracks().forEach(track => {\n      track.enabled = !camOn;\n    });\n    setCamOn(!camOn);\n  };\n  const leaveMeeting = () => {\n    peersRef.current.forEach(({\n      peer\n    }) => peer.destroy());\n    peersRef.current = [];\n    if (streamRef.current) streamRef.current.getTracks().forEach(track => track.stop());\n    socket.disconnect();\n    window.location.href = \"/guest\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guest-room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"guest-room-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logo\",\n        children: [\"Ve \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gold\",\n          children: \"Meet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Room: \", roomID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"You: \", userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          muted: true,\n          ref: userVideo,\n          autoPlay: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), peers.map(({\n        peerID,\n        userName\n      }) => {\n        const isScreenSharer = screenSharerID === peerID;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `video-block ${isScreenSharer ? \"fullscreen-video\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            playsInline: true,\n            autoPlay: true,\n            className: \"video\",\n            ref: el => {\n              if (el) {\n                videoRefs.current[peerID] = el;\n                if (isScreenSharer && el.requestFullscreen) {\n                  el.requestFullscreen().catch(err => console.warn(\"Fullscreen error:\", err));\n                }\n              } else {\n                delete videoRefs.current[peerID];\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), !isScreenSharer && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 35\n          }, this)]\n        }, peerID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"participants-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Participants (\", participants.length + 1, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [userName, \" (You)\"]\n        }, userName + \"-self\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), participants.map((pName, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: pName\n        }, `${pName}-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMic,\n          children: micOn ? \"Mute\" : \"Unmute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleCam,\n          children: camOn ? \"Video Off\" : \"Video On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"end-btn\",\n          onClick: leaveMeeting,\n          children: \"Leave Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(GuestRoom, \"qpBfomWPjTyM5Mre98wimXHQYUw=\");\n_c = GuestRoom;\nexport default GuestRoom;\nvar _c;\n$RefreshReg$(_c, \"GuestRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","SERVER_URL","process","env","REACT_APP_SERVER_URL","socket","secure","reconnection","rejectUnauthorized","GuestRoom","_s","peers","setPeers","participants","setParticipants","userName","setUserName","roomID","setRoomID","micOn","setMicOn","camOn","setCamOn","userVideo","peersRef","streamRef","videoRefs","screenSharerID","setScreenSharerID","name","prompt","room","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","emit","roomId","on","users","newPeers","forEach","user","id","peer","createPeer","push","peerID","map","u","payload","addPeer","signal","list","includes","item","find","p","filter","catch","err","console","error","alert","disconnect","destroy","getTracks","t","stop","userToSignal","callerID","initiator","trickle","remoteStream","videoElem","_remoteStream$getVide","_remoteStream$getVide2","trackLabel","getVideoTracks","label","toLowerCase","_videoElem$requestFul","requestFullscreen","call","warn","incomingSignal","callerId","_remoteStream$getVide3","_remoteStream$getVide4","_videoElem$requestFul2","toggleMic","getAudioTracks","track","enabled","toggleCam","leaveMeeting","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","muted","ref","autoPlay","playsInline","isScreenSharer","el","length","pName","idx","onClick","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST - 3/client/src/components/GuestRoom.js"],"sourcesContent":["// GuestRoom.js\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./GuestRoom.css\";\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || \"https://192.168.29.23:5000\";\r\n\r\nconst socket = io(SERVER_URL, {\r\n  secure: true,\r\n  reconnection: true,\r\n  rejectUnauthorized: false,\r\n});\r\n\r\nconst GuestRoom = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [micOn, setMicOn] = useState(true);\r\n  const [camOn, setCamOn] = useState(true);\r\n\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const streamRef = useRef();\r\n  const videoRefs = useRef({});\r\n  const [screenSharerID, setScreenSharerID] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const name = prompt(\"Enter your name\");\r\n    const room = prompt(\"Enter room code\");\r\n    setUserName(name);\r\n    setRoomID(room);\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        streamRef.current = stream;\r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = stream;\r\n        }\r\n\r\n        socket.emit(\"join-room\", { roomId: room, userName: name });\r\n\r\n        socket.on(\"all-users\", (users) => {\r\n          const newPeers = [];\r\n          users.forEach((user) => {\r\n            if (user.id === socket.id) return;\r\n            const peer = createPeer(user.id, socket.id, stream);\r\n            peersRef.current.push({ peerID: user.id, peer, userName: user.name });\r\n            newPeers.push({ peerID: user.id, peer, userName: user.name });\r\n          });\r\n          setPeers(newPeers);\r\n          setParticipants(users.map((u) => u.name));\r\n        });\r\n\r\n        socket.on(\"user-joined\", (payload) => {\r\n          const peer = addPeer(payload.signal, payload.id, payload.name, stream);\r\n          peersRef.current.push({ peerID: payload.id, peer, userName: payload.name });\r\n          setPeers((users) => [...users, { peerID: payload.id, peer, userName: payload.name }]);\r\n          setParticipants((list) => {\r\n            if (!list.includes(payload.name)) return [...list, payload.name];\r\n            return list;\r\n          });\r\n        });\r\n\r\n        socket.on(\"receiving-returned-signal\", (payload) => {\r\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\r\n          if (item && item.peer) {\r\n            item.peer.signal(payload.signal);\r\n          }\r\n        });\r\n\r\n        socket.on(\"user-disconnected\", (id) => {\r\n          setPeers((users) => users.filter((p) => p.peerID !== id));\r\n          peersRef.current = peersRef.current.filter((p) => p.peerID !== id);\r\n          setParticipants(peersRef.current.map((p) => p.userName));\r\n          delete videoRefs.current[id];\r\n          if (screenSharerID === id) setScreenSharerID(null);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Media Device Error:\", err);\r\n        alert(\"Could not access camera/microphone.\");\r\n      });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      peersRef.current.forEach(({ peer }) => peer.destroy());\r\n      if (streamRef.current) streamRef.current.getTracks().forEach((t) => t.stop());\r\n    };\r\n  }, []);\r\n\r\n  const createPeer = (userToSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"sending-signal\", { userToSignal, callerID, signal });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const videoElem = videoRefs.current[userToSignal];\r\n      if (videoElem) {\r\n        videoElem.srcObject = remoteStream;\r\n\r\n        const trackLabel = remoteStream.getVideoTracks()?.[0]?.label || \"\";\r\n        if (trackLabel.toLowerCase().includes(\"screen\")) {\r\n          setScreenSharerID(userToSignal);\r\n\r\n          // Try fullscreen\r\n          videoElem.requestFullscreen?.().catch((err) =>\r\n            console.warn(\"Fullscreen request failed:\", err)\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    peer.on(\"error\", (err) => {\r\n      console.error(\"Peer error (createPeer):\", err);\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (incomingSignal, callerId, name, stream) => {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"returning-signal\", { signal, callerID: callerId });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const videoElem = videoRefs.current[callerId];\r\n      if (videoElem) {\r\n        videoElem.srcObject = remoteStream;\r\n\r\n        const trackLabel = remoteStream.getVideoTracks()?.[0]?.label || \"\";\r\n        if (trackLabel.toLowerCase().includes(\"screen\")) {\r\n          setScreenSharerID(callerId);\r\n\r\n          // Try fullscreen\r\n          videoElem.requestFullscreen?.().catch((err) =>\r\n            console.warn(\"Fullscreen request failed:\", err)\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    peer.on(\"error\", (err) => {\r\n      console.error(\"Peer error (addPeer):\", err);\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n\r\n    return peer;\r\n  };\r\n\r\n  const toggleMic = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getAudioTracks().forEach((track) => {\r\n      track.enabled = !micOn;\r\n    });\r\n    setMicOn(!micOn);\r\n  };\r\n\r\n  const toggleCam = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getVideoTracks().forEach((track) => {\r\n      track.enabled = !camOn;\r\n    });\r\n    setCamOn(!camOn);\r\n  };\r\n\r\n  const leaveMeeting = () => {\r\n    peersRef.current.forEach(({ peer }) => peer.destroy());\r\n    peersRef.current = [];\r\n    if (streamRef.current) streamRef.current.getTracks().forEach((track) => track.stop());\r\n    socket.disconnect();\r\n    window.location.href = \"/guest\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"guest-room-container\">\r\n      <header className=\"guest-room-header\">\r\n        <h2 className=\"logo\">\r\n          Ve <span className=\"gold\">Meet</span>\r\n        </h2>\r\n        <div>\r\n          <span>Room: {roomID}</span>\r\n          <span className=\"username\">You: {userName}</span>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"video-grid\">\r\n        <div className=\"video-block\">\r\n          <video muted ref={userVideo} autoPlay playsInline className=\"video\" />\r\n          <p>{userName} (You)</p>\r\n        </div>\r\n\r\n        {peers.map(({ peerID, userName }) => {\r\n          const isScreenSharer = screenSharerID === peerID;\r\n\r\n          return (\r\n            <div\r\n              className={`video-block ${isScreenSharer ? \"fullscreen-video\" : \"\"}`}\r\n              key={peerID}\r\n            >\r\n              <video\r\n                playsInline\r\n                autoPlay\r\n                className=\"video\"\r\n                ref={(el) => {\r\n                  if (el) {\r\n                    videoRefs.current[peerID] = el;\r\n\r\n                    if (isScreenSharer && el.requestFullscreen) {\r\n                      el.requestFullscreen().catch((err) =>\r\n                        console.warn(\"Fullscreen error:\", err)\r\n                      );\r\n                    }\r\n                  } else {\r\n                    delete videoRefs.current[peerID];\r\n                  }\r\n                }}\r\n              />\r\n              {!isScreenSharer && <p>{userName}</p>}\r\n            </div>\r\n          );\r\n        })}\r\n      </main>\r\n\r\n      <aside className=\"participants-panel\">\r\n        <h3>Participants ({participants.length + 1})</h3>\r\n        <ul>\r\n          <li key={userName + \"-self\"}>{userName} (You)</li>\r\n          {participants.map((pName, idx) => (\r\n            <li key={`${pName}-${idx}`}>{pName}</li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"controls\">\r\n          <button onClick={toggleMic}>{micOn ? \"Mute\" : \"Unmute\"}</button>\r\n          <button onClick={toggleCam}>{camOn ? \"Video Off\" : \"Video On\"}</button>\r\n          <button className=\"end-btn\" onClick={leaveMeeting}>\r\n            Leave Meeting\r\n          </button>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GuestRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}