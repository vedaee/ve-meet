{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\n// src/components/Room.js\nimport React, { useEffect, useRef, useState } from \"react\";\nimport socket from \"../socket\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Room = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const localVideoRef = useRef(null);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState([]);\n  const [peerConnections, setPeerConnections] = useState({});\n  const [availableCameras, setAvailableCameras] = useState([]);\n  const [selectedCameraId, setSelectedCameraId] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  useEffect(() => {\n    const storedName = localStorage.getItem(\"userName\") || \"Guest\";\n    setUserName(storedName);\n    socket.emit(\"join-room\", {\n      roomId,\n      userName: storedName\n    });\n    getDevices();\n    return () => {\n      socket.disconnect();\n      Object.values(peerConnections).forEach(pc => pc.close());\n    };\n  }, []);\n  useEffect(() => {\n    if (selectedCameraId) {\n      initMedia();\n    }\n  }, [selectedCameraId]);\n  const getDevices = async () => {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const cameras = devices.filter(d => d.kind === \"videoinput\");\n    setAvailableCameras(cameras);\n    if (cameras[0]) setSelectedCameraId(cameras[0].deviceId);\n  };\n  const initMedia = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          deviceId: selectedCameraId ? {\n            exact: selectedCameraId\n          } : undefined\n        },\n        audio: true\n      });\n      setLocalStream(stream);\n      localVideoRef.current.srcObject = stream;\n      socket.emit(\"ready\", roomId);\n    } catch (err) {\n      console.error(\"Media error:\", err);\n    }\n  };\n  const createPeerConnection = socketId => {\n    const pc = new RTCPeerConnection();\n    pc.onicecandidate = event => {\n      if (event.candidate) {\n        socket.emit(\"ice-candidate\", {\n          to: socketId,\n          candidate: event.candidate\n        });\n      }\n    };\n    pc.ontrack = event => {\n      const remoteStream = new MediaStream([event.track]);\n      setRemoteStreams(prev => [...prev, {\n        id: socketId,\n        stream: remoteStream\n      }]);\n    };\n    return pc;\n  };\n\n  // SOCKET EVENTS\n  useEffect(() => {\n    if (!localStream) return;\n    socket.on(\"user-joined\", async ({\n      socketId\n    }) => {\n      const pc = createPeerConnection(socketId);\n      peerConnections[socketId] = pc;\n      setPeerConnections({\n        ...peerConnections\n      });\n      localStream.getTracks().forEach(track => pc.addTrack(track, localStream));\n      const offer = await pc.createOffer();\n      await pc.setLocalDescription(offer);\n      socket.emit(\"offer\", {\n        to: socketId,\n        offer\n      });\n    });\n    socket.on(\"offer\", async ({\n      from,\n      offer\n    }) => {\n      const pc = createPeerConnection(from);\n      peerConnections[from] = pc;\n      setPeerConnections({\n        ...peerConnections\n      });\n      localStream.getTracks().forEach(track => pc.addTrack(track, localStream));\n      await pc.setRemoteDescription(new RTCSessionDescription(offer));\n      const answer = await pc.createAnswer();\n      await pc.setLocalDescription(answer);\n      socket.emit(\"answer\", {\n        to: from,\n        answer\n      });\n    });\n    socket.on(\"answer\", async ({\n      from,\n      answer\n    }) => {\n      const pc = peerConnections[from];\n      if (pc) await pc.setRemoteDescription(new RTCSessionDescription(answer));\n    });\n    socket.on(\"ice-candidate\", ({\n      from,\n      candidate\n    }) => {\n      const pc = peerConnections[from];\n      if (pc && candidate) pc.addIceCandidate(new RTCIceCandidate(candidate));\n    });\n    socket.on(\"user-disconnected\", socketId => {\n      const pc = peerConnections[socketId];\n      if (pc) pc.close();\n      delete peerConnections[socketId];\n      setRemoteStreams(prev => prev.filter(s => s.id !== socketId));\n    });\n    return () => {\n      socket.off(\"user-joined\");\n      socket.off(\"offer\");\n      socket.off(\"answer\");\n      socket.off(\"ice-candidate\");\n      socket.off(\"user-disconnected\");\n    };\n  }, [localStream]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Room ID: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Welcome: \", userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Camera:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedCameraId(e.target.value),\n        value: selectedCameraId,\n        children: availableCameras.map(cam => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cam.deviceId,\n          children: cam.label || `Camera ${cam.deviceId}`\n        }, cam.deviceId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: localVideoRef,\n        autoPlay: true,\n        playsInline: true,\n        muted: true,\n        style: {\n          width: \"300px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: remoteStreams.map(({\n        id,\n        stream\n      }) => /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        playsInline: true,\n        style: {\n          width: \"300px\",\n          margin: \"10px\"\n        },\n        ref: video => {\n          if (video) video.srcObject = stream;\n        }\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"RKLM9O4Hx/rLVKyRYxr2JhBYmig=\", false, function () {\n  return [useParams];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","socket","useParams","jsxDEV","_jsxDEV","Room","_s","roomId","localVideoRef","localStream","setLocalStream","remoteStreams","setRemoteStreams","peerConnections","setPeerConnections","availableCameras","setAvailableCameras","selectedCameraId","setSelectedCameraId","userName","setUserName","storedName","localStorage","getItem","emit","getDevices","disconnect","Object","values","forEach","pc","close","initMedia","devices","navigator","mediaDevices","enumerateDevices","cameras","filter","d","kind","deviceId","stream","getUserMedia","video","exact","undefined","audio","current","srcObject","err","console","error","createPeerConnection","socketId","RTCPeerConnection","onicecandidate","event","candidate","to","ontrack","remoteStream","MediaStream","track","prev","id","on","getTracks","addTrack","offer","createOffer","setLocalDescription","from","setRemoteDescription","RTCSessionDescription","answer","createAnswer","addIceCandidate","RTCIceCandidate","s","off","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","cam","label","ref","autoPlay","playsInline","muted","style","width","display","flexWrap","margin","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet/client/src/components/Room.js"],"sourcesContent":["// src/components/Room.js\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport socket from \"../socket\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Room = () => {\r\n  const { roomId } = useParams();\r\n  const localVideoRef = useRef(null);\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const [remoteStreams, setRemoteStreams] = useState([]);\r\n  const [peerConnections, setPeerConnections] = useState({});\r\n  const [availableCameras, setAvailableCameras] = useState([]);\r\n  const [selectedCameraId, setSelectedCameraId] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const storedName = localStorage.getItem(\"userName\") || \"Guest\";\r\n    setUserName(storedName);\r\n\r\n    socket.emit(\"join-room\", { roomId, userName: storedName });\r\n\r\n    getDevices();\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      Object.values(peerConnections).forEach((pc) => pc.close());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCameraId) {\r\n      initMedia();\r\n    }\r\n  }, [selectedCameraId]);\r\n\r\n  const getDevices = async () => {\r\n    const devices = await navigator.mediaDevices.enumerateDevices();\r\n    const cameras = devices.filter((d) => d.kind === \"videoinput\");\r\n    setAvailableCameras(cameras);\r\n    if (cameras[0]) setSelectedCameraId(cameras[0].deviceId);\r\n  };\r\n\r\n  const initMedia = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: { deviceId: selectedCameraId ? { exact: selectedCameraId } : undefined },\r\n        audio: true,\r\n      });\r\n      setLocalStream(stream);\r\n      localVideoRef.current.srcObject = stream;\r\n      socket.emit(\"ready\", roomId);\r\n    } catch (err) {\r\n      console.error(\"Media error:\", err);\r\n    }\r\n  };\r\n\r\n  const createPeerConnection = (socketId) => {\r\n    const pc = new RTCPeerConnection();\r\n\r\n    pc.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        socket.emit(\"ice-candidate\", { to: socketId, candidate: event.candidate });\r\n      }\r\n    };\r\n\r\n    pc.ontrack = (event) => {\r\n      const remoteStream = new MediaStream([event.track]);\r\n      setRemoteStreams((prev) => [...prev, { id: socketId, stream: remoteStream }]);\r\n    };\r\n\r\n    return pc;\r\n  };\r\n\r\n  // SOCKET EVENTS\r\n  useEffect(() => {\r\n    if (!localStream) return;\r\n\r\n    socket.on(\"user-joined\", async ({ socketId }) => {\r\n      const pc = createPeerConnection(socketId);\r\n      peerConnections[socketId] = pc;\r\n      setPeerConnections({ ...peerConnections });\r\n\r\n      localStream.getTracks().forEach((track) => pc.addTrack(track, localStream));\r\n\r\n      const offer = await pc.createOffer();\r\n      await pc.setLocalDescription(offer);\r\n      socket.emit(\"offer\", { to: socketId, offer });\r\n    });\r\n\r\n    socket.on(\"offer\", async ({ from, offer }) => {\r\n      const pc = createPeerConnection(from);\r\n      peerConnections[from] = pc;\r\n      setPeerConnections({ ...peerConnections });\r\n\r\n      localStream.getTracks().forEach((track) => pc.addTrack(track, localStream));\r\n\r\n      await pc.setRemoteDescription(new RTCSessionDescription(offer));\r\n      const answer = await pc.createAnswer();\r\n      await pc.setLocalDescription(answer);\r\n      socket.emit(\"answer\", { to: from, answer });\r\n    });\r\n\r\n    socket.on(\"answer\", async ({ from, answer }) => {\r\n      const pc = peerConnections[from];\r\n      if (pc) await pc.setRemoteDescription(new RTCSessionDescription(answer));\r\n    });\r\n\r\n    socket.on(\"ice-candidate\", ({ from, candidate }) => {\r\n      const pc = peerConnections[from];\r\n      if (pc && candidate) pc.addIceCandidate(new RTCIceCandidate(candidate));\r\n    });\r\n\r\n    socket.on(\"user-disconnected\", (socketId) => {\r\n      const pc = peerConnections[socketId];\r\n      if (pc) pc.close();\r\n      delete peerConnections[socketId];\r\n      setRemoteStreams((prev) => prev.filter((s) => s.id !== socketId));\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"user-joined\");\r\n      socket.off(\"offer\");\r\n      socket.off(\"answer\");\r\n      socket.off(\"ice-candidate\");\r\n      socket.off(\"user-disconnected\");\r\n    };\r\n  }, [localStream]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Room ID: {roomId}</h2>\r\n      <h4>Welcome: {userName}</h4>\r\n\r\n      {/* Camera selection */}\r\n      <div>\r\n        <label>Select Camera:</label>\r\n        <select onChange={(e) => setSelectedCameraId(e.target.value)} value={selectedCameraId}>\r\n          {availableCameras.map((cam) => (\r\n            <option key={cam.deviceId} value={cam.deviceId}>\r\n              {cam.label || `Camera ${cam.deviceId}`}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Local Video */}\r\n      <div>\r\n        <video ref={localVideoRef} autoPlay playsInline muted style={{ width: \"300px\" }} />\r\n      </div>\r\n\r\n      {/* Remote Videos */}\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {remoteStreams.map(({ id, stream }) => (\r\n          <video\r\n            key={id}\r\n            autoPlay\r\n            playsInline\r\n            style={{ width: \"300px\", margin: \"10px\" }}\r\n            ref={(video) => {\r\n              if (video) video.srcObject = stream;\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}