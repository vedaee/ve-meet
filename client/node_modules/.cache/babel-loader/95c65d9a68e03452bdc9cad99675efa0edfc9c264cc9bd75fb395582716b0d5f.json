{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"https://192.168.29.23:5000\";\nconst socket = io(SERVER_URL, {\n  path: \"/socket.io\",\n  secure: true,\n  transports: [\"websocket\"],\n  reconnection: true,\n  rejectUnauthorized: false\n});\nconst Room = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [participants, setParticipants] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\");\n  const [micOn, setMicOn] = useState(true);\n  const [camOn, setCamOn] = useState(true);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const streamRef = useRef();\n  const screenTrackRef = useRef();\n  const videoRefs = useRef({});\n  useEffect(() => {\n    const name = prompt(\"Enter your name\");\n    const room = prompt(\"Enter room code\");\n    setUserName(name);\n    setRoomID(room);\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      streamRef.current = stream;\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n      socket.emit(\"join-room\", {\n        roomId: room,\n        userName: name\n      });\n      console.log(\"Joined room:\", room, \"as user:\", name);\n      socket.on(\"all-users\", users => {\n        console.log(\"All users in room:\", users);\n        const newPeers = [];\n        users.forEach(user => {\n          if (user.id === socket.id) return;\n          const peer = createPeer(user.id, socket.id, stream);\n          peersRef.current.push({\n            peerID: user.id,\n            peer,\n            userName: user.name\n          });\n          newPeers.push({\n            peerID: user.id,\n            peer,\n            userName: user.name\n          });\n        });\n        setPeers(newPeers);\n        setParticipants(users.map(u => u.name));\n      });\n      socket.on(\"user-joined\", payload => {\n        console.log(\"User joined:\", payload);\n        const peer = addPeer(payload.signal, payload.id, payload.name, stream);\n        peersRef.current.push({\n          peerID: payload.id,\n          peer,\n          userName: payload.name\n        });\n        setPeers(users => [...users, {\n          peerID: payload.id,\n          peer,\n          userName: payload.name\n        }]);\n        setParticipants(list => {\n          if (!list.includes(payload.name)) return [...list, payload.name];else return list;\n        });\n      });\n      socket.on(\"receiving-returned-signal\", payload => {\n        console.log(\"Received returned signal from:\", payload.id);\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        if (item && item.peer && payload.signal) {\n          item.peer.signal(payload.signal);\n        } else {\n          console.warn(\"No signal to process or peer not found for id:\", payload.id);\n        }\n      });\n      socket.on(\"user-disconnected\", id => {\n        console.log(\"User disconnected:\", id);\n        setPeers(users => users.filter(p => p.peerID !== id));\n        peersRef.current = peersRef.current.filter(p => p.peerID !== id);\n        setParticipants(peersRef.current.map(p => p.userName));\n        delete videoRefs.current[id];\n      });\n    });\n    return () => {\n      socket.disconnect();\n      peersRef.current.forEach(({\n        peer\n      }) => peer.destroy());\n      if (streamRef.current) streamRef.current.getTracks().forEach(t => t.stop());\n    };\n  }, []);\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      console.log(\"Sending signal to\", userToSignal);\n      socket.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const videoElem = videoRefs.current[userToSignal];\n      if (videoElem) {\n        videoElem.srcObject = remoteStream;\n      }\n    });\n    peer.on(\"error\", err => {\n      console.error(\"Peer error (createPeer):\", err);\n    });\n    return peer;\n  };\n  const addPeer = (incomingSignal, callerId, name, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      console.log(\"Returning signal to\", callerId);\n      socket.emit(\"returning-signal\", {\n        signal,\n        to: callerId\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const videoElem = videoRefs.current[callerId];\n      if (videoElem) {\n        videoElem.srcObject = remoteStream;\n      }\n    });\n    peer.on(\"error\", err => {\n      console.error(\"Peer error (addPeer):\", err);\n    });\n    if (peer && typeof peer.signal === \"function\" && incomingSignal) {\n      try {\n        peer.signal(incomingSignal);\n      } catch (err) {\n        console.error(\"Error signaling peer:\", err);\n      }\n    }\n    return peer;\n  };\n  const toggleMic = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getAudioTracks().forEach(track => {\n      track.enabled = !micOn;\n    });\n    setMicOn(!micOn);\n  };\n  const toggleCam = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getVideoTracks().forEach(track => {\n      track.enabled = !camOn;\n    });\n    setCamOn(!camOn);\n  };\n  const handleScreenShare = async () => {\n    if (!screenSharing) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true\n        });\n        const screenTrack = screenStream.getVideoTracks()[0];\n        screenTrackRef.current = screenTrack;\n        peersRef.current.forEach(({\n          peer\n        }) => {\n          peer.replaceTrack(streamRef.current.getVideoTracks()[0], screenTrack, streamRef.current);\n        });\n        screenTrack.onended = () => {\n          peersRef.current.forEach(({\n            peer\n          }) => {\n            peer.replaceTrack(screenTrack, streamRef.current.getVideoTracks()[0], streamRef.current);\n          });\n          setScreenSharing(false);\n        };\n        setScreenSharing(true);\n      } catch (err) {\n        console.error(\"Screen share error:\", err);\n      }\n    } else {\n      if (screenTrackRef.current) screenTrackRef.current.stop();\n      setScreenSharing(false);\n    }\n  };\n  const endMeeting = () => {\n    peersRef.current.forEach(({\n      peer\n    }) => peer.destroy());\n    peersRef.current = [];\n    if (streamRef.current) streamRef.current.getTracks().forEach(track => track.stop());\n    socket.disconnect();\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"room-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logo\",\n        children: [\"Ve \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gold\",\n          children: \"Meet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Room: \", roomID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"You: \", userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          muted: true,\n          ref: userVideo,\n          autoPlay: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), peers.map(({\n        peerID,\n        userName\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          autoPlay: true,\n          className: \"video\",\n          ref: el => {\n            if (el) videoRefs.current[peerID] = el;else delete videoRefs.current[peerID];\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, peerID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"participants-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Participants (\", participants.length + 1, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [userName, \" (You)\"]\n        }, userName + \"-self\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), participants.map((pName, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: pName\n        }, `${pName}-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMic,\n          children: micOn ? \"Mute\" : \"Unmute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleCam,\n          children: camOn ? \"Video Off\" : \"Video On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleScreenShare,\n          children: screenSharing ? \"Stop Sharing\" : \"Share Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"end-btn\",\n          onClick: endMeeting,\n          children: \"End Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"RoaFfDUeVEuuIrkPVDHyKrTb4ZA=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","SERVER_URL","socket","path","secure","transports","reconnection","rejectUnauthorized","Room","_s","peers","setPeers","participants","setParticipants","userName","setUserName","roomID","setRoomID","micOn","setMicOn","camOn","setCamOn","screenSharing","setScreenSharing","userVideo","peersRef","streamRef","screenTrackRef","videoRefs","name","prompt","room","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","emit","roomId","console","log","on","users","newPeers","forEach","user","id","peer","createPeer","push","peerID","map","u","payload","addPeer","signal","list","includes","item","find","p","warn","filter","disconnect","destroy","getTracks","t","stop","userToSignal","callerID","initiator","trickle","remoteStream","videoElem","err","error","incomingSignal","callerId","to","toggleMic","getAudioTracks","track","enabled","toggleCam","getVideoTracks","handleScreenShare","screenStream","getDisplayMedia","screenTrack","replaceTrack","onended","endMeeting","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","muted","ref","autoPlay","playsInline","el","length","pName","idx","onClick","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./Room.css\";\r\n\r\nconst SERVER_URL = \"https://192.168.29.23:5000\";\r\n\r\nconst socket = io(SERVER_URL, {\r\n  path: \"/socket.io\",\r\n  secure: true,\r\n  transports: [\"websocket\"],\r\n  reconnection: true,\r\n  rejectUnauthorized: false,\r\n});\r\n\r\nconst Room = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [micOn, setMicOn] = useState(true);\r\n  const [camOn, setCamOn] = useState(true);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const streamRef = useRef();\r\n  const screenTrackRef = useRef();\r\n  const videoRefs = useRef({});\r\n\r\n  useEffect(() => {\r\n    const name = prompt(\"Enter your name\");\r\n    const room = prompt(\"Enter room code\");\r\n    setUserName(name);\r\n    setRoomID(room);\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        streamRef.current = stream;\r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = stream;\r\n        }\r\n\r\n        socket.emit(\"join-room\", { roomId: room, userName: name });\r\n          console.log(\"Joined room:\", room, \"as user:\", name);\r\n\r\n        socket.on(\"all-users\", (users) => {\r\n          console.log(\"All users in room:\", users);\r\n          const newPeers = [];\r\n          users.forEach((user) => {\r\n            if (user.id === socket.id) return;\r\n            const peer = createPeer(user.id, socket.id, stream);\r\n            peersRef.current.push({ peerID: user.id, peer, userName: user.name });\r\n            newPeers.push({ peerID: user.id, peer, userName: user.name });\r\n          });\r\n          setPeers(newPeers);\r\n          setParticipants(users.map((u) => u.name));\r\n        });\r\n\r\n        socket.on(\"user-joined\", (payload) => {\r\n          console.log(\"User joined:\", payload);\r\n          const peer = addPeer(payload.signal, payload.id, payload.name, stream);\r\n          peersRef.current.push({ peerID: payload.id, peer, userName: payload.name });\r\n          setPeers((users) => [...users, { peerID: payload.id, peer, userName: payload.name }]);\r\n          setParticipants((list) => {\r\n            if (!list.includes(payload.name)) return [...list, payload.name];\r\n            else return list;\r\n          });\r\n        });\r\n\r\n        socket.on(\"receiving-returned-signal\", (payload) => {\r\n          console.log(\"Received returned signal from:\", payload.id)\r\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\r\n          if (item && item.peer && payload.signal) {\r\n            item.peer.signal(payload.signal);\r\n          } else {\r\n            console.warn(\"No signal to process or peer not found for id:\", payload.id);\r\n          }\r\n        });\r\n\r\n        socket.on(\"user-disconnected\", (id) => {\r\n          console.log(\"User disconnected:\", id);\r\n          setPeers((users) => users.filter((p) => p.peerID !== id));\r\n          peersRef.current = peersRef.current.filter((p) => p.peerID !== id);\r\n          setParticipants(peersRef.current.map((p) => p.userName));\r\n          delete videoRefs.current[id];\r\n        });\r\n      });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      peersRef.current.forEach(({ peer }) => peer.destroy());\r\n      if (streamRef.current) streamRef.current.getTracks().forEach((t) => t.stop());\r\n    };\r\n  }, []);\r\n\r\n  const createPeer = (userToSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      console.log(\"Sending signal to\", userToSignal)\r\n      socket.emit(\"sending-signal\", { userToSignal, callerID, signal });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const videoElem = videoRefs.current[userToSignal];\r\n      if (videoElem) {\r\n        videoElem.srcObject = remoteStream;\r\n      }\r\n    });\r\n\r\n    peer.on(\"error\", (err) => {\r\n      console.error(\"Peer error (createPeer):\", err);\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (incomingSignal, callerId, name, stream) => {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      console.log(\"Returning signal to\", callerId);\r\n      socket.emit(\"returning-signal\", { signal, to: callerId });\r\n\r\n});\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const videoElem = videoRefs.current[callerId];\r\n      if (videoElem) {\r\n        videoElem.srcObject = remoteStream;\r\n      }\r\n    });\r\n\r\n    peer.on(\"error\", (err) => {\r\n      console.error(\"Peer error (addPeer):\", err);\r\n    });\r\n\r\n    if (peer && typeof peer.signal === \"function\" && incomingSignal) {\r\n      try {\r\n        peer.signal(incomingSignal);\r\n      } catch (err) {\r\n        console.error(\"Error signaling peer:\", err);\r\n      }\r\n    }\r\n\r\n    return peer;\r\n  };\r\n\r\n  const toggleMic = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getAudioTracks().forEach((track) => {\r\n      track.enabled = !micOn;\r\n    });\r\n    setMicOn(!micOn);\r\n  };\r\n\r\n  const toggleCam = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getVideoTracks().forEach((track) => {\r\n      track.enabled = !camOn;\r\n    });\r\n    setCamOn(!camOn);\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    if (!screenSharing) {\r\n      try {\r\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n        const screenTrack = screenStream.getVideoTracks()[0];\r\n        screenTrackRef.current = screenTrack;\r\n\r\n        peersRef.current.forEach(({ peer }) => {\r\n          peer.replaceTrack(streamRef.current.getVideoTracks()[0], screenTrack, streamRef.current);\r\n        });\r\n\r\n        screenTrack.onended = () => {\r\n          peersRef.current.forEach(({ peer }) => {\r\n            peer.replaceTrack(screenTrack, streamRef.current.getVideoTracks()[0], streamRef.current);\r\n          });\r\n          setScreenSharing(false);\r\n        };\r\n\r\n        setScreenSharing(true);\r\n      } catch (err) {\r\n        console.error(\"Screen share error:\", err);\r\n      }\r\n    } else {\r\n      if (screenTrackRef.current) screenTrackRef.current.stop();\r\n      setScreenSharing(false);\r\n    }\r\n  };\r\n\r\n  const endMeeting = () => {\r\n    peersRef.current.forEach(({ peer }) => peer.destroy());\r\n    peersRef.current = [];\r\n    if (streamRef.current) streamRef.current.getTracks().forEach((track) => track.stop());\r\n    socket.disconnect();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <header className=\"room-header\">\r\n        <h2 className=\"logo\">\r\n          Ve <span className=\"gold\">Meet</span>\r\n        </h2>\r\n        <div>\r\n          <span>Room: {roomID}</span>\r\n          <span className=\"username\">You: {userName}</span>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"video-grid\">\r\n        <div className=\"video-block\">\r\n          <video muted ref={userVideo} autoPlay playsInline className=\"video\" />\r\n          <p>{userName} (You)</p>\r\n        </div>\r\n        {peers.map(({ peerID, userName }) => (\r\n          <div className=\"video-block\" key={peerID}>\r\n            <video\r\n              playsInline\r\n              autoPlay\r\n              className=\"video\"\r\n              ref={(el) => {\r\n                if (el) videoRefs.current[peerID] = el;\r\n                else delete videoRefs.current[peerID];\r\n              }}\r\n            />\r\n            <p>{userName}</p>\r\n          </div>\r\n        ))}\r\n      </main>\r\n\r\n      <aside className=\"participants-panel\">\r\n        <h3>Participants ({participants.length + 1})</h3>\r\n        <ul>\r\n          <li key={userName + \"-self\"}>{userName} (You)</li>\r\n          {participants.map((pName, idx) => (\r\n            <li key={`${pName}-${idx}`}>{pName}</li>\r\n          ))}\r\n      </ul>\r\n\r\n        <div className=\"controls\">\r\n          <button onClick={toggleMic}>{micOn ? \"Mute\" : \"Unmute\"}</button>\r\n          <button onClick={toggleCam}>{camOn ? \"Video Off\" : \"Video On\"}</button>\r\n          <button onClick={handleScreenShare}>{screenSharing ? \"Stop Sharing\" : \"Share Screen\"}</button>\r\n          <button className=\"end-btn\" onClick={endMeeting}>\r\n            End Meeting\r\n          </button>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}