{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST - 3\\\\client\\\\src\\\\components\\\\GuestRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"https://192.168.29.23:5000\", {\n  transports: [\"websocket\"]\n});\nconst GuestRoom = () => {\n  _s();\n  const [peers, setPeers] = useState({});\n  const [stream, setStream] = useState();\n  const [name, setName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\");\n  const [joined, setJoined] = useState(false);\n  const userVideo = useRef();\n  const peersRef = useRef({});\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n    });\n    socket.on(\"all-users\", users => {\n      const peersObj = {};\n      users.forEach(({\n        socketID,\n        name: peerName\n      }) => {\n        const peer = createPeer(socketID, socket.id, stream);\n        peer.name = peerName;\n        peersRef.current[socketID] = peer;\n        peersObj[socketID] = peer;\n      });\n      setPeers(peersObj);\n    });\n    socket.on(\"user-joined\", ({\n      signal,\n      callerID,\n      name: peerName\n    }) => {\n      const peer = addPeer(signal, callerID, stream);\n      peer.name = peerName;\n      peersRef.current[callerID] = peer;\n      setPeers(prev => ({\n        ...prev,\n        [callerID]: peer\n      }));\n    });\n    socket.on(\"receiving-returned-signal\", ({\n      id,\n      signal\n    }) => {\n      const item = peersRef.current[id];\n      if (item) item.signal(signal);\n    });\n    socket.on(\"user-disconnected\", id => {\n      if (peersRef.current[id]) {\n        peersRef.current[id].destroy();\n        delete peersRef.current[id];\n        setPeers(prevPeers => {\n          const updated = {\n            ...prevPeers\n          };\n          delete updated[id];\n          return updated;\n        });\n      }\n    });\n    socket.on(\"screen-share-started\", ({\n      socketID\n    }) => {\n      const screenPeer = addPeer(null, socketID, null, true);\n      screenPeer.name = \"Screen Share\";\n      screenPeer.isScreenShare = true;\n      peersRef.current[socketID + \"-screen\"] = screenPeer;\n      setPeers(prev => ({\n        ...prev,\n        [socketID + \"-screen\"]: screenPeer\n      }));\n    });\n    socket.on(\"screen-share-stopped\", ({\n      socketID\n    }) => {\n      const id = socketID + \"-screen\";\n      if (peersRef.current[id]) {\n        peersRef.current[id].destroy();\n        delete peersRef.current[id];\n        setPeers(prevPeers => {\n          const updated = {\n            ...prevPeers\n          };\n          delete updated[id];\n          return updated;\n        });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [stream]);\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal,\n        name\n      });\n    });\n    return peer;\n  }\n  function addPeer(incomingSignal, callerID, stream, isScreen = false) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"returning-signal\", {\n        signal,\n        callerID\n      });\n    });\n    peer.on(\"stream\", incomingStream => {\n      var _incomingStream$getVi;\n      peer.stream = incomingStream;\n      if ((_incomingStream$getVi = incomingStream.getVideoTracks()[0]) !== null && _incomingStream$getVi !== void 0 && _incomingStream$getVi.label.includes(\"screen\")) {\n        peer.isScreenShare = true;\n      }\n    });\n    if (incomingSignal) peer.signal(incomingSignal);\n    return peer;\n  }\n  const handleJoin = () => {\n    if (!name || !roomID || !stream) return;\n    socket.emit(\"join-room\", {\n      roomID,\n      name\n    });\n    setJoined(true);\n  };\n  const toggleAudio = () => {\n    if (stream) {\n      stream.getAudioTracks()[0].enabled = !stream.getAudioTracks()[0].enabled;\n    }\n  };\n  const toggleVideo = () => {\n    if (stream) {\n      stream.getVideoTracks()[0].enabled = !stream.getVideoTracks()[0].enabled;\n    }\n  };\n  const leaveRoom = () => {\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: !joined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"ve-meet-title\",\n        children: \"Ve Meet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        className: \"input-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Room Code\",\n        value: roomID,\n        onChange: e => setRoomID(e.target.value),\n        className: \"input-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoin,\n        className: \"join-button\",\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meeting-room\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: userVideo,\n            autoPlay: true,\n            playsInline: true,\n            muted: true,\n            className: \"video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name-label\",\n            children: [name, \" (You)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), Object.values(peers).map((peer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `video-container ${peer.isScreenShare ? \"screen-share-full\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: ref => {\n              if (ref && peer.stream && !ref.srcObject) {\n                ref.srcObject = peer.stream;\n              }\n            },\n            autoPlay: true,\n            playsInline: true,\n            className: \"video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name-label\",\n            children: peer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleAudio,\n          children: \"Mute / Unmute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleVideo,\n          children: \"Video On / Off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: leaveRoom,\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(GuestRoom, \"fJ74O4tFWOcR8XqJ1GfksPfJz3M=\");\n_c = GuestRoom;\nexport default GuestRoom;\nvar _c;\n$RefreshReg$(_c, \"GuestRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","socket","connect","transports","GuestRoom","_s","peers","setPeers","stream","setStream","name","setName","roomID","setRoomID","joined","setJoined","userVideo","peersRef","navigator","mediaDevices","getUserMedia","video","audio","then","current","srcObject","on","users","peersObj","forEach","socketID","peerName","peer","createPeer","id","signal","callerID","addPeer","prev","item","destroy","prevPeers","updated","screenPeer","isScreenShare","disconnect","userToSignal","initiator","trickle","emit","incomingSignal","isScreen","incomingStream","_incomingStream$getVi","getVideoTracks","label","includes","handleJoin","toggleAudio","getAudioTracks","enabled","toggleVideo","leaveRoom","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","ref","autoPlay","playsInline","muted","Object","values","map","index","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST - 3/client/src/components/GuestRoom.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./Room.css\";\r\n\r\nconst socket = io.connect(\"https://192.168.29.23:5000\", {\r\n  transports: [\"websocket\"],\r\n});\r\n\r\nconst GuestRoom = () => {\r\n  const [peers, setPeers] = useState({});\r\n  const [stream, setStream] = useState();\r\n  const [name, setName] = useState(\"\");\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [joined, setJoined] = useState(false);\r\n  const userVideo = useRef();\r\n  const peersRef = useRef({});\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n      setStream(stream);\r\n      if (userVideo.current) {\r\n        userVideo.current.srcObject = stream;\r\n      }\r\n    });\r\n\r\n    socket.on(\"all-users\", (users) => {\r\n      const peersObj = {};\r\n      users.forEach(({ socketID, name: peerName }) => {\r\n        const peer = createPeer(socketID, socket.id, stream);\r\n        peer.name = peerName;\r\n        peersRef.current[socketID] = peer;\r\n        peersObj[socketID] = peer;\r\n      });\r\n      setPeers(peersObj);\r\n    });\r\n\r\n    socket.on(\"user-joined\", ({ signal, callerID, name: peerName }) => {\r\n      const peer = addPeer(signal, callerID, stream);\r\n      peer.name = peerName;\r\n      peersRef.current[callerID] = peer;\r\n      setPeers((prev) => ({ ...prev, [callerID]: peer }));\r\n    });\r\n\r\n    socket.on(\"receiving-returned-signal\", ({ id, signal }) => {\r\n      const item = peersRef.current[id];\r\n      if (item) item.signal(signal);\r\n    });\r\n\r\n    socket.on(\"user-disconnected\", (id) => {\r\n      if (peersRef.current[id]) {\r\n        peersRef.current[id].destroy();\r\n        delete peersRef.current[id];\r\n        setPeers((prevPeers) => {\r\n          const updated = { ...prevPeers };\r\n          delete updated[id];\r\n          return updated;\r\n        });\r\n      }\r\n    });\r\n\r\n    socket.on(\"screen-share-started\", ({ socketID }) => {\r\n      const screenPeer = addPeer(null, socketID, null, true);\r\n      screenPeer.name = \"Screen Share\";\r\n      screenPeer.isScreenShare = true;\r\n      peersRef.current[socketID + \"-screen\"] = screenPeer;\r\n      setPeers((prev) => ({ ...prev, [socketID + \"-screen\"]: screenPeer }));\r\n    });\r\n\r\n    socket.on(\"screen-share-stopped\", ({ socketID }) => {\r\n      const id = socketID + \"-screen\";\r\n      if (peersRef.current[id]) {\r\n        peersRef.current[id].destroy();\r\n        delete peersRef.current[id];\r\n        setPeers((prevPeers) => {\r\n          const updated = { ...prevPeers };\r\n          delete updated[id];\r\n          return updated;\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [stream]);\r\n\r\n  function createPeer(userToSignal, callerID, stream) {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream: stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"sending-signal\", {\r\n        userToSignal,\r\n        callerID,\r\n        signal,\r\n        name,\r\n      });\r\n    });\r\n\r\n    return peer;\r\n  }\r\n\r\n  function addPeer(incomingSignal, callerID, stream, isScreen = false) {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream: stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"returning-signal\", { signal, callerID });\r\n    });\r\n\r\n    peer.on(\"stream\", (incomingStream) => {\r\n      peer.stream = incomingStream;\r\n      if (incomingStream.getVideoTracks()[0]?.label.includes(\"screen\")) {\r\n        peer.isScreenShare = true;\r\n      }\r\n    });\r\n\r\n    if (incomingSignal) peer.signal(incomingSignal);\r\n    return peer;\r\n  }\r\n\r\n  const handleJoin = () => {\r\n    if (!name || !roomID || !stream) return;\r\n    socket.emit(\"join-room\", { roomID, name });\r\n    setJoined(true);\r\n  };\r\n\r\n  const toggleAudio = () => {\r\n    if (stream) {\r\n      stream.getAudioTracks()[0].enabled = !stream.getAudioTracks()[0].enabled;\r\n    }\r\n  };\r\n\r\n  const toggleVideo = () => {\r\n    if (stream) {\r\n      stream.getVideoTracks()[0].enabled = !stream.getVideoTracks()[0].enabled;\r\n    }\r\n  };\r\n\r\n  const leaveRoom = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      {!joined ? (\r\n        <div className=\"join-screen\">\r\n          <h1 className=\"ve-meet-title\">Ve Meet</h1>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            className=\"input-box\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Room Code\"\r\n            value={roomID}\r\n            onChange={(e) => setRoomID(e.target.value)}\r\n            className=\"input-box\"\r\n          />\r\n          <button onClick={handleJoin} className=\"join-button\">Join Room</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"meeting-room\">\r\n          <div className=\"video-grid\">\r\n            <div className=\"video-container\">\r\n              <video ref={userVideo} autoPlay playsInline muted className=\"video\" />\r\n              <div className=\"name-label\">{name} (You)</div>\r\n            </div>\r\n            {Object.values(peers).map((peer, index) => (\r\n              <div\r\n                key={index}\r\n                className={`video-container ${peer.isScreenShare ? \"screen-share-full\" : \"\"}`}\r\n              >\r\n                <video\r\n                  ref={(ref) => {\r\n                    if (ref && peer.stream && !ref.srcObject) {\r\n                      ref.srcObject = peer.stream;\r\n                    }\r\n                  }}\r\n                  autoPlay\r\n                  playsInline\r\n                  className=\"video\"\r\n                />\r\n                <div className=\"name-label\">{peer.name}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"controls\">\r\n            <button onClick={toggleAudio}>Mute / Unmute</button>\r\n            <button onClick={toggleVideo}>Video On / Off</button>\r\n            <button onClick={leaveRoom}>Leave</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GuestRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}