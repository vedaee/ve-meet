{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"../Room.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"https://192.168.29.23:5000\";\nconst Room = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [stream, setStream] = useState();\n  const [userName, setUserName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\");\n  const [participants, setParticipants] = useState([]);\n  const [isMicOn, setIsMicOn] = useState(true);\n  const [isVideoOn, setIsVideoOn] = useState(true);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const socketRef = useRef();\n  const videoRefs = useRef({});\n  useEffect(() => {\n    const storedName = prompt(\"Enter your name:\");\n    const storedRoom = prompt(\"Enter Room Code:\");\n    setUserName(storedName);\n    setRoomID(storedRoom);\n    socketRef.current = io(SERVER_URL, {\n      secure: true,\n      reconnection: true,\n      rejectUnauthorized: false\n    });\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n      socketRef.current.emit(\"join-room\", {\n        roomID: storedRoom,\n        userName: storedName\n      });\n      socketRef.current.on(\"all-users\", users => {\n        const peers = [];\n        users.forEach(({\n          socketID,\n          userName\n        }) => {\n          const peer = createPeer(socketID, socketRef.current.id, stream);\n          peersRef.current.push({\n            peerID: socketID,\n            peer,\n            userName\n          });\n          peers.push({\n            peerID: socketID,\n            peer,\n            userName\n          });\n        });\n        setPeers(peers);\n      });\n      socketRef.current.on(\"user-joined\", ({\n        signal,\n        callerID,\n        userName\n      }) => {\n        const peer = addPeer(signal, callerID, stream);\n        peersRef.current.push({\n          peerID: callerID,\n          peer,\n          userName\n        });\n        setPeers(users => [...users, {\n          peerID: callerID,\n          peer,\n          userName\n        }]);\n      });\n      socketRef.current.on(\"receiving-returned-signal\", ({\n        signal,\n        id\n      }) => {\n        const item = peersRef.current.find(p => p.peerID === id);\n        if (item) {\n          item.peer.signal(signal);\n        }\n      });\n      socketRef.current.on(\"user-left\", id => {\n        const peerObj = peersRef.current.find(p => p.peerID === id);\n        if (peerObj) {\n          peerObj.peer.destroy();\n        }\n        peersRef.current = peersRef.current.filter(p => p.peerID !== id);\n        setPeers(users => users.filter(p => p.peerID !== id));\n      });\n      socketRef.current.on(\"update-participants\", participantList => {\n        setParticipants(participantList);\n      });\n    });\n  }, []);\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    peer.on(\"error\", err => {\n      console.error(\"Peer error (createPeer):\", err);\n    });\n    return peer;\n  };\n  const addPeer = (incomingSignal, callerId, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"returning-signal\", {\n        signal,\n        to: callerId\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const videoElem = videoRefs.current[callerId];\n      if (videoElem) {\n        videoElem.srcObject = remoteStream;\n      }\n    });\n    peer.on(\"error\", err => {\n      console.error(\"Peer error (addPeer):\", err);\n    });\n    if (incomingSignal) {\n      try {\n        peer.signal(incomingSignal);\n      } catch (err) {\n        console.error(\"Error signaling peer:\", err);\n      }\n    }\n    return peer;\n  };\n  const toggleMic = () => {\n    stream.getAudioTracks()[0].enabled = !isMicOn;\n    setIsMicOn(!isMicOn);\n  };\n  const toggleVideo = () => {\n    stream.getVideoTracks()[0].enabled = !isVideoOn;\n    setIsVideoOn(!isVideoOn);\n  };\n  const leaveMeeting = () => {\n    peersRef.current.forEach(p => p.peer.destroy());\n    socketRef.current.disconnect();\n    window.location.href = \"/\";\n  };\n  const handleScreenShare = async () => {\n    try {\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      const screenTrack = screenStream.getVideoTracks()[0];\n      peersRef.current.forEach(({\n        peer\n      }) => {\n        const sender = peer._pc.getSenders().find(s => s.track.kind === \"video\");\n        sender.replaceTrack(screenTrack);\n      });\n      screenTrack.onended = () => {\n        const originalTrack = stream.getVideoTracks()[0];\n        peersRef.current.forEach(({\n          peer\n        }) => {\n          const sender = peer._pc.getSenders().find(s => s.track.kind === \"video\");\n          sender.replaceTrack(originalTrack);\n        });\n      };\n    } catch (err) {\n      console.error(\"Error sharing screen:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logo\",\n        children: [\"Ve \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Meet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-info\",\n        children: [\"Room Code: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: roomID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 22\n        }, this), \" | Host: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          muted: true,\n          ref: userVideo,\n          autoPlay: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-name\",\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), peers.map(({\n        peerID,\n        userName,\n        peer\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: ref => videoRefs.current[peerID] = ref,\n          autoPlay: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-name\",\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, peerID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMic,\n        children: isMicOn ? \"Mute\" : \"Unmute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVideo,\n        children: isVideoOn ? \"Video Off\" : \"Video On\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleScreenShare,\n        children: \"Share Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: leaveMeeting,\n        children: \"End Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Participants (\", participants.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: participants.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"z9bhrUI7eeLun9eYHTlX73XnO/k=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","SERVER_URL","Room","_s","peers","setPeers","stream","setStream","userName","setUserName","roomID","setRoomID","participants","setParticipants","isMicOn","setIsMicOn","isVideoOn","setIsVideoOn","userVideo","peersRef","socketRef","videoRefs","storedName","prompt","storedRoom","current","secure","reconnection","rejectUnauthorized","navigator","mediaDevices","getUserMedia","video","audio","then","srcObject","emit","on","users","forEach","socketID","peer","createPeer","id","push","peerID","signal","callerID","addPeer","item","find","p","peerObj","destroy","filter","participantList","userToSignal","initiator","trickle","err","console","error","incomingSignal","callerId","to","remoteStream","videoElem","toggleMic","getAudioTracks","enabled","toggleVideo","getVideoTracks","leaveMeeting","disconnect","window","location","href","handleScreenShare","screenStream","getDisplayMedia","screenTrack","sender","_pc","getSenders","s","track","kind","replaceTrack","onended","originalTrack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","muted","ref","autoPlay","playsInline","map","onClick","length","name","index","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"../Room.css\";\r\n\r\nconst SERVER_URL = \"https://192.168.29.23:5000\";\r\n\r\nconst Room = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [stream, setStream] = useState();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [participants, setParticipants] = useState([]);\r\n  const [isMicOn, setIsMicOn] = useState(true);\r\n  const [isVideoOn, setIsVideoOn] = useState(true);\r\n\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const socketRef = useRef();\r\n  const videoRefs = useRef({});\r\n\r\n  useEffect(() => {\r\n    const storedName = prompt(\"Enter your name:\");\r\n    const storedRoom = prompt(\"Enter Room Code:\");\r\n\r\n    setUserName(storedName);\r\n    setRoomID(storedRoom);\r\n\r\n    socketRef.current = io(SERVER_URL, {\r\n      secure: true,\r\n      reconnection: true,\r\n      rejectUnauthorized: false,\r\n    });\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        setStream(stream);\r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = stream;\r\n        }\r\n\r\n        socketRef.current.emit(\"join-room\", { roomID: storedRoom, userName: storedName });\r\n\r\n        socketRef.current.on(\"all-users\", (users) => {\r\n          const peers = [];\r\n          users.forEach(({ socketID, userName }) => {\r\n            const peer = createPeer(socketID, socketRef.current.id, stream);\r\n            peersRef.current.push({\r\n              peerID: socketID,\r\n              peer,\r\n              userName,\r\n            });\r\n            peers.push({ peerID: socketID, peer, userName });\r\n          });\r\n          setPeers(peers);\r\n        });\r\n\r\n        socketRef.current.on(\"user-joined\", ({ signal, callerID, userName }) => {\r\n          const peer = addPeer(signal, callerID, stream);\r\n          peersRef.current.push({\r\n            peerID: callerID,\r\n            peer,\r\n            userName,\r\n          });\r\n          setPeers((users) => [...users, { peerID: callerID, peer, userName }]);\r\n        });\r\n\r\n        socketRef.current.on(\"receiving-returned-signal\", ({ signal, id }) => {\r\n          const item = peersRef.current.find((p) => p.peerID === id);\r\n          if (item) {\r\n            item.peer.signal(signal);\r\n          }\r\n        });\r\n\r\n        socketRef.current.on(\"user-left\", (id) => {\r\n          const peerObj = peersRef.current.find((p) => p.peerID === id);\r\n          if (peerObj) {\r\n            peerObj.peer.destroy();\r\n          }\r\n          peersRef.current = peersRef.current.filter((p) => p.peerID !== id);\r\n          setPeers((users) => users.filter((p) => p.peerID !== id));\r\n        });\r\n\r\n        socketRef.current.on(\"update-participants\", (participantList) => {\r\n          setParticipants(participantList);\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const createPeer = (userToSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socketRef.current.emit(\"sending-signal\", {\r\n        userToSignal,\r\n        callerID,\r\n        signal,\r\n      });\r\n    });\r\n\r\n    peer.on(\"error\", (err) => {\r\n      console.error(\"Peer error (createPeer):\", err);\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (incomingSignal, callerId, stream) => {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socketRef.current.emit(\"returning-signal\", { signal, to: callerId });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const videoElem = videoRefs.current[callerId];\r\n      if (videoElem) {\r\n        videoElem.srcObject = remoteStream;\r\n      }\r\n    });\r\n\r\n    peer.on(\"error\", (err) => {\r\n      console.error(\"Peer error (addPeer):\", err);\r\n    });\r\n\r\n    if (incomingSignal) {\r\n      try {\r\n        peer.signal(incomingSignal);\r\n      } catch (err) {\r\n        console.error(\"Error signaling peer:\", err);\r\n      }\r\n    }\r\n\r\n    return peer;\r\n  };\r\n\r\n  const toggleMic = () => {\r\n    stream.getAudioTracks()[0].enabled = !isMicOn;\r\n    setIsMicOn(!isMicOn);\r\n  };\r\n\r\n  const toggleVideo = () => {\r\n    stream.getVideoTracks()[0].enabled = !isVideoOn;\r\n    setIsVideoOn(!isVideoOn);\r\n  };\r\n\r\n  const leaveMeeting = () => {\r\n    peersRef.current.forEach((p) => p.peer.destroy());\r\n    socketRef.current.disconnect();\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    try {\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n      const screenTrack = screenStream.getVideoTracks()[0];\r\n\r\n      peersRef.current.forEach(({ peer }) => {\r\n        const sender = peer._pc.getSenders().find((s) => s.track.kind === \"video\");\r\n        sender.replaceTrack(screenTrack);\r\n      });\r\n\r\n      screenTrack.onended = () => {\r\n        const originalTrack = stream.getVideoTracks()[0];\r\n        peersRef.current.forEach(({ peer }) => {\r\n          const sender = peer._pc.getSenders().find((s) => s.track.kind === \"video\");\r\n          sender.replaceTrack(originalTrack);\r\n        });\r\n      };\r\n    } catch (err) {\r\n      console.error(\"Error sharing screen:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <div className=\"top-bar\">\r\n        <h2 className=\"logo\">Ve <span>Meet</span></h2>\r\n        <div className=\"room-info\">\r\n          Room Code: <strong>{roomID}</strong> | Host: <strong>{userName}</strong>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"video-grid\">\r\n        <div className=\"video-block\">\r\n          <video muted ref={userVideo} autoPlay playsInline className=\"video\" />\r\n          <div className=\"video-name\">{userName} (You)</div>\r\n        </div>\r\n        {peers.map(({ peerID, userName, peer }) => (\r\n          <div className=\"video-block\" key={peerID}>\r\n            <video\r\n              ref={(ref) => (videoRefs.current[peerID] = ref)}\r\n              autoPlay\r\n              playsInline\r\n              className=\"video\"\r\n            />\r\n            <div className=\"video-name\">{userName}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        <button onClick={toggleMic}>{isMicOn ? \"Mute\" : \"Unmute\"}</button>\r\n        <button onClick={toggleVideo}>{isVideoOn ? \"Video Off\" : \"Video On\"}</button>\r\n        <button onClick={handleScreenShare}>Share Screen</button>\r\n        <button onClick={leaveMeeting}>End Meeting</button>\r\n      </div>\r\n\r\n      <div className=\"sidebar\">\r\n        <h3>Participants ({participants.length})</h3>\r\n        <ul>\r\n          {participants.map((name, index) => (\r\n            <li key={index}>{name}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}