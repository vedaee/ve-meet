{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"https://192.168.29.23:5000\", {\n  secure: true,\n  reconnection: true,\n  rejectUnauthorized: false\n});\nconst Room = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [participants, setParticipants] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\");\n  const [micOn, setMicOn] = useState(true);\n  const [camOn, setCamOn] = useState(true);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const streamRef = useRef();\n  const screenTrackRef = useRef();\n  useEffect(() => {\n    const name = prompt(\"Enter your name\");\n    const room = prompt(\"Enter room code\");\n    setUserName(name);\n    setRoomID(room);\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      streamRef.current = stream;\n      if (userVideo.current) userVideo.current.srcObject = stream;\n      socket.emit(\"join-room\", {\n        roomId: room,\n        userName: name\n      });\n      socket.on(\"all-users\", users => {\n        const peers = [];\n        users.forEach(user => {\n          if (user.id === socket.id) return;\n          const peer = createPeer(user.id, socket.id, stream);\n          peersRef.current.push({\n            peerID: user.id,\n            peer,\n            userName: user.name\n          });\n          peers.push({\n            peerID: user.id,\n            peer,\n            userName: user.name\n          });\n        });\n        setPeers(peers);\n        setParticipants(users.map(u => u.name));\n      });\n      socket.on(\"user-joined\", payload => {\n        const peer = addPeer(payload.signal, payload.id, stream);\n        peersRef.current.push({\n          peerID: payload.id,\n          peer,\n          userName: payload.name\n        });\n        setPeers(users => [...users, {\n          peerID: payload.id,\n          peer,\n          userName: payload.name\n        }]);\n        setParticipants(list => [...list, payload.name]);\n      });\n      socket.on(\"receiving-returned-signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        if (item) item.peer.signal(payload.signal);\n      });\n      socket.on(\"user-disconnected\", id => {\n        setPeers(users => users.filter(p => p.peerID !== id));\n        peersRef.current = peersRef.current.filter(p => p.peerID !== id);\n        setParticipants(list => list.filter(name => {\n          // Remove user by peerID\n          const p = peersRef.current.find(p => p.peerID === id);\n          return p ? true : false;\n        }));\n      });\n    });\n    return () => {\n      socket.disconnect();\n      peersRef.current.forEach(({\n        peer\n      }) => peer.destroy());\n      if (streamRef.current) streamRef.current.getTracks().forEach(t => t.stop());\n    };\n  }, []);\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    return peer;\n  }\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"returning-signal\", {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  }\n  const toggleMic = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getAudioTracks().forEach(track => {\n      track.enabled = !micOn;\n    });\n    setMicOn(!micOn);\n  };\n  const toggleCam = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getVideoTracks().forEach(track => {\n      track.enabled = !camOn;\n    });\n    setCamOn(!camOn);\n  };\n  const handleScreenShare = async () => {\n    if (!screenSharing) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true\n        });\n        const screenTrack = screenStream.getVideoTracks()[0];\n        screenTrackRef.current = screenTrack;\n        peersRef.current.forEach(({\n          peer\n        }) => {\n          peer.replaceTrack(streamRef.current.getVideoTracks()[0], screenTrack, streamRef.current);\n        });\n        screenTrack.onended = () => {\n          peersRef.current.forEach(({\n            peer\n          }) => {\n            peer.replaceTrack(screenTrack, streamRef.current.getVideoTracks()[0], streamRef.current);\n          });\n          setScreenSharing(false);\n        };\n        setScreenSharing(true);\n      } catch (err) {\n        console.error(\"Screen share error:\", err);\n      }\n    } else {\n      if (screenTrackRef.current) screenTrackRef.current.stop();\n      setScreenSharing(false);\n    }\n  };\n  const endMeeting = () => {\n    peersRef.current.forEach(({\n      peer\n    }) => peer.destroy());\n    peersRef.current = [];\n    if (streamRef.current) streamRef.current.getTracks().forEach(track => track.stop());\n    socket.disconnect();\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"room-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logo\",\n        children: \"Ve Meet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Room: \", roomID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"You: \", userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          muted: true,\n          ref: userVideo,\n          autoPlay: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), peers.map(({\n        peerID,\n        peer,\n        userName\n      }) => /*#__PURE__*/_jsxDEV(Video, {\n        peer: peer,\n        name: userName\n      }, peerID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"participants-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Participants (\", participants.length + 1, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), participants.map((pName, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: pName\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMic,\n          children: micOn ? \"Mute\" : \"Unmute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleCam,\n          children: camOn ? \"Video Off\" : \"Video On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleScreenShare,\n          children: screenSharing ? \"Stop Sharing\" : \"Share Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"end-btn\",\n          onClick: endMeeting,\n          children: \"End Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"x/aKP6R498A6HaM7iD8LCkzAORQ=\");\n_c = Room;\nconst Video = ({\n  peer,\n  name\n}) => {\n  _s2();\n  const ref = useRef();\n  useEffect(() => {\n    peer.on(\"stream\", stream => {\n      if (ref.current) ref.current.srcObject = stream;\n    });\n  }, [peer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      playsInline: true,\n      autoPlay: true,\n      ref: ref,\n      className: \"video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s2(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c2 = Video;\nexport default Room;\nvar _c, _c2;\n$RefreshReg$(_c, \"Room\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","socket","secure","reconnection","rejectUnauthorized","Room","_s","peers","setPeers","participants","setParticipants","userName","setUserName","roomID","setRoomID","micOn","setMicOn","camOn","setCamOn","screenSharing","setScreenSharing","userVideo","peersRef","streamRef","screenTrackRef","name","prompt","room","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","emit","roomId","on","users","forEach","user","id","peer","createPeer","push","peerID","map","u","payload","addPeer","signal","list","item","find","p","filter","disconnect","destroy","getTracks","t","stop","userToSignal","callerID","initiator","trickle","incomingSignal","toggleMic","getAudioTracks","track","enabled","toggleCam","getVideoTracks","handleScreenShare","screenStream","getDisplayMedia","screenTrack","replaceTrack","onended","err","console","error","endMeeting","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","muted","ref","autoPlay","playsInline","Video","length","pName","idx","onClick","_c","_s2","_c2","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./Room.css\";\r\n\r\nconst socket = io(\"https://192.168.29.23:5000\", {\r\n  secure: true,\r\n  reconnection: true,\r\n  rejectUnauthorized: false,\r\n});\r\n\r\nconst Room = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [micOn, setMicOn] = useState(true);\r\n  const [camOn, setCamOn] = useState(true);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const streamRef = useRef();\r\n  const screenTrackRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const name = prompt(\"Enter your name\");\r\n    const room = prompt(\"Enter room code\");\r\n    setUserName(name);\r\n    setRoomID(room);\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        streamRef.current = stream;\r\n        if (userVideo.current) userVideo.current.srcObject = stream;\r\n\r\n        socket.emit(\"join-room\", { roomId: room, userName: name });\r\n\r\n        socket.on(\"all-users\", (users) => {\r\n          const peers = [];\r\n          users.forEach((user) => {\r\n            if (user.id === socket.id) return;\r\n            const peer = createPeer(user.id, socket.id, stream);\r\n            peersRef.current.push({ peerID: user.id, peer, userName: user.name });\r\n            peers.push({ peerID: user.id, peer, userName: user.name });\r\n          });\r\n          setPeers(peers);\r\n          setParticipants(users.map((u) => u.name));\r\n        });\r\n\r\n        socket.on(\"user-joined\", (payload) => {\r\n          const peer = addPeer(payload.signal, payload.id, stream);\r\n          peersRef.current.push({ peerID: payload.id, peer, userName: payload.name });\r\n          setPeers((users) => [...users, { peerID: payload.id, peer, userName: payload.name }]);\r\n          setParticipants((list) => [...list, payload.name]);\r\n        });\r\n\r\n        socket.on(\"receiving-returned-signal\", (payload) => {\r\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\r\n          if (item) item.peer.signal(payload.signal);\r\n        });\r\n\r\n        socket.on(\"user-disconnected\", (id) => {\r\n          setPeers((users) => users.filter((p) => p.peerID !== id));\r\n          peersRef.current = peersRef.current.filter((p) => p.peerID !== id);\r\n          setParticipants((list) => list.filter((name) => {\r\n            // Remove user by peerID\r\n            const p = peersRef.current.find(p => p.peerID === id);\r\n            return p ? true : false;\r\n          }));\r\n        });\r\n      });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      peersRef.current.forEach(({ peer }) => peer.destroy());\r\n      if (streamRef.current) streamRef.current.getTracks().forEach((t) => t.stop());\r\n    };\r\n  }, []);\r\n\r\n  function createPeer(userToSignal, callerID, stream) {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"sending-signal\", { userToSignal, callerID, signal });\r\n    });\r\n\r\n    return peer;\r\n  }\r\n\r\n  function addPeer(incomingSignal, callerID, stream) {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"returning-signal\", { signal, callerID });\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n\r\n    return peer;\r\n  }\r\n\r\n  const toggleMic = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getAudioTracks().forEach((track) => {\r\n      track.enabled = !micOn;\r\n    });\r\n    setMicOn(!micOn);\r\n  };\r\n\r\n  const toggleCam = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getVideoTracks().forEach((track) => {\r\n      track.enabled = !camOn;\r\n    });\r\n    setCamOn(!camOn);\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    if (!screenSharing) {\r\n      try {\r\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n        const screenTrack = screenStream.getVideoTracks()[0];\r\n        screenTrackRef.current = screenTrack;\r\n\r\n        peersRef.current.forEach(({ peer }) => {\r\n          peer.replaceTrack(streamRef.current.getVideoTracks()[0], screenTrack, streamRef.current);\r\n        });\r\n\r\n        screenTrack.onended = () => {\r\n          peersRef.current.forEach(({ peer }) => {\r\n            peer.replaceTrack(screenTrack, streamRef.current.getVideoTracks()[0], streamRef.current);\r\n          });\r\n          setScreenSharing(false);\r\n        };\r\n\r\n        setScreenSharing(true);\r\n      } catch (err) {\r\n        console.error(\"Screen share error:\", err);\r\n      }\r\n    } else {\r\n      if (screenTrackRef.current) screenTrackRef.current.stop();\r\n      setScreenSharing(false);\r\n    }\r\n  };\r\n\r\n  const endMeeting = () => {\r\n    peersRef.current.forEach(({ peer }) => peer.destroy());\r\n    peersRef.current = [];\r\n    if (streamRef.current) streamRef.current.getTracks().forEach((track) => track.stop());\r\n    socket.disconnect();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <header className=\"room-header\">\r\n        <h2 className=\"logo\">Ve Meet</h2>\r\n        <div>\r\n          <span>Room: {roomID}</span>\r\n          <span className=\"username\">You: {userName}</span>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"video-grid\">\r\n        <div className=\"video-block\">\r\n          <video muted ref={userVideo} autoPlay playsInline className=\"video\" />\r\n          <p>{userName} (You)</p>\r\n        </div>\r\n        {peers.map(({ peerID, peer, userName }) => (\r\n          <Video key={peerID} peer={peer} name={userName} />\r\n        ))}\r\n      </main>\r\n\r\n      <aside className=\"participants-panel\">\r\n        <h3>Participants ({participants.length + 1})</h3>\r\n        <ul>\r\n          <li>{userName} (You)</li>\r\n          {participants.map((pName, idx) => (\r\n            <li key={idx}>{pName}</li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"controls\">\r\n          <button onClick={toggleMic}>{micOn ? \"Mute\" : \"Unmute\"}</button>\r\n          <button onClick={toggleCam}>{camOn ? \"Video Off\" : \"Video On\"}</button>\r\n          <button onClick={handleScreenShare}>{screenSharing ? \"Stop Sharing\" : \"Share Screen\"}</button>\r\n          <button className=\"end-btn\" onClick={endMeeting}>\r\n            End Meeting\r\n          </button>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Video = ({ peer, name }) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    peer.on(\"stream\", (stream) => {\r\n      if (ref.current) ref.current.srcObject = stream;\r\n    });\r\n  }, [peer]);\r\n\r\n  return (\r\n    <div className=\"video-block\">\r\n      <video playsInline autoPlay ref={ref} className=\"video\" />\r\n      <p>{name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}