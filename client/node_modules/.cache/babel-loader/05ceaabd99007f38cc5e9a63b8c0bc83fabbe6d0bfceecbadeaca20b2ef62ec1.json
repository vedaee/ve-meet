{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\n// Room.js\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"https://localhost:5000\", {\n  secure: true\n}); // Update if using ngrok\n\nconst Room = () => {\n  _s();\n  const [peers, setPeers] = useState({});\n  const [name, setName] = useState(\"Host\");\n  const [roomId, setRoomId] = useState(\"VE1234\");\n  const [participants, setParticipants] = useState([\"Host\"]);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const localVideoRef = useRef();\n  const peerConnections = useRef({});\n  const localStream = useRef();\n  const screenStreamRef = useRef();\n  useEffect(() => {\n    // Get media\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      localVideoRef.current.srcObject = stream;\n      localStream.current = stream;\n      socket.emit(\"join-room\", {\n        roomId,\n        name: \"Host\"\n      });\n    });\n\n    // Incoming call\n    socket.on(\"user-joined\", ({\n      socketId,\n      name: guestName\n    }) => {\n      const peer = createPeer(socketId, socket, localStream.current);\n      peerConnections.current[socketId] = {\n        peer,\n        name: guestName\n      };\n      setParticipants(prev => [...prev, guestName]);\n    });\n\n    // Receive offer\n    socket.on(\"offer\", async ({\n      from,\n      offer,\n      name: guestName\n    }) => {\n      const pc = createPeerConnection(from);\n      await pc.setRemoteDescription(new RTCSessionDescription(offer));\n      const answer = await pc.createAnswer();\n      await pc.setLocalDescription(answer);\n      socket.emit(\"answer\", {\n        to: from,\n        answer\n      });\n      peerConnections.current[from] = {\n        peer: pc,\n        name: guestName\n      };\n      setParticipants(prev => [...prev, guestName]);\n    });\n\n    // Receive answer\n    socket.on(\"answer\", ({\n      from,\n      answer\n    }) => {\n      var _peerConnections$curr;\n      (_peerConnections$curr = peerConnections.current[from]) === null || _peerConnections$curr === void 0 ? void 0 : _peerConnections$curr.peer.setRemoteDescription(new RTCSessionDescription(answer));\n    });\n\n    // Ice candidate\n    socket.on(\"ice-candidate\", ({\n      from,\n      candidate\n    }) => {\n      var _peerConnections$curr2;\n      (_peerConnections$curr2 = peerConnections.current[from]) === null || _peerConnections$curr2 === void 0 ? void 0 : _peerConnections$curr2.peer.addIceCandidate(new RTCIceCandidate(candidate));\n    });\n\n    // Remove user\n    socket.on(\"user-left\", ({\n      socketId\n    }) => {\n      if (peerConnections.current[socketId]) {\n        peerConnections.current[socketId].peer.close();\n        delete peerConnections.current[socketId];\n        setParticipants(prev => prev.filter(p => {\n          var _peerConnections$curr3;\n          return p !== ((_peerConnections$curr3 = peerConnections.current[socketId]) === null || _peerConnections$curr3 === void 0 ? void 0 : _peerConnections$curr3.name);\n        }));\n      }\n    });\n    return () => {\n      socket.disconnect();\n      Object.values(peerConnections.current).forEach(({\n        peer\n      }) => peer.close());\n    };\n  }, []);\n  const createPeer = (socketId, socket, stream) => {\n    const pc = createPeerConnection(socketId);\n    stream.getTracks().forEach(track => pc.addTrack(track, stream));\n    pc.onicecandidate = event => {\n      if (event.candidate) {\n        socket.emit(\"ice-candidate\", {\n          to: socketId,\n          candidate: event.candidate\n        });\n      }\n    };\n    return pc;\n  };\n  const createPeerConnection = socketId => {\n    const pc = new RTCPeerConnection();\n    pc.ontrack = event => {\n      const remoteStream = event.streams[0];\n      setPeers(prev => {\n        var _peerConnections$curr4;\n        return {\n          ...prev,\n          [socketId]: {\n            stream: remoteStream,\n            name: ((_peerConnections$curr4 = peerConnections.current[socketId]) === null || _peerConnections$curr4 === void 0 ? void 0 : _peerConnections$curr4.name) || \"Guest\"\n          }\n        };\n      });\n    };\n    return pc;\n  };\n  const toggleMute = () => {\n    localStream.current.getAudioTracks()[0].enabled = !localStream.current.getAudioTracks()[0].enabled;\n  };\n  const toggleVideo = () => {\n    localStream.current.getVideoTracks()[0].enabled = !localStream.current.getVideoTracks()[0].enabled;\n  };\n  const handleScreenShare = async () => {\n    if (!screenSharing) {\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      screenStreamRef.current = screenStream;\n      const screenTrack = screenStream.getVideoTracks()[0];\n      Object.values(peerConnections.current).forEach(({\n        peer\n      }) => {\n        const sender = peer.getSenders().find(s => s.track.kind === \"video\");\n        if (sender) sender.replaceTrack(screenTrack);\n      });\n      setScreenSharing(true);\n      screenTrack.onended = () => {\n        Object.values(peerConnections.current).forEach(({\n          peer\n        }) => {\n          const sender = peer.getSenders().find(s => s.track.kind === \"video\");\n          if (sender) sender.replaceTrack(localStream.current.getVideoTracks()[0]);\n        });\n        setScreenSharing(false);\n      };\n    }\n  };\n  const endMeeting = () => {\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          muted: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"video-name\",\n          children: \"Host\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), Object.entries(peers).map(([id, {\n        stream,\n        name\n      }]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          autoPlay: true,\n          playsInline: true,\n          ref: video => video && (video.srcObject = stream),\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"video-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Participants (\", participants.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: participants.map((p, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: p\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMute,\n          children: \"Mute/Unmute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleVideo,\n          children: \"Video On/Off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleScreenShare,\n          children: \"Share Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: endMeeting,\n          className: \"end\",\n          children: \"End\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"qvgVAhpGERb9U0g+Vx/6boY3yzo=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","secure","Room","_s","peers","setPeers","name","setName","roomId","setRoomId","participants","setParticipants","screenSharing","setScreenSharing","localVideoRef","peerConnections","localStream","screenStreamRef","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","emit","on","socketId","guestName","peer","createPeer","prev","from","offer","pc","createPeerConnection","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","to","_peerConnections$curr","candidate","_peerConnections$curr2","addIceCandidate","RTCIceCandidate","close","filter","p","_peerConnections$curr3","disconnect","Object","values","forEach","getTracks","track","addTrack","onicecandidate","event","RTCPeerConnection","ontrack","remoteStream","streams","_peerConnections$curr4","toggleMute","getAudioTracks","enabled","toggleVideo","getVideoTracks","handleScreenShare","screenStream","getDisplayMedia","screenTrack","sender","getSenders","find","s","kind","replaceTrack","onended","endMeeting","window","location","reload","className","children","ref","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","entries","map","id","playsInline","length","i","onClick","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST/client/src/components/Room.js"],"sourcesContent":["// Room.js\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"../App.css\";\r\n\r\nconst socket = io(\"https://localhost:5000\", { secure: true }); // Update if using ngrok\r\n\r\nconst Room = () => {\r\n  const [peers, setPeers] = useState({});\r\n  const [name, setName] = useState(\"Host\");\r\n  const [roomId, setRoomId] = useState(\"VE1234\");\r\n  const [participants, setParticipants] = useState([\"Host\"]);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n\r\n  const localVideoRef = useRef();\r\n  const peerConnections = useRef({});\r\n  const localStream = useRef();\r\n  const screenStreamRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // Get media\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n      localVideoRef.current.srcObject = stream;\r\n      localStream.current = stream;\r\n\r\n      socket.emit(\"join-room\", { roomId, name: \"Host\" });\r\n    });\r\n\r\n    // Incoming call\r\n    socket.on(\"user-joined\", ({ socketId, name: guestName }) => {\r\n      const peer = createPeer(socketId, socket, localStream.current);\r\n      peerConnections.current[socketId] = { peer, name: guestName };\r\n      setParticipants((prev) => [...prev, guestName]);\r\n    });\r\n\r\n    // Receive offer\r\n    socket.on(\"offer\", async ({ from, offer, name: guestName }) => {\r\n      const pc = createPeerConnection(from);\r\n      await pc.setRemoteDescription(new RTCSessionDescription(offer));\r\n      const answer = await pc.createAnswer();\r\n      await pc.setLocalDescription(answer);\r\n\r\n      socket.emit(\"answer\", { to: from, answer });\r\n      peerConnections.current[from] = { peer: pc, name: guestName };\r\n      setParticipants((prev) => [...prev, guestName]);\r\n    });\r\n\r\n    // Receive answer\r\n    socket.on(\"answer\", ({ from, answer }) => {\r\n      peerConnections.current[from]?.peer.setRemoteDescription(new RTCSessionDescription(answer));\r\n    });\r\n\r\n    // Ice candidate\r\n    socket.on(\"ice-candidate\", ({ from, candidate }) => {\r\n      peerConnections.current[from]?.peer.addIceCandidate(new RTCIceCandidate(candidate));\r\n    });\r\n\r\n    // Remove user\r\n    socket.on(\"user-left\", ({ socketId }) => {\r\n      if (peerConnections.current[socketId]) {\r\n        peerConnections.current[socketId].peer.close();\r\n        delete peerConnections.current[socketId];\r\n        setParticipants((prev) => prev.filter((p) => p !== peerConnections.current[socketId]?.name));\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      Object.values(peerConnections.current).forEach(({ peer }) => peer.close());\r\n    };\r\n  }, []);\r\n\r\n  const createPeer = (socketId, socket, stream) => {\r\n    const pc = createPeerConnection(socketId);\r\n    stream.getTracks().forEach((track) => pc.addTrack(track, stream));\r\n\r\n    pc.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        socket.emit(\"ice-candidate\", { to: socketId, candidate: event.candidate });\r\n      }\r\n    };\r\n\r\n    return pc;\r\n  };\r\n\r\n  const createPeerConnection = (socketId) => {\r\n    const pc = new RTCPeerConnection();\r\n\r\n    pc.ontrack = (event) => {\r\n      const remoteStream = event.streams[0];\r\n      setPeers((prev) => ({ ...prev, [socketId]: { stream: remoteStream, name: peerConnections.current[socketId]?.name || \"Guest\" } }));\r\n    };\r\n\r\n    return pc;\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    localStream.current.getAudioTracks()[0].enabled = !localStream.current.getAudioTracks()[0].enabled;\r\n  };\r\n\r\n  const toggleVideo = () => {\r\n    localStream.current.getVideoTracks()[0].enabled = !localStream.current.getVideoTracks()[0].enabled;\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    if (!screenSharing) {\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n      screenStreamRef.current = screenStream;\r\n\r\n      const screenTrack = screenStream.getVideoTracks()[0];\r\n      Object.values(peerConnections.current).forEach(({ peer }) => {\r\n        const sender = peer.getSenders().find((s) => s.track.kind === \"video\");\r\n        if (sender) sender.replaceTrack(screenTrack);\r\n      });\r\n\r\n      setScreenSharing(true);\r\n\r\n      screenTrack.onended = () => {\r\n        Object.values(peerConnections.current).forEach(({ peer }) => {\r\n          const sender = peer.getSenders().find((s) => s.track.kind === \"video\");\r\n          if (sender) sender.replaceTrack(localStream.current.getVideoTracks()[0]);\r\n        });\r\n        setScreenSharing(false);\r\n      };\r\n    }\r\n  };\r\n\r\n  const endMeeting = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <div className=\"video-grid\">\r\n        <div className=\"video-block\">\r\n          <video ref={localVideoRef} autoPlay muted className=\"video\" />\r\n          <p className=\"video-name\">Host</p>\r\n        </div>\r\n        {Object.entries(peers).map(([id, { stream, name }]) => (\r\n          <div key={id} className=\"video-block\">\r\n            <video autoPlay playsInline ref={(video) => video && (video.srcObject = stream)} className=\"video\" />\r\n            <p className=\"video-name\">{name}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"side-panel\">\r\n        <h3>Participants ({participants.length})</h3>\r\n        <ul>\r\n          {participants.map((p, i) => (\r\n            <li key={i}>{p}</li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"controls\">\r\n          <button onClick={toggleMute}>Mute/Unmute</button>\r\n          <button onClick={toggleVideo}>Video On/Off</button>\r\n          <button onClick={handleScreenShare}>Share Screen</button>\r\n          <button onClick={endMeeting} className=\"end\">End</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}