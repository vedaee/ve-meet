{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"https://192.168.29.23:5000\";\nconst socket = io(SERVER_URL, {\n  secure: true,\n  reconnection: true,\n  rejectUnauthorized: false\n});\nconst Room = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\");\n  const [participants, setParticipants] = useState([]);\n  const [videoOn, setVideoOn] = useState(true);\n  const [audioOn, setAudioOn] = useState(true);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const videoRefs = useRef({});\n  const streamRef = useRef();\n  const screenTrackRef = useRef();\n  useEffect(() => {\n    const name = prompt(\"Enter your name:\");\n    const room = prompt(\"Enter room code:\");\n    setUserName(name || \"Host\");\n    setRoomID(room || \"default-room\");\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      streamRef.current = stream;\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n      socket.emit(\"join-room\", {\n        roomID: room,\n        userName: name\n      });\n      socket.on(\"all-users\", users => {\n        const peers = [];\n        users.forEach(({\n          socketID,\n          userName\n        }) => {\n          const peer = createPeer(socketID, socket.id, stream);\n          peersRef.current.push({\n            peerID: socketID,\n            peer,\n            userName\n          });\n          peers.push({\n            peerID: socketID,\n            peer,\n            userName\n          });\n        });\n        setPeers(peers);\n      });\n      socket.on(\"user-joined\", ({\n        signal,\n        callerID,\n        userName\n      }) => {\n        const peer = addPeer(signal, callerID, stream);\n        peersRef.current.push({\n          peerID: callerID,\n          peer,\n          userName\n        });\n        setPeers(users => [...users, {\n          peerID: callerID,\n          peer,\n          userName\n        }]);\n      });\n      socket.on(\"receiving-returned-signal\", ({\n        id,\n        signal\n      }) => {\n        const item = peersRef.current.find(p => p.peerID === id);\n        if (item) {\n          item.peer.signal(signal);\n        }\n      });\n      socket.on(\"user-disconnected\", socketID => {\n        const peerObj = peersRef.current.find(p => p.peerID === socketID);\n        if (peerObj) {\n          peerObj.peer.destroy();\n        }\n        peersRef.current = peersRef.current.filter(p => p.peerID !== socketID);\n        setPeers(users => users.filter(p => p.peerID !== socketID));\n      });\n      socket.on(\"update-participants\", list => {\n        setParticipants(list);\n      });\n    });\n  }, []);\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const videoElem = videoRefs.current[userToSignal];\n      if (videoElem) {\n        videoElem.srcObject = remoteStream;\n      }\n    });\n    peer.on(\"error\", err => {\n      console.error(\"Peer error (createPeer):\", err);\n    });\n    return peer;\n  }\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"returning-signal\", {\n        signal,\n        to: callerID\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const videoElem = videoRefs.current[callerID];\n      if (videoElem) {\n        videoElem.srcObject = remoteStream;\n      }\n    });\n    peer.on(\"error\", err => {\n      console.error(\"Peer error (addPeer):\", err);\n    });\n    try {\n      peer.signal(incomingSignal);\n    } catch (err) {\n      console.error(\"Error signaling peer:\", err);\n    }\n    return peer;\n  }\n  const toggleVideo = () => {\n    streamRef.current.getVideoTracks()[0].enabled = !videoOn;\n    setVideoOn(prev => !prev);\n  };\n  const toggleAudio = () => {\n    streamRef.current.getAudioTracks()[0].enabled = !audioOn;\n    setAudioOn(prev => !prev);\n  };\n  const endMeeting = () => {\n    socket.disconnect();\n    window.location.href = \"/\";\n  };\n  const startScreenShare = async () => {\n    try {\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      const screenTrack = screenStream.getVideoTracks()[0];\n      screenTrackRef.current = screenTrack;\n      peersRef.current.forEach(({\n        peer\n      }) => {\n        const sender = peer.streams[0].getVideoTracks().map(() => peer._pc.getSenders().find(s => s.track.kind === 'video'))[0];\n        if (sender) {\n          sender.replaceTrack(screenTrack);\n        }\n      });\n      screenTrack.onended = () => {\n        stopScreenShare();\n      };\n      setScreenSharing(true);\n    } catch (err) {\n      console.error(\"Error sharing screen:\", err);\n    }\n  };\n  const stopScreenShare = () => {\n    const videoTrack = streamRef.current.getVideoTracks()[0];\n    peersRef.current.forEach(({\n      peer\n    }) => {\n      const sender = peer._pc.getSenders().find(s => s.track.kind === 'video');\n      if (sender) {\n        sender.replaceTrack(videoTrack);\n      }\n    });\n    setScreenSharing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: [\"Ve \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Meet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-info\",\n        children: [\"Room: \", roomID, \" | You: \", userName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          muted: true,\n          ref: userVideo,\n          autoPlay: true,\n          playsInline: true,\n          className: \"video-element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-tag\",\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), peers.map(({\n        peerID,\n        userName\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          autoPlay: true,\n          ref: ref => videoRefs.current[peerID] = ref,\n          className: \"video-element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-tag\",\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, peerID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleAudio,\n        children: audioOn ? \"Mute\" : \"Unmute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVideo,\n        children: videoOn ? \"Stop Video\" : \"Start Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: screenSharing ? stopScreenShare : startScreenShare,\n        children: screenSharing ? \"Stop Share\" : \"Share Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: endMeeting,\n        className: \"end-btn\",\n        children: \"End Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"participant-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Participants (\", participants.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: participants.map((name, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"hM+7qhf77Ko+wcSvwMxiHQTo96w=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","SERVER_URL","socket","secure","reconnection","rejectUnauthorized","Room","_s","peers","setPeers","userName","setUserName","roomID","setRoomID","participants","setParticipants","videoOn","setVideoOn","audioOn","setAudioOn","screenSharing","setScreenSharing","userVideo","peersRef","videoRefs","streamRef","screenTrackRef","name","prompt","room","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","emit","on","users","forEach","socketID","peer","createPeer","id","push","peerID","signal","callerID","addPeer","item","find","p","peerObj","destroy","filter","list","userToSignal","initiator","trickle","remoteStream","videoElem","err","console","error","incomingSignal","to","toggleVideo","getVideoTracks","enabled","prev","toggleAudio","getAudioTracks","endMeeting","disconnect","window","location","href","startScreenShare","screenStream","getDisplayMedia","screenTrack","sender","streams","map","_pc","getSenders","s","track","kind","replaceTrack","onended","stopScreenShare","videoTrack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","muted","ref","autoPlay","playsInline","onClick","length","idx","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./Room.css\";\r\n\r\nconst SERVER_URL = \"https://192.168.29.23:5000\";\r\nconst socket = io(SERVER_URL, {\r\n  secure: true,\r\n  reconnection: true,\r\n  rejectUnauthorized: false,\r\n});\r\n\r\nconst Room = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [participants, setParticipants] = useState([]);\r\n  const [videoOn, setVideoOn] = useState(true);\r\n  const [audioOn, setAudioOn] = useState(true);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const videoRefs = useRef({});\r\n  const streamRef = useRef();\r\n  const screenTrackRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const name = prompt(\"Enter your name:\");\r\n    const room = prompt(\"Enter room code:\");\r\n    setUserName(name || \"Host\");\r\n    setRoomID(room || \"default-room\");\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        streamRef.current = stream;\r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = stream;\r\n        }\r\n\r\n        socket.emit(\"join-room\", { roomID: room, userName: name });\r\n\r\n        socket.on(\"all-users\", (users) => {\r\n          const peers = [];\r\n          users.forEach(({ socketID, userName }) => {\r\n            const peer = createPeer(socketID, socket.id, stream);\r\n            peersRef.current.push({\r\n              peerID: socketID,\r\n              peer,\r\n              userName,\r\n            });\r\n            peers.push({ peerID: socketID, peer, userName });\r\n          });\r\n          setPeers(peers);\r\n        });\r\n\r\n        socket.on(\"user-joined\", ({ signal, callerID, userName }) => {\r\n          const peer = addPeer(signal, callerID, stream);\r\n          peersRef.current.push({\r\n            peerID: callerID,\r\n            peer,\r\n            userName,\r\n          });\r\n\r\n          setPeers((users) => [\r\n            ...users,\r\n            { peerID: callerID, peer, userName },\r\n          ]);\r\n        });\r\n\r\n        socket.on(\"receiving-returned-signal\", ({ id, signal }) => {\r\n          const item = peersRef.current.find((p) => p.peerID === id);\r\n          if (item) {\r\n            item.peer.signal(signal);\r\n          }\r\n        });\r\n\r\n        socket.on(\"user-disconnected\", (socketID) => {\r\n          const peerObj = peersRef.current.find((p) => p.peerID === socketID);\r\n          if (peerObj) {\r\n            peerObj.peer.destroy();\r\n          }\r\n          peersRef.current = peersRef.current.filter(\r\n            (p) => p.peerID !== socketID\r\n          );\r\n          setPeers((users) => users.filter((p) => p.peerID !== socketID));\r\n        });\r\n\r\n        socket.on(\"update-participants\", (list) => {\r\n          setParticipants(list);\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  function createPeer(userToSignal, callerID, stream) {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"sending-signal\", {\r\n        userToSignal,\r\n        callerID,\r\n        signal,\r\n      });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const videoElem = videoRefs.current[userToSignal];\r\n      if (videoElem) {\r\n        videoElem.srcObject = remoteStream;\r\n      }\r\n    });\r\n\r\n    peer.on(\"error\", (err) => {\r\n      console.error(\"Peer error (createPeer):\", err);\r\n    });\r\n\r\n    return peer;\r\n  }\r\n\r\n  function addPeer(incomingSignal, callerID, stream) {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"returning-signal\", { signal, to: callerID });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const videoElem = videoRefs.current[callerID];\r\n      if (videoElem) {\r\n        videoElem.srcObject = remoteStream;\r\n      }\r\n    });\r\n\r\n    peer.on(\"error\", (err) => {\r\n      console.error(\"Peer error (addPeer):\", err);\r\n    });\r\n\r\n    try {\r\n      peer.signal(incomingSignal);\r\n    } catch (err) {\r\n      console.error(\"Error signaling peer:\", err);\r\n    }\r\n\r\n    return peer;\r\n  }\r\n\r\n  const toggleVideo = () => {\r\n    streamRef.current.getVideoTracks()[0].enabled = !videoOn;\r\n    setVideoOn((prev) => !prev);\r\n  };\r\n\r\n  const toggleAudio = () => {\r\n    streamRef.current.getAudioTracks()[0].enabled = !audioOn;\r\n    setAudioOn((prev) => !prev);\r\n  };\r\n\r\n  const endMeeting = () => {\r\n    socket.disconnect();\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  const startScreenShare = async () => {\r\n    try {\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: true,\r\n      });\r\n      const screenTrack = screenStream.getVideoTracks()[0];\r\n      screenTrackRef.current = screenTrack;\r\n\r\n      peersRef.current.forEach(({ peer }) => {\r\n        const sender = peer.streams[0]\r\n          .getVideoTracks()\r\n          .map(() => peer._pc.getSenders().find(s => s.track.kind === 'video'))[0];\r\n        if (sender) {\r\n          sender.replaceTrack(screenTrack);\r\n        }\r\n      });\r\n\r\n      screenTrack.onended = () => {\r\n        stopScreenShare();\r\n      };\r\n\r\n      setScreenSharing(true);\r\n    } catch (err) {\r\n      console.error(\"Error sharing screen:\", err);\r\n    }\r\n  };\r\n\r\n  const stopScreenShare = () => {\r\n    const videoTrack = streamRef.current.getVideoTracks()[0];\r\n    peersRef.current.forEach(({ peer }) => {\r\n      const sender = peer._pc.getSenders().find(s => s.track.kind === 'video');\r\n      if (sender) {\r\n        sender.replaceTrack(videoTrack);\r\n      }\r\n    });\r\n    setScreenSharing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <header className=\"top-bar\">\r\n        <div className=\"logo\">Ve <span>Meet</span></div>\r\n        <div className=\"room-info\">Room: {roomID} | You: {userName}</div>\r\n      </header>\r\n\r\n      <div className=\"video-grid\">\r\n        <div className=\"video-block\">\r\n          <video\r\n            muted\r\n            ref={userVideo}\r\n            autoPlay\r\n            playsInline\r\n            className=\"video-element\"\r\n          />\r\n          <div className=\"name-tag\">{userName} (You)</div>\r\n        </div>\r\n\r\n        {peers.map(({ peerID, userName }) => (\r\n          <div key={peerID} className=\"video-block\">\r\n            <video\r\n              playsInline\r\n              autoPlay\r\n              ref={(ref) => (videoRefs.current[peerID] = ref)}\r\n              className=\"video-element\"\r\n            />\r\n            <div className=\"name-tag\">{userName}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        <button onClick={toggleAudio}>\r\n          {audioOn ? \"Mute\" : \"Unmute\"}\r\n        </button>\r\n        <button onClick={toggleVideo}>\r\n          {videoOn ? \"Stop Video\" : \"Start Video\"}\r\n        </button>\r\n        <button onClick={screenSharing ? stopScreenShare : startScreenShare}>\r\n          {screenSharing ? \"Stop Share\" : \"Share Screen\"}\r\n        </button>\r\n        <button onClick={endMeeting} className=\"end-btn\">\r\n          End Meeting\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"participant-list\">\r\n        <h4>Participants ({participants.length})</h4>\r\n        <ul>\r\n          {participants.map((name, idx) => (\r\n            <li key={idx}>{name}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}