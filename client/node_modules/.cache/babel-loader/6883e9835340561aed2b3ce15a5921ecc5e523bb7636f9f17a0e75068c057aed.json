{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport './Room.css'; // Your styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('https://localhost:5000'); // Use HTTPS as your server uses it\n\nconst Room = () => {\n  _s();\n  const [roomId, setRoomId] = useState('');\n  const [name, setName] = useState('');\n  const [joined, setJoined] = useState(false);\n  const [users, setUsers] = useState([]); // list of socket IDs in room\n  const [userMap, setUserMap] = useState({}); // map socketId => userName\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState([]);\n  const [selectedCam, setSelectedCam] = useState('');\n  const [cameras, setCameras] = useState([]);\n  const localVideoRef = useRef();\n  const peersRef = useRef({});\n  const screenSharing = useRef(false);\n  useEffect(() => {\n    if (!joined) return;\n\n    // List cameras\n    navigator.mediaDevices.enumerateDevices().then(devices => {\n      const cams = devices.filter(device => device.kind === 'videoinput');\n      setCameras(cams);\n      if (!selectedCam && cams.length) setSelectedCam(cams[0].deviceId);\n    });\n    const constraints = {\n      audio: true,\n      video: {\n        deviceId: selectedCam ? {\n          exact: selectedCam\n        } : undefined\n      }\n    };\n\n    // Get media and set up WebRTC\n    navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n      setLocalStream(stream);\n      localVideoRef.current.srcObject = stream;\n      socket.emit('join-room', {\n        roomId,\n        name\n      });\n      socket.on('user-list', userIds => {\n        setUsers(userIds);\n\n        // Keep userMap updated, remove IDs not present\n        setUserMap(prevMap => {\n          const newMap = {};\n          userIds.forEach(id => {\n            if (prevMap[id]) newMap[id] = prevMap[id];\n          });\n          return newMap;\n        });\n      });\n      socket.on('user-joined', ({\n        id,\n        name: joinedName\n      }) => {\n        setUserMap(prev => ({\n          ...prev,\n          [id]: joinedName\n        }));\n      });\n      socket.on('user-left', ({\n        id\n      }) => {\n        setUserMap(prev => {\n          const copy = {\n            ...prev\n          };\n          delete copy[id];\n          return copy;\n        });\n      });\n      socket.on('offer', async ({\n        from,\n        offer\n      }) => {\n        const peer = new RTCPeerConnection();\n        peersRef.current[from] = peer;\n        stream.getTracks().forEach(track => peer.addTrack(track, stream));\n        peer.onicecandidate = e => {\n          if (e.candidate) {\n            socket.emit('candidate', {\n              to: from,\n              candidate: e.candidate\n            });\n          }\n        };\n        peer.ontrack = e => {\n          setRemoteStreams(prev => {\n            // Remove old stream with same id if exists\n            const filtered = prev.filter(p => p.id !== from);\n            return [...filtered, {\n              id: from,\n              stream: e.streams[0]\n            }];\n          });\n        };\n        await peer.setRemoteDescription(offer);\n        const answer = await peer.createAnswer();\n        await peer.setLocalDescription(answer);\n        socket.emit('answer', {\n          to: from,\n          answer\n        });\n      });\n      socket.on('answer', async ({\n        from,\n        answer\n      }) => {\n        var _peersRef$current$fro;\n        await ((_peersRef$current$fro = peersRef.current[from]) === null || _peersRef$current$fro === void 0 ? void 0 : _peersRef$current$fro.setRemoteDescription(answer));\n      });\n      socket.on('candidate', async ({\n        from,\n        candidate\n      }) => {\n        var _peersRef$current$fro2;\n        await ((_peersRef$current$fro2 = peersRef.current[from]) === null || _peersRef$current$fro2 === void 0 ? void 0 : _peersRef$current$fro2.addIceCandidate(candidate));\n      });\n      socket.on('user-joined', ({\n        id,\n        name\n      }) => {\n        if (id === socket.id) return; // Ignore self\n\n        const peer = new RTCPeerConnection();\n        peersRef.current[id] = peer;\n        stream.getTracks().forEach(track => peer.addTrack(track, stream));\n        peer.onicecandidate = e => {\n          if (e.candidate) {\n            socket.emit('candidate', {\n              to: id,\n              candidate: e.candidate\n            });\n          }\n        };\n        peer.ontrack = e => {\n          setRemoteStreams(prev => {\n            const filtered = prev.filter(p => p.id !== id);\n            return [...filtered, {\n              id,\n              stream: e.streams[0]\n            }];\n          });\n        };\n        peer.createOffer().then(offer => {\n          peer.setLocalDescription(offer);\n          socket.emit('offer', {\n            to: id,\n            offer\n          });\n        });\n      });\n    });\n\n    // Cleanup socket events when component unmounts or changes\n    return () => {\n      socket.off('user-list');\n      socket.off('user-joined');\n      socket.off('user-left');\n      socket.off('offer');\n      socket.off('answer');\n      socket.off('candidate');\n    };\n  }, [joined, selectedCam]);\n  const handleJoin = () => {\n    if (roomId && name) {\n      setJoined(true);\n      // Also add self to userMap\n      setUserMap({\n        [socket.id]: name\n      });\n    }\n  };\n  const handleEnd = () => {\n    Object.values(peersRef.current).forEach(peer => peer.close());\n    localStream === null || localStream === void 0 ? void 0 : localStream.getTracks().forEach(track => track.stop());\n    socket.emit('leave-room', {\n      roomId\n    });\n    setJoined(false);\n    setUsers([]);\n    setUserMap({});\n    setRemoteStreams([]);\n  };\n  const toggleAudio = () => {\n    if (localStream) {\n      const audioTrack = localStream.getAudioTracks()[0];\n      audioTrack.enabled = !audioTrack.enabled;\n    }\n  };\n  const toggleVideo = () => {\n    if (localStream) {\n      const videoTrack = localStream.getVideoTracks()[0];\n      videoTrack.enabled = !videoTrack.enabled;\n    }\n  };\n  const handleScreenShare = async () => {\n    if (!screenSharing.current) {\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      const screenTrack = screenStream.getVideoTracks()[0];\n      const sender = localStream.getVideoTracks()[0];\n      Object.values(peersRef.current).forEach(peer => {\n        const senders = peer.getSenders().filter(s => s.track.kind === 'video');\n        senders.forEach(s => s.replaceTrack(screenTrack));\n      });\n      screenTrack.onended = () => {\n        Object.values(peersRef.current).forEach(peer => {\n          const senders = peer.getSenders().filter(s => s.track.kind === 'video');\n          senders.forEach(s => s.replaceTrack(sender));\n        });\n      };\n      screenSharing.current = true;\n    }\n  };\n  if (!joined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join a Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Room Code\",\n        value: roomId,\n        onChange: e => setRoomId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Your Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCam,\n        onChange: e => setSelectedCam(e.target.value),\n        children: cameras.map(cam => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cam.deviceId,\n          children: cam.label || 'Camera'\n        }, cam.deviceId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoin,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Room: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"User: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          muted: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You (\", name, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), remoteStreams.map(({\n        id,\n        stream\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          autoPlay: true,\n          playsInline: true,\n          ref: video => {\n            if (video) video.srcObject = stream;\n          },\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userMap[id] || id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleAudio,\n        children: \"Mute/Unmute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVideo,\n        children: \"Video On/Off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleScreenShare,\n        children: \"Share Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEnd,\n        children: \"End Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Participants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: userMap[id] || id\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"I+pZdcplGVtKnY5g9endgaEIk2E=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","Room","_s","roomId","setRoomId","name","setName","joined","setJoined","users","setUsers","userMap","setUserMap","localStream","setLocalStream","remoteStreams","setRemoteStreams","selectedCam","setSelectedCam","cameras","setCameras","localVideoRef","peersRef","screenSharing","navigator","mediaDevices","enumerateDevices","then","devices","cams","filter","device","kind","length","deviceId","constraints","audio","video","exact","undefined","getUserMedia","stream","current","srcObject","emit","on","userIds","prevMap","newMap","forEach","id","joinedName","prev","copy","from","offer","peer","RTCPeerConnection","getTracks","track","addTrack","onicecandidate","e","candidate","to","ontrack","filtered","p","streams","setRemoteDescription","answer","createAnswer","setLocalDescription","_peersRef$current$fro","_peersRef$current$fro2","addIceCandidate","createOffer","off","handleJoin","handleEnd","Object","values","close","stop","toggleAudio","audioTrack","getAudioTracks","enabled","toggleVideo","videoTrack","getVideoTracks","handleScreenShare","screenStream","getDisplayMedia","screenTrack","sender","senders","getSenders","s","replaceTrack","onended","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","map","cam","label","onClick","ref","autoPlay","muted","playsInline","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './Room.css'; // Your styling\r\n\r\nconst socket = io('https://localhost:5000'); // Use HTTPS as your server uses it\r\n\r\nconst Room = () => {\r\n  const [roomId, setRoomId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [joined, setJoined] = useState(false);\r\n  const [users, setUsers] = useState([]); // list of socket IDs in room\r\n  const [userMap, setUserMap] = useState({}); // map socketId => userName\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const [remoteStreams, setRemoteStreams] = useState([]);\r\n  const [selectedCam, setSelectedCam] = useState('');\r\n  const [cameras, setCameras] = useState([]);\r\n  const localVideoRef = useRef();\r\n  const peersRef = useRef({});\r\n  const screenSharing = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!joined) return;\r\n\r\n    // List cameras\r\n    navigator.mediaDevices.enumerateDevices().then(devices => {\r\n      const cams = devices.filter(device => device.kind === 'videoinput');\r\n      setCameras(cams);\r\n      if (!selectedCam && cams.length) setSelectedCam(cams[0].deviceId);\r\n    });\r\n\r\n    const constraints = {\r\n      audio: true,\r\n      video: { deviceId: selectedCam ? { exact: selectedCam } : undefined },\r\n    };\r\n\r\n    // Get media and set up WebRTC\r\n    navigator.mediaDevices.getUserMedia(constraints).then(stream => {\r\n      setLocalStream(stream);\r\n      localVideoRef.current.srcObject = stream;\r\n\r\n      socket.emit('join-room', { roomId, name });\r\n\r\n      socket.on('user-list', (userIds) => {\r\n        setUsers(userIds);\r\n\r\n        // Keep userMap updated, remove IDs not present\r\n        setUserMap(prevMap => {\r\n          const newMap = {};\r\n          userIds.forEach(id => {\r\n            if (prevMap[id]) newMap[id] = prevMap[id];\r\n          });\r\n          return newMap;\r\n        });\r\n      });\r\n\r\n      socket.on('user-joined', ({ id, name: joinedName }) => {\r\n        setUserMap(prev => ({ ...prev, [id]: joinedName }));\r\n      });\r\n\r\n      socket.on('user-left', ({ id }) => {\r\n        setUserMap(prev => {\r\n          const copy = { ...prev };\r\n          delete copy[id];\r\n          return copy;\r\n        });\r\n      });\r\n\r\n      socket.on('offer', async ({ from, offer }) => {\r\n        const peer = new RTCPeerConnection();\r\n        peersRef.current[from] = peer;\r\n\r\n        stream.getTracks().forEach(track => peer.addTrack(track, stream));\r\n\r\n        peer.onicecandidate = e => {\r\n          if (e.candidate) {\r\n            socket.emit('candidate', { to: from, candidate: e.candidate });\r\n          }\r\n        };\r\n\r\n        peer.ontrack = e => {\r\n          setRemoteStreams(prev => {\r\n            // Remove old stream with same id if exists\r\n            const filtered = prev.filter(p => p.id !== from);\r\n            return [...filtered, { id: from, stream: e.streams[0] }];\r\n          });\r\n        };\r\n\r\n        await peer.setRemoteDescription(offer);\r\n        const answer = await peer.createAnswer();\r\n        await peer.setLocalDescription(answer);\r\n        socket.emit('answer', { to: from, answer });\r\n      });\r\n\r\n      socket.on('answer', async ({ from, answer }) => {\r\n        await peersRef.current[from]?.setRemoteDescription(answer);\r\n      });\r\n\r\n      socket.on('candidate', async ({ from, candidate }) => {\r\n        await peersRef.current[from]?.addIceCandidate(candidate);\r\n      });\r\n\r\n      socket.on('user-joined', ({ id, name }) => {\r\n        if (id === socket.id) return; // Ignore self\r\n\r\n        const peer = new RTCPeerConnection();\r\n        peersRef.current[id] = peer;\r\n\r\n        stream.getTracks().forEach(track => peer.addTrack(track, stream));\r\n\r\n        peer.onicecandidate = e => {\r\n          if (e.candidate) {\r\n            socket.emit('candidate', { to: id, candidate: e.candidate });\r\n          }\r\n        };\r\n\r\n        peer.ontrack = e => {\r\n          setRemoteStreams(prev => {\r\n            const filtered = prev.filter(p => p.id !== id);\r\n            return [...filtered, { id, stream: e.streams[0] }];\r\n          });\r\n        };\r\n\r\n        peer.createOffer().then(offer => {\r\n          peer.setLocalDescription(offer);\r\n          socket.emit('offer', { to: id, offer });\r\n        });\r\n      });\r\n    });\r\n\r\n    // Cleanup socket events when component unmounts or changes\r\n    return () => {\r\n      socket.off('user-list');\r\n      socket.off('user-joined');\r\n      socket.off('user-left');\r\n      socket.off('offer');\r\n      socket.off('answer');\r\n      socket.off('candidate');\r\n    };\r\n  }, [joined, selectedCam]);\r\n\r\n  const handleJoin = () => {\r\n    if (roomId && name) {\r\n      setJoined(true);\r\n      // Also add self to userMap\r\n      setUserMap({ [socket.id]: name });\r\n    }\r\n  };\r\n\r\n  const handleEnd = () => {\r\n    Object.values(peersRef.current).forEach(peer => peer.close());\r\n    localStream?.getTracks().forEach(track => track.stop());\r\n    socket.emit('leave-room', { roomId });\r\n    setJoined(false);\r\n    setUsers([]);\r\n    setUserMap({});\r\n    setRemoteStreams([]);\r\n  };\r\n\r\n  const toggleAudio = () => {\r\n    if (localStream) {\r\n      const audioTrack = localStream.getAudioTracks()[0];\r\n      audioTrack.enabled = !audioTrack.enabled;\r\n    }\r\n  };\r\n\r\n  const toggleVideo = () => {\r\n    if (localStream) {\r\n      const videoTrack = localStream.getVideoTracks()[0];\r\n      videoTrack.enabled = !videoTrack.enabled;\r\n    }\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    if (!screenSharing.current) {\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n      const screenTrack = screenStream.getVideoTracks()[0];\r\n      const sender = localStream.getVideoTracks()[0];\r\n\r\n      Object.values(peersRef.current).forEach(peer => {\r\n        const senders = peer.getSenders().filter(s => s.track.kind === 'video');\r\n        senders.forEach(s => s.replaceTrack(screenTrack));\r\n      });\r\n\r\n      screenTrack.onended = () => {\r\n        Object.values(peersRef.current).forEach(peer => {\r\n          const senders = peer.getSenders().filter(s => s.track.kind === 'video');\r\n          senders.forEach(s => s.replaceTrack(sender));\r\n        });\r\n      };\r\n\r\n      screenSharing.current = true;\r\n    }\r\n  };\r\n\r\n  if (!joined) {\r\n    return (\r\n      <div className=\"join-container\">\r\n        <h2>Join a Meeting</h2>\r\n        <input\r\n          placeholder=\"Enter Room Code\"\r\n          value={roomId}\r\n          onChange={e => setRoomId(e.target.value)}\r\n        />\r\n        <input\r\n          placeholder=\"Enter Your Name\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n        <select value={selectedCam} onChange={e => setSelectedCam(e.target.value)}>\r\n          {cameras.map(cam => (\r\n            <option key={cam.deviceId} value={cam.deviceId}>\r\n              {cam.label || 'Camera'}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button onClick={handleJoin}>Join</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <div className=\"header\">\r\n        <h2>Room: {roomId}</h2>\r\n        <h3>User: {name}</h3>\r\n      </div>\r\n\r\n      <div className=\"video-grid\">\r\n        <div className=\"video-block\">\r\n          <video ref={localVideoRef} autoPlay muted playsInline className=\"video\" />\r\n          <p>You ({name})</p>\r\n        </div>\r\n\r\n        {remoteStreams.map(({ id, stream }) => (\r\n          <div key={id} className=\"video-block\">\r\n            <video autoPlay playsInline ref={video => {\r\n              if (video) video.srcObject = stream;\r\n            }} className=\"video\" />\r\n            <p>{userMap[id] || id}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        <button onClick={toggleAudio}>Mute/Unmute</button>\r\n        <button onClick={toggleVideo}>Video On/Off</button>\r\n        <button onClick={handleScreenShare}>Share Screen</button>\r\n        <button onClick={handleEnd}>End Meeting</button>\r\n      </div>\r\n\r\n      <div className=\"sidebar\">\r\n        <h4>Participants</h4>\r\n        <ul>\r\n          {users.map(id => (\r\n            <li key={id}>{userMap[id] || id}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}