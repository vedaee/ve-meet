{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST\\\\client\\\\src\\\\components\\\\GuestRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"https://192.168.29.23:5000\"; // Your local server with SSL\n\nconst GuestRoom = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\");\n  const [joined, setJoined] = useState(false);\n  const [stream, setStream] = useState(null);\n  const [myID, setMyID] = useState(\"\");\n  const socketRef = useRef();\n  const peersRef = useRef([]);\n  const videoRefs = useRef({});\n  useEffect(() => {\n    socketRef.current = io(SERVER_URL, {\n      transports: [\"websocket\"]\n    });\n    socketRef.current.on(\"your-id\", id => {\n      setMyID(id);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n  const createVideoRef = id => {\n    if (!videoRefs.current[id]) {\n      videoRefs.current[id] = /*#__PURE__*/React.createRef();\n    }\n    return videoRefs.current[id];\n  };\n  const handleJoin = async () => {\n    try {\n      const userMedia = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      setStream(userMedia);\n      setJoined(true);\n      const myVideo = document.getElementById(\"my-video\");\n      if (myVideo) myVideo.srcObject = userMedia;\n      socketRef.current.emit(\"join-room\", {\n        roomID,\n        name\n      });\n      socketRef.current.on(\"all-users\", users => {\n        const newPeers = [];\n        users.forEach(({\n          id,\n          name: userName\n        }) => {\n          const peer = createPeer(id, socketRef.current.id, userMedia, name);\n          peersRef.current.push({\n            peerID: id,\n            peer,\n            name: userName\n          });\n          newPeers.push({\n            peerID: id,\n            peer,\n            name: userName\n          });\n        });\n        setPeers(newPeers);\n      });\n      socketRef.current.on(\"user-joined\", ({\n        signal,\n        callerID,\n        name: userName\n      }) => {\n        const peer = addPeer(signal, callerID, userMedia, userName);\n        peersRef.current.push({\n          peerID: callerID,\n          peer,\n          name: userName\n        });\n        setPeers(users => [...users, {\n          peerID: callerID,\n          peer,\n          name: userName\n        }]);\n      });\n      socketRef.current.on(\"receiving-returned-signal\", ({\n        id,\n        signal,\n        name: userName\n      }) => {\n        const item = peersRef.current.find(p => p.peerID === id);\n        if (item) {\n          item.peer.signal(signal);\n        }\n      });\n    } catch (err) {\n      console.error(\"Error accessing media devices.\", err);\n    }\n  };\n  const createPeer = (userToSignal, callerID, stream, name) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal,\n        name\n      });\n    });\n    return peer;\n  };\n  const addPeer = (incomingSignal, callerID, stream, name) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socketRef.current.emit(\"returning-signal\", {\n        signal,\n        to: callerID,\n        name\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const videoElement = videoRefs.current[callerID];\n      if (videoElement && videoElement.current) {\n        videoElement.current.srcObject = remoteStream;\n      }\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  };\n  const toggleAudio = () => {\n    if (stream) {\n      stream.getAudioTracks()[0].enabled = !stream.getAudioTracks()[0].enabled;\n    }\n  };\n  const toggleVideo = () => {\n    if (stream) {\n      stream.getVideoTracks()[0].enabled = !stream.getVideoTracks()[0].enabled;\n    }\n  };\n  const leaveRoom = () => {\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"logo\",\n      children: [\"Ve \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"gold\",\n        children: \"Meet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), !joined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Your Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Room Code\",\n        value: roomID,\n        onChange: e => setRoomID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoin,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"my-video\",\n            autoPlay: true,\n            muted: true,\n            playsInline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name-label\",\n            children: [name, \" (You)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), peers.map(({\n          peerID,\n          name\n        }) => {\n          const videoRef = createVideoRef(peerID);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              autoPlay: true,\n              playsInline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name-label\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this)]\n          }, peerID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleAudio,\n          children: \"Mute / Unmute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleVideo,\n          children: \"Video On / Off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: leaveRoom,\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(GuestRoom, \"BOSoe7tmPSBHY8FJZXuOwBpwYp0=\");\n_c = GuestRoom;\nexport default GuestRoom;\nvar _c;\n$RefreshReg$(_c, \"GuestRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","Fragment","_Fragment","SERVER_URL","GuestRoom","_s","peers","setPeers","name","setName","roomID","setRoomID","joined","setJoined","stream","setStream","myID","setMyID","socketRef","peersRef","videoRefs","current","transports","on","id","disconnect","createVideoRef","createRef","handleJoin","userMedia","navigator","mediaDevices","getUserMedia","video","audio","myVideo","document","getElementById","srcObject","emit","users","newPeers","forEach","userName","peer","createPeer","push","peerID","signal","callerID","addPeer","item","find","p","err","console","error","userToSignal","initiator","trickle","incomingSignal","to","remoteStream","videoElement","toggleAudio","getAudioTracks","enabled","toggleVideo","getVideoTracks","leaveRoom","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","autoPlay","muted","playsInline","map","videoRef","ref","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST/client/src/components/GuestRoom.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./Room.css\";\r\n\r\nconst SERVER_URL = \"https://192.168.29.23:5000\"; // Your local server with SSL\r\n\r\nconst GuestRoom = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [joined, setJoined] = useState(false);\r\n  const [stream, setStream] = useState(null);\r\n  const [myID, setMyID] = useState(\"\");\r\n  const socketRef = useRef();\r\n  const peersRef = useRef([]);\r\n  const videoRefs = useRef({});\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io(SERVER_URL, { transports: [\"websocket\"] });\r\n\r\n    socketRef.current.on(\"your-id\", (id) => {\r\n      setMyID(id);\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const createVideoRef = (id) => {\r\n    if (!videoRefs.current[id]) {\r\n      videoRefs.current[id] = React.createRef();\r\n    }\r\n    return videoRefs.current[id];\r\n  };\r\n\r\n  const handleJoin = async () => {\r\n    try {\r\n      const userMedia = await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      });\r\n\r\n      setStream(userMedia);\r\n      setJoined(true);\r\n\r\n      const myVideo = document.getElementById(\"my-video\");\r\n      if (myVideo) myVideo.srcObject = userMedia;\r\n\r\n      socketRef.current.emit(\"join-room\", { roomID, name });\r\n\r\n      socketRef.current.on(\"all-users\", (users) => {\r\n        const newPeers = [];\r\n\r\n        users.forEach(({ id, name: userName }) => {\r\n          const peer = createPeer(id, socketRef.current.id, userMedia, name);\r\n          peersRef.current.push({\r\n            peerID: id,\r\n            peer,\r\n            name: userName,\r\n          });\r\n          newPeers.push({ peerID: id, peer, name: userName });\r\n        });\r\n\r\n        setPeers(newPeers);\r\n      });\r\n\r\n      socketRef.current.on(\"user-joined\", ({ signal, callerID, name: userName }) => {\r\n        const peer = addPeer(signal, callerID, userMedia, userName);\r\n        peersRef.current.push({\r\n          peerID: callerID,\r\n          peer,\r\n          name: userName,\r\n        });\r\n\r\n        setPeers((users) => [...users, { peerID: callerID, peer, name: userName }]);\r\n      });\r\n\r\n      socketRef.current.on(\"receiving-returned-signal\", ({ id, signal, name: userName }) => {\r\n        const item = peersRef.current.find((p) => p.peerID === id);\r\n        if (item) {\r\n          item.peer.signal(signal);\r\n        }\r\n      });\r\n\r\n    } catch (err) {\r\n      console.error(\"Error accessing media devices.\", err);\r\n    }\r\n  };\r\n\r\n  const createPeer = (userToSignal, callerID, stream, name) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socketRef.current.emit(\"sending-signal\", {\r\n        userToSignal,\r\n        callerID,\r\n        signal,\r\n        name,\r\n      });\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (incomingSignal, callerID, stream, name) => {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socketRef.current.emit(\"returning-signal\", {\r\n        signal,\r\n        to: callerID,\r\n        name,\r\n      });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const videoElement = videoRefs.current[callerID];\r\n      if (videoElement && videoElement.current) {\r\n        videoElement.current.srcObject = remoteStream;\r\n      }\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n    return peer;\r\n  };\r\n\r\n  const toggleAudio = () => {\r\n    if (stream) {\r\n      stream.getAudioTracks()[0].enabled = !stream.getAudioTracks()[0].enabled;\r\n    }\r\n  };\r\n\r\n  const toggleVideo = () => {\r\n    if (stream) {\r\n      stream.getVideoTracks()[0].enabled = !stream.getVideoTracks()[0].enabled;\r\n    }\r\n  };\r\n\r\n  const leaveRoom = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <h1 className=\"logo\">Ve <span className=\"gold\">Meet</span></h1>\r\n\r\n      {!joined ? (\r\n        <div className=\"join-screen\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Your Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Room Code\"\r\n            value={roomID}\r\n            onChange={(e) => setRoomID(e.target.value)}\r\n          />\r\n          <button onClick={handleJoin}>Join</button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"video-grid\">\r\n            <div className=\"video-block\">\r\n              <video id=\"my-video\" autoPlay muted playsInline />\r\n              <div className=\"name-label\">{name} (You)</div>\r\n            </div>\r\n\r\n            {peers.map(({ peerID, name }) => {\r\n              const videoRef = createVideoRef(peerID);\r\n              return (\r\n                <div key={peerID} className=\"video-block\">\r\n                  <video ref={videoRef} autoPlay playsInline />\r\n                  <div className=\"name-label\">{name}</div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className=\"controls\">\r\n            <button onClick={toggleAudio}>Mute / Unmute</button>\r\n            <button onClick={toggleVideo}>Video On / Off</button>\r\n            <button onClick={leaveRoom}>Leave</button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GuestRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}