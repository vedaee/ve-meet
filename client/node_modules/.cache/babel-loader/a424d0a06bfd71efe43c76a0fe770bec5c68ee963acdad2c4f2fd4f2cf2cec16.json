{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\n// Room.js\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport './Room.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"https://your-server-url\"); // Replace with your server\n\nconst Room = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const videoGridRef = useRef(null);\n  const [participants, setParticipants] = useState([]);\n  const [streams, setStreams] = useState({});\n  const [localStream, setLocalStream] = useState(null);\n  const [roomCode, setRoomCode] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [peerConnections, setPeerConnections] = useState({});\n  const [screenSharing, setScreenSharing] = useState(false);\n  useEffect(() => {\n    const {\n      roomCode,\n      userName\n    } = location.state || {};\n    if (!roomCode || !userName) return navigate(\"/\");\n    setRoomCode(roomCode);\n    setUserName(userName);\n    const init = async () => {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      setLocalStream(stream);\n      socket.emit(\"join-room\", {\n        roomCode,\n        userName\n      });\n      socket.on(\"all-users\", users => {\n        users.forEach(({\n          socketId,\n          userName: name\n        }) => {\n          const peer = createPeer(socketId, stream);\n          setPeerConnections(prev => ({\n            ...prev,\n            [socketId]: peer\n          }));\n          setParticipants(prev => [...prev, {\n            id: socketId,\n            name\n          }]);\n        });\n      });\n      socket.on(\"user-joined\", ({\n        socketId,\n        userName\n      }) => {\n        const peer = addPeer(socketId, stream);\n        setPeerConnections(prev => ({\n          ...prev,\n          [socketId]: peer\n        }));\n        setParticipants(prev => [...prev, {\n          id: socketId,\n          name: userName\n        }]);\n      });\n      socket.on(\"offer\", async ({\n        from,\n        offer\n      }) => {\n        const peer = addPeer(from, stream);\n        await peer.setRemoteDescription(offer);\n        const answer = await peer.createAnswer();\n        await peer.setLocalDescription(answer);\n        socket.emit(\"answer\", {\n          to: from,\n          answer\n        });\n      });\n      socket.on(\"answer\", ({\n        from,\n        answer\n      }) => {\n        const peer = peerConnections[from];\n        if (peer) peer.setRemoteDescription(answer);\n      });\n      socket.on(\"ice-candidate\", ({\n        from,\n        candidate\n      }) => {\n        const peer = peerConnections[from];\n        if (peer && candidate) peer.addIceCandidate(candidate);\n      });\n      socket.on(\"user-disconnected\", id => {\n        if (peerConnections[id]) {\n          peerConnections[id].close();\n          delete peerConnections[id];\n        }\n        setParticipants(prev => prev.filter(p => p.id !== id));\n        setStreams(prev => {\n          const updated = {\n            ...prev\n          };\n          delete updated[id];\n          return updated;\n        });\n      });\n    };\n    init();\n  }, []);\n  const createPeer = (socketId, stream) => {\n    const peer = new RTCPeerConnection();\n    stream.getTracks().forEach(track => peer.addTrack(track, stream));\n    peer.onicecandidate = e => {\n      if (e.candidate) {\n        socket.emit(\"ice-candidate\", {\n          to: socketId,\n          candidate: e.candidate\n        });\n      }\n    };\n    peer.ontrack = e => {\n      setStreams(prev => ({\n        ...prev,\n        [socketId]: e.streams[0]\n      }));\n    };\n    peer.onnegotiationneeded = async () => {\n      const offer = await peer.createOffer();\n      await peer.setLocalDescription(offer);\n      socket.emit(\"offer\", {\n        to: socketId,\n        offer\n      });\n    };\n    return peer;\n  };\n  const addPeer = (socketId, stream) => {\n    const peer = new RTCPeerConnection();\n    stream.getTracks().forEach(track => peer.addTrack(track, stream));\n    peer.onicecandidate = e => {\n      if (e.candidate) {\n        socket.emit(\"ice-candidate\", {\n          to: socketId,\n          candidate: e.candidate\n        });\n      }\n    };\n    peer.ontrack = e => {\n      setStreams(prev => ({\n        ...prev,\n        [socketId]: e.streams[0]\n      }));\n    };\n    return peer;\n  };\n  const toggleScreenShare = async () => {\n    if (!screenSharing) {\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      const videoTrack = screenStream.getVideoTracks()[0];\n      Object.values(peerConnections).forEach(peer => {\n        const sender = peer.getSenders().find(s => s.track.kind === \"video\");\n        if (sender) sender.replaceTrack(videoTrack);\n      });\n      setLocalStream(screenStream);\n      setScreenSharing(true);\n      videoTrack.onended = () => {\n        stopScreenShare();\n      };\n    }\n  };\n  const stopScreenShare = async () => {\n    const camStream = await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    });\n    const videoTrack = camStream.getVideoTracks()[0];\n    Object.values(peerConnections).forEach(peer => {\n      const sender = peer.getSenders().find(s => s.track.kind === \"video\");\n      if (sender) sender.replaceTrack(videoTrack);\n    });\n    setLocalStream(camStream);\n    setScreenSharing(false);\n  };\n  const handleEndMeeting = () => {\n    socket.emit(\"end-meeting\", roomCode);\n    Object.values(peerConnections).forEach(peer => peer.close());\n    if (localStream) localStream.getTracks().forEach(t => t.stop());\n    navigate(\"/\");\n  };\n  useEffect(() => {\n    socket.on(\"meeting-ended\", () => {\n      alert(\"Meeting has ended.\");\n      navigate(\"/\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      ref: videoGridRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          className: \"video\",\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          ref: video => video && localStream && (video.srcObject = localStream)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-name\",\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), participants.map(p => streams[p.id] ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          className: \"video\",\n          autoPlay: true,\n          playsInline: true,\n          ref: video => video && (video.srcObject = streams[p.id])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-name\",\n          children: p.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this)]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this) : null)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Room: \", roomCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Host: \", userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Participants (\", participants.length + 1, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [userName, \" (You)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), participants.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: p.name\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleScreenShare,\n          children: screenSharing ? \"Stop Share\" : \"Share Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"end\",\n          onClick: handleEndMeeting,\n          children: \"End Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"utemveLwIIy+0MZcPcBZ01Gwxac=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","useLocation","io","jsxDEV","_jsxDEV","socket","Room","_s","navigate","location","videoGridRef","participants","setParticipants","streams","setStreams","localStream","setLocalStream","roomCode","setRoomCode","userName","setUserName","peerConnections","setPeerConnections","screenSharing","setScreenSharing","state","init","stream","navigator","mediaDevices","getUserMedia","video","audio","emit","on","users","forEach","socketId","name","peer","createPeer","prev","id","addPeer","from","offer","setRemoteDescription","answer","createAnswer","setLocalDescription","to","candidate","addIceCandidate","close","filter","p","updated","RTCPeerConnection","getTracks","track","addTrack","onicecandidate","e","ontrack","onnegotiationneeded","createOffer","toggleScreenShare","screenStream","getDisplayMedia","videoTrack","getVideoTracks","Object","values","sender","getSenders","find","s","kind","replaceTrack","onended","stopScreenShare","camStream","handleEndMeeting","t","stop","alert","className","children","ref","autoPlay","playsInline","muted","srcObject","fileName","_jsxFileName","lineNumber","columnNumber","map","length","onClick","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST/client/src/components/Room.js"],"sourcesContent":["// Room.js\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nimport './Room.css';\r\n\r\n\r\nconst socket = io(\"https://your-server-url\"); // Replace with your server\r\n\r\nconst Room = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const videoGridRef = useRef(null);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [streams, setStreams] = useState({});\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const [roomCode, setRoomCode] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [peerConnections, setPeerConnections] = useState({});\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { roomCode, userName } = location.state || {};\r\n    if (!roomCode || !userName) return navigate(\"/\");\r\n\r\n    setRoomCode(roomCode);\r\n    setUserName(userName);\r\n\r\n    const init = async () => {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      });\r\n      setLocalStream(stream);\r\n      socket.emit(\"join-room\", { roomCode, userName });\r\n\r\n      socket.on(\"all-users\", (users) => {\r\n        users.forEach(({ socketId, userName: name }) => {\r\n          const peer = createPeer(socketId, stream);\r\n          setPeerConnections((prev) => ({ ...prev, [socketId]: peer }));\r\n          setParticipants((prev) => [...prev, { id: socketId, name }]);\r\n        });\r\n      });\r\n\r\n      socket.on(\"user-joined\", ({ socketId, userName }) => {\r\n        const peer = addPeer(socketId, stream);\r\n        setPeerConnections((prev) => ({ ...prev, [socketId]: peer }));\r\n        setParticipants((prev) => [...prev, { id: socketId, name: userName }]);\r\n      });\r\n\r\n      socket.on(\"offer\", async ({ from, offer }) => {\r\n        const peer = addPeer(from, stream);\r\n        await peer.setRemoteDescription(offer);\r\n        const answer = await peer.createAnswer();\r\n        await peer.setLocalDescription(answer);\r\n        socket.emit(\"answer\", { to: from, answer });\r\n      });\r\n\r\n      socket.on(\"answer\", ({ from, answer }) => {\r\n        const peer = peerConnections[from];\r\n        if (peer) peer.setRemoteDescription(answer);\r\n      });\r\n\r\n      socket.on(\"ice-candidate\", ({ from, candidate }) => {\r\n        const peer = peerConnections[from];\r\n        if (peer && candidate) peer.addIceCandidate(candidate);\r\n      });\r\n\r\n      socket.on(\"user-disconnected\", (id) => {\r\n        if (peerConnections[id]) {\r\n          peerConnections[id].close();\r\n          delete peerConnections[id];\r\n        }\r\n        setParticipants((prev) => prev.filter((p) => p.id !== id));\r\n        setStreams((prev) => {\r\n          const updated = { ...prev };\r\n          delete updated[id];\r\n          return updated;\r\n        });\r\n      });\r\n    };\r\n\r\n    init();\r\n  }, []);\r\n\r\n  const createPeer = (socketId, stream) => {\r\n    const peer = new RTCPeerConnection();\r\n    stream.getTracks().forEach((track) => peer.addTrack(track, stream));\r\n    peer.onicecandidate = (e) => {\r\n      if (e.candidate) {\r\n        socket.emit(\"ice-candidate\", { to: socketId, candidate: e.candidate });\r\n      }\r\n    };\r\n    peer.ontrack = (e) => {\r\n      setStreams((prev) => ({ ...prev, [socketId]: e.streams[0] }));\r\n    };\r\n    peer.onnegotiationneeded = async () => {\r\n      const offer = await peer.createOffer();\r\n      await peer.setLocalDescription(offer);\r\n      socket.emit(\"offer\", { to: socketId, offer });\r\n    };\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (socketId, stream) => {\r\n    const peer = new RTCPeerConnection();\r\n    stream.getTracks().forEach((track) => peer.addTrack(track, stream));\r\n    peer.onicecandidate = (e) => {\r\n      if (e.candidate) {\r\n        socket.emit(\"ice-candidate\", { to: socketId, candidate: e.candidate });\r\n      }\r\n    };\r\n    peer.ontrack = (e) => {\r\n      setStreams((prev) => ({ ...prev, [socketId]: e.streams[0] }));\r\n    };\r\n    return peer;\r\n  };\r\n\r\n  const toggleScreenShare = async () => {\r\n    if (!screenSharing) {\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n      const videoTrack = screenStream.getVideoTracks()[0];\r\n      Object.values(peerConnections).forEach((peer) => {\r\n        const sender = peer.getSenders().find((s) => s.track.kind === \"video\");\r\n        if (sender) sender.replaceTrack(videoTrack);\r\n      });\r\n      setLocalStream(screenStream);\r\n      setScreenSharing(true);\r\n      videoTrack.onended = () => {\r\n        stopScreenShare();\r\n      };\r\n    }\r\n  };\r\n\r\n  const stopScreenShare = async () => {\r\n    const camStream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\r\n    const videoTrack = camStream.getVideoTracks()[0];\r\n    Object.values(peerConnections).forEach((peer) => {\r\n      const sender = peer.getSenders().find((s) => s.track.kind === \"video\");\r\n      if (sender) sender.replaceTrack(videoTrack);\r\n    });\r\n    setLocalStream(camStream);\r\n    setScreenSharing(false);\r\n  };\r\n\r\n  const handleEndMeeting = () => {\r\n    socket.emit(\"end-meeting\", roomCode);\r\n    Object.values(peerConnections).forEach((peer) => peer.close());\r\n    if (localStream) localStream.getTracks().forEach((t) => t.stop());\r\n    navigate(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"meeting-ended\", () => {\r\n      alert(\"Meeting has ended.\");\r\n      navigate(\"/\");\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <div className=\"video-grid\" ref={videoGridRef}>\r\n        <div className=\"video-block\">\r\n          <video\r\n            className=\"video\"\r\n            autoPlay\r\n            playsInline\r\n            muted\r\n            ref={(video) => video && localStream && (video.srcObject = localStream)}\r\n          />\r\n          <div className=\"video-name\">{userName} (You)</div>\r\n        </div>\r\n        {participants.map((p) =>\r\n          streams[p.id] ? (\r\n            <div className=\"video-block\" key={p.id}>\r\n              <video\r\n                className=\"video\"\r\n                autoPlay\r\n                playsInline\r\n                ref={(video) => video && (video.srcObject = streams[p.id])}\r\n              />\r\n              <div className=\"video-name\">{p.name}</div>\r\n            </div>\r\n          ) : null\r\n        )}\r\n      </div>\r\n      <div className=\"side-panel\">\r\n        <div>\r\n          <h3>Room: {roomCode}</h3>\r\n          <h4>Host: {userName}</h4>\r\n          <h4>Participants ({participants.length + 1})</h4>\r\n          <ul>\r\n            <li>{userName} (You)</li>\r\n            {participants.map((p) => (\r\n              <li key={p.id}>{p.name}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"controls\">\r\n          <button onClick={toggleScreenShare}>\r\n            {screenSharing ? \"Stop Share\" : \"Share Screen\"}\r\n          </button>\r\n          <button className=\"end\" onClick={handleEndMeeting}>\r\n            End Meeting\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}