{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport './Room.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('https://localhost:5000'); // Use https if your server uses https\n\nconst Room = () => {\n  _s();\n  const [roomId, setRoomId] = useState('');\n  const [name, setName] = useState('');\n  const [joined, setJoined] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState([]);\n  const [selectedCam, setSelectedCam] = useState('');\n  const [cameras, setCameras] = useState([]);\n  const localVideoRef = useRef();\n  const peersRef = useRef({});\n  const screenSharing = useRef(false);\n  useEffect(() => {\n    if (!joined) return;\n\n    // Get available cameras\n    navigator.mediaDevices.enumerateDevices().then(devices => {\n      const cams = devices.filter(device => device.kind === 'videoinput');\n      setCameras(cams);\n      if (!selectedCam && cams.length) setSelectedCam(cams[0].deviceId);\n    });\n    const constraints = {\n      audio: true,\n      video: {\n        deviceId: selectedCam ? {\n          exact: selectedCam\n        } : undefined\n      }\n    };\n    navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n      setLocalStream(stream);\n      localVideoRef.current.srcObject = stream;\n      socket.emit('join-room', {\n        roomId,\n        name\n      });\n      socket.on('user-list', setUsers);\n      socket.on('user-joined', ({\n        id,\n        name\n      }) => {\n        // Create a new peer connection for the new user\n        const peer = new RTCPeerConnection();\n        peersRef.current[id] = peer;\n\n        // Add our local tracks to the peer connection\n        stream.getTracks().forEach(track => peer.addTrack(track, stream));\n\n        // Handle ICE candidates\n        peer.onicecandidate = e => {\n          if (e.candidate) {\n            socket.emit('candidate', {\n              to: id,\n              candidate: e.candidate\n            });\n          }\n        };\n\n        // When we get tracks from remote peer\n        peer.ontrack = e => {\n          setRemoteStreams(prev => {\n            // Avoid duplicate streams\n            if (prev.some(s => s.id === id)) return prev;\n            return [...prev, {\n              id,\n              stream: e.streams[0]\n            }];\n          });\n        };\n\n        // Create offer and send it\n        peer.createOffer().then(offer => {\n          peer.setLocalDescription(offer);\n          socket.emit('offer', {\n            to: id,\n            offer\n          });\n        });\n      });\n      socket.on('offer', async ({\n        from,\n        offer\n      }) => {\n        const peer = new RTCPeerConnection();\n        peersRef.current[from] = peer;\n        stream.getTracks().forEach(track => peer.addTrack(track, stream));\n        peer.onicecandidate = e => {\n          if (e.candidate) {\n            socket.emit('candidate', {\n              to: from,\n              candidate: e.candidate\n            });\n          }\n        };\n        peer.ontrack = e => {\n          setRemoteStreams(prev => {\n            if (prev.some(s => s.id === from)) return prev;\n            return [...prev, {\n              id: from,\n              stream: e.streams[0]\n            }];\n          });\n        };\n        await peer.setRemoteDescription(offer);\n        const answer = await peer.createAnswer();\n        await peer.setLocalDescription(answer);\n        socket.emit('answer', {\n          to: from,\n          answer\n        });\n      });\n      socket.on('answer', async ({\n        from,\n        answer\n      }) => {\n        const peer = peersRef.current[from];\n        if (!peer) return;\n        try {\n          // Only set remote description if signalingState is \"have-local-offer\"\n          if (peer.signalingState === 'have-local-offer') {\n            await peer.setRemoteDescription(answer);\n          } else {\n            console.warn(`Ignored setRemoteDescription in state: ${peer.signalingState}`);\n          }\n        } catch (err) {\n          console.error('Error setting remote description:', err);\n        }\n      });\n      socket.on('candidate', async ({\n        from,\n        candidate\n      }) => {\n        try {\n          var _peersRef$current$fro;\n          await ((_peersRef$current$fro = peersRef.current[from]) === null || _peersRef$current$fro === void 0 ? void 0 : _peersRef$current$fro.addIceCandidate(candidate));\n        } catch (err) {\n          console.error('Error adding ICE candidate:', err);\n        }\n      });\n      socket.on('user-left', ({\n        id\n      }) => {\n        if (peersRef.current[id]) {\n          peersRef.current[id].close();\n          delete peersRef.current[id];\n          setRemoteStreams(prev => prev.filter(p => p.id !== id));\n        }\n      });\n    });\n  }, [joined, selectedCam]);\n  const handleJoin = () => {\n    if (roomId && name) {\n      setJoined(true);\n    }\n  };\n  const handleEnd = () => {\n    Object.values(peersRef.current).forEach(peer => peer.close());\n    localStream === null || localStream === void 0 ? void 0 : localStream.getTracks().forEach(track => track.stop());\n    socket.emit('leave-room', {\n      roomId\n    });\n    setJoined(false);\n    setUsers([]);\n    setRemoteStreams([]);\n    peersRef.current = {};\n    screenSharing.current = false;\n  };\n  const toggleAudio = () => {\n    if (localStream) {\n      const audioTrack = localStream.getAudioTracks()[0];\n      if (audioTrack) audioTrack.enabled = !audioTrack.enabled;\n    }\n  };\n  const toggleVideo = () => {\n    if (localStream) {\n      const videoTrack = localStream.getVideoTracks()[0];\n      if (videoTrack) videoTrack.enabled = !videoTrack.enabled;\n    }\n  };\n  const handleScreenShare = async () => {\n    if (!screenSharing.current) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true\n        });\n        const screenTrack = screenStream.getVideoTracks()[0];\n        const sender = localStream.getVideoTracks()[0];\n        Object.values(peersRef.current).forEach(peer => {\n          const senders = peer.getSenders().filter(s => s.track.kind === 'video');\n          senders.forEach(s => s.replaceTrack(screenTrack));\n        });\n        screenTrack.onended = () => {\n          Object.values(peersRef.current).forEach(peer => {\n            const senders = peer.getSenders().filter(s => s.track.kind === 'video');\n            senders.forEach(s => s.replaceTrack(sender));\n          });\n          screenSharing.current = false;\n        };\n        screenSharing.current = true;\n      } catch (err) {\n        console.error('Screen share error:', err);\n      }\n    }\n  };\n  if (!joined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join a Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Room Code\",\n        value: roomId,\n        onChange: e => setRoomId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Your Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCam,\n        onChange: e => setSelectedCam(e.target.value),\n        children: cameras.map(cam => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cam.deviceId,\n          children: cam.label || 'Camera'\n        }, cam.deviceId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoin,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Room: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"User: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          muted: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You (\", name, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), remoteStreams.map(({\n        id,\n        stream\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          autoPlay: true,\n          playsInline: true,\n          ref: video => {\n            if (video && video.srcObject !== stream) {\n              video.srcObject = stream;\n            }\n          },\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleAudio,\n        children: \"Mute/Unmute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVideo,\n        children: \"Video On/Off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleScreenShare,\n        children: \"Share Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEnd,\n        children: \"End Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Participants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map((u, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: u\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"BPok/OIg1bPmEKiz0N/Zcd/Su3Y=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","Room","_s","roomId","setRoomId","name","setName","joined","setJoined","users","setUsers","localStream","setLocalStream","remoteStreams","setRemoteStreams","selectedCam","setSelectedCam","cameras","setCameras","localVideoRef","peersRef","screenSharing","navigator","mediaDevices","enumerateDevices","then","devices","cams","filter","device","kind","length","deviceId","constraints","audio","video","exact","undefined","getUserMedia","stream","current","srcObject","emit","on","id","peer","RTCPeerConnection","getTracks","forEach","track","addTrack","onicecandidate","e","candidate","to","ontrack","prev","some","s","streams","createOffer","offer","setLocalDescription","from","setRemoteDescription","answer","createAnswer","signalingState","console","warn","err","error","_peersRef$current$fro","addIceCandidate","close","p","handleJoin","handleEnd","Object","values","stop","toggleAudio","audioTrack","getAudioTracks","enabled","toggleVideo","videoTrack","getVideoTracks","handleScreenShare","screenStream","getDisplayMedia","screenTrack","sender","senders","getSenders","replaceTrack","onended","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","map","cam","label","onClick","ref","autoPlay","muted","playsInline","u","i","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './Room.css';\r\n\r\nconst socket = io('https://localhost:5000'); // Use https if your server uses https\r\n\r\nconst Room = () => {\r\n  const [roomId, setRoomId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [joined, setJoined] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const [remoteStreams, setRemoteStreams] = useState([]);\r\n  const [selectedCam, setSelectedCam] = useState('');\r\n  const [cameras, setCameras] = useState([]);\r\n  const localVideoRef = useRef();\r\n  const peersRef = useRef({});\r\n  const screenSharing = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!joined) return;\r\n\r\n    // Get available cameras\r\n    navigator.mediaDevices.enumerateDevices().then(devices => {\r\n      const cams = devices.filter(device => device.kind === 'videoinput');\r\n      setCameras(cams);\r\n      if (!selectedCam && cams.length) setSelectedCam(cams[0].deviceId);\r\n    });\r\n\r\n    const constraints = {\r\n      audio: true,\r\n      video: { deviceId: selectedCam ? { exact: selectedCam } : undefined },\r\n    };\r\n\r\n    navigator.mediaDevices.getUserMedia(constraints).then(stream => {\r\n      setLocalStream(stream);\r\n      localVideoRef.current.srcObject = stream;\r\n\r\n      socket.emit('join-room', { roomId, name });\r\n\r\n      socket.on('user-list', setUsers);\r\n\r\n      socket.on('user-joined', ({ id, name }) => {\r\n        // Create a new peer connection for the new user\r\n        const peer = new RTCPeerConnection();\r\n        peersRef.current[id] = peer;\r\n\r\n        // Add our local tracks to the peer connection\r\n        stream.getTracks().forEach(track => peer.addTrack(track, stream));\r\n\r\n        // Handle ICE candidates\r\n        peer.onicecandidate = e => {\r\n          if (e.candidate) {\r\n            socket.emit('candidate', { to: id, candidate: e.candidate });\r\n          }\r\n        };\r\n\r\n        // When we get tracks from remote peer\r\n        peer.ontrack = e => {\r\n          setRemoteStreams(prev => {\r\n            // Avoid duplicate streams\r\n            if (prev.some(s => s.id === id)) return prev;\r\n            return [...prev, { id, stream: e.streams[0] }];\r\n          });\r\n        };\r\n\r\n        // Create offer and send it\r\n        peer.createOffer().then(offer => {\r\n          peer.setLocalDescription(offer);\r\n          socket.emit('offer', { to: id, offer });\r\n        });\r\n      });\r\n\r\n      socket.on('offer', async ({ from, offer }) => {\r\n        const peer = new RTCPeerConnection();\r\n        peersRef.current[from] = peer;\r\n\r\n        stream.getTracks().forEach(track => peer.addTrack(track, stream));\r\n\r\n        peer.onicecandidate = e => {\r\n          if (e.candidate) {\r\n            socket.emit('candidate', { to: from, candidate: e.candidate });\r\n          }\r\n        };\r\n\r\n        peer.ontrack = e => {\r\n          setRemoteStreams(prev => {\r\n            if (prev.some(s => s.id === from)) return prev;\r\n            return [...prev, { id: from, stream: e.streams[0] }];\r\n          });\r\n        };\r\n\r\n        await peer.setRemoteDescription(offer);\r\n        const answer = await peer.createAnswer();\r\n        await peer.setLocalDescription(answer);\r\n        socket.emit('answer', { to: from, answer });\r\n      });\r\n\r\n      socket.on('answer', async ({ from, answer }) => {\r\n        const peer = peersRef.current[from];\r\n        if (!peer) return;\r\n        try {\r\n          // Only set remote description if signalingState is \"have-local-offer\"\r\n          if (peer.signalingState === 'have-local-offer') {\r\n            await peer.setRemoteDescription(answer);\r\n          } else {\r\n            console.warn(`Ignored setRemoteDescription in state: ${peer.signalingState}`);\r\n          }\r\n        } catch (err) {\r\n          console.error('Error setting remote description:', err);\r\n        }\r\n      });\r\n\r\n      socket.on('candidate', async ({ from, candidate }) => {\r\n        try {\r\n          await peersRef.current[from]?.addIceCandidate(candidate);\r\n        } catch (err) {\r\n          console.error('Error adding ICE candidate:', err);\r\n        }\r\n      });\r\n\r\n      socket.on('user-left', ({ id }) => {\r\n        if (peersRef.current[id]) {\r\n          peersRef.current[id].close();\r\n          delete peersRef.current[id];\r\n          setRemoteStreams(prev => prev.filter(p => p.id !== id));\r\n        }\r\n      });\r\n    });\r\n  }, [joined, selectedCam]);\r\n\r\n  const handleJoin = () => {\r\n    if (roomId && name) {\r\n      setJoined(true);\r\n    }\r\n  };\r\n\r\n  const handleEnd = () => {\r\n    Object.values(peersRef.current).forEach(peer => peer.close());\r\n    localStream?.getTracks().forEach(track => track.stop());\r\n    socket.emit('leave-room', { roomId });\r\n    setJoined(false);\r\n    setUsers([]);\r\n    setRemoteStreams([]);\r\n    peersRef.current = {};\r\n    screenSharing.current = false;\r\n  };\r\n\r\n  const toggleAudio = () => {\r\n    if (localStream) {\r\n      const audioTrack = localStream.getAudioTracks()[0];\r\n      if (audioTrack) audioTrack.enabled = !audioTrack.enabled;\r\n    }\r\n  };\r\n\r\n  const toggleVideo = () => {\r\n    if (localStream) {\r\n      const videoTrack = localStream.getVideoTracks()[0];\r\n      if (videoTrack) videoTrack.enabled = !videoTrack.enabled;\r\n    }\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    if (!screenSharing.current) {\r\n      try {\r\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n        const screenTrack = screenStream.getVideoTracks()[0];\r\n        const sender = localStream.getVideoTracks()[0];\r\n\r\n        Object.values(peersRef.current).forEach(peer => {\r\n          const senders = peer.getSenders().filter(s => s.track.kind === 'video');\r\n          senders.forEach(s => s.replaceTrack(screenTrack));\r\n        });\r\n\r\n        screenTrack.onended = () => {\r\n          Object.values(peersRef.current).forEach(peer => {\r\n            const senders = peer.getSenders().filter(s => s.track.kind === 'video');\r\n            senders.forEach(s => s.replaceTrack(sender));\r\n          });\r\n          screenSharing.current = false;\r\n        };\r\n\r\n        screenSharing.current = true;\r\n      } catch (err) {\r\n        console.error('Screen share error:', err);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!joined) {\r\n    return (\r\n      <div className=\"join-container\">\r\n        <h2>Join a Meeting</h2>\r\n        <input placeholder=\"Enter Room Code\" value={roomId} onChange={e => setRoomId(e.target.value)} />\r\n        <input placeholder=\"Enter Your Name\" value={name} onChange={e => setName(e.target.value)} />\r\n        <select value={selectedCam} onChange={e => setSelectedCam(e.target.value)}>\r\n          {cameras.map(cam => (\r\n            <option key={cam.deviceId} value={cam.deviceId}>{cam.label || 'Camera'}</option>\r\n          ))}\r\n        </select>\r\n        <button onClick={handleJoin}>Join</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <div className=\"header\">\r\n        <h2>Room: {roomId}</h2>\r\n        <h3>User: {name}</h3>\r\n      </div>\r\n      <div className=\"video-grid\">\r\n        <div className=\"video-block\">\r\n          <video ref={localVideoRef} autoPlay muted playsInline className=\"video\" />\r\n          <p>You ({name})</p>\r\n        </div>\r\n        {remoteStreams.map(({ id, stream }) => (\r\n          <div key={id} className=\"video-block\">\r\n            <video\r\n              autoPlay\r\n              playsInline\r\n              ref={video => {\r\n                if (video && video.srcObject !== stream) {\r\n                  video.srcObject = stream;\r\n                }\r\n              }}\r\n              className=\"video\"\r\n            />\r\n            <p>{id}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"controls\">\r\n        <button onClick={toggleAudio}>Mute/Unmute</button>\r\n        <button onClick={toggleVideo}>Video On/Off</button>\r\n        <button onClick={handleScreenShare}>Share Screen</button>\r\n        <button onClick={handleEnd}>End Meeting</button>\r\n      </div>\r\n      <div className=\"sidebar\">\r\n        <h4>Participants</h4>\r\n        <ul>\r\n          {users.map((u, i) => (\r\n            <li key={i}>{u}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}