{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = \"http://localhost:5000\"; // Change to your server URL\n\nconst goldenColor = \"#d4af37\";\nconst styles = {\n  container: {\n    display: \"flex\",\n    height: \"100vh\",\n    backgroundColor: \"#000000\",\n    color: goldenColor,\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\n  },\n  leftPanel: {\n    flex: \"1\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"20px\",\n    borderRight: `2px solid ${goldenColor}`\n  },\n  roomInfo: {\n    marginBottom: \"20px\",\n    fontSize: \"1.5rem\",\n    fontWeight: \"600\",\n    textAlign: \"center\",\n    borderBottom: `1px solid ${goldenColor}`,\n    paddingBottom: \"10px\"\n  },\n  controls: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"15px\",\n    marginBottom: \"20px\"\n  },\n  select: {\n    padding: \"8px\",\n    borderRadius: \"5px\",\n    border: `1px solid ${goldenColor}`,\n    backgroundColor: \"#1a1a1a\",\n    color: goldenColor,\n    fontWeight: \"600\"\n  },\n  button: {\n    padding: \"10px\",\n    backgroundColor: goldenColor,\n    border: \"none\",\n    borderRadius: \"6px\",\n    fontWeight: \"700\",\n    cursor: \"pointer\",\n    color: \"#000\",\n    transition: \"background-color 0.3s\"\n  },\n  buttonDanger: {\n    backgroundColor: \"#b22222\",\n    color: \"#fff\"\n  },\n  videoGrid: {\n    flex: \"3\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit,minmax(300px,1fr))\",\n    gap: \"10px\",\n    padding: \"20px\",\n    overflowY: \"auto\",\n    backgroundColor: \"#111\"\n  },\n  videoContainer: {\n    position: \"relative\",\n    borderRadius: \"10px\",\n    overflow: \"hidden\",\n    backgroundColor: \"#222\"\n  },\n  video: {\n    width: \"100%\",\n    height: \"auto\",\n    borderRadius: \"10px\",\n    backgroundColor: \"#000\"\n  },\n  nameTag: {\n    position: \"absolute\",\n    bottom: \"6px\",\n    left: \"6px\",\n    backgroundColor: \"rgba(0,0,0,0.6)\",\n    padding: \"4px 8px\",\n    borderRadius: \"4px\",\n    color: goldenColor,\n    fontWeight: \"600\",\n    fontSize: \"0.9rem\"\n  },\n  participantsList: {\n    borderTop: `1px solid ${goldenColor}`,\n    paddingTop: \"10px\",\n    marginTop: \"auto\"\n  },\n  participantItem: {\n    padding: \"6px 0\",\n    borderBottom: `1px solid ${goldenColor}`\n  },\n  inputGroup: {\n    display: \"flex\",\n    marginBottom: \"15px\",\n    gap: \"10px\"\n  },\n  input: {\n    flex: \"1\",\n    padding: \"10px\",\n    borderRadius: \"6px\",\n    border: `1px solid ${goldenColor}`,\n    backgroundColor: \"#111\",\n    color: goldenColor,\n    fontWeight: \"600\"\n  }\n};\nexport default function Room() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [socket, setSocket] = useState(null);\n  const [roomCode, setRoomCode] = useState(\"\");\n  const [inputRoomCode, setInputRoomCode] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [isHost, setIsHost] = useState(false);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState({}); // { socketId: stream }\n  const [peers, setPeers] = useState({}); // { socketId: RTCPeerConnection }\n\n  const [videoDevices, setVideoDevices] = useState([]);\n  const [audioDevices, setAudioDevices] = useState([]);\n  const [selectedVideoDevice, setSelectedVideoDevice] = useState(\"\");\n  const [selectedAudioDevice, setSelectedAudioDevice] = useState(\"\");\n  const localVideoRef = useRef(null);\n  const peersRef = useRef({});\n  const remoteStreamsRef = useRef({});\n\n  // Join or create room after form submit\n  function handleJoin() {\n    if (!inputRoomCode.trim() || !userName.trim()) {\n      alert(\"Please enter both room code and your name.\");\n      return;\n    }\n    setRoomCode(inputRoomCode.trim());\n    setIsHost(false);\n  }\n  function handleCreateRoom() {\n    if (!userName.trim()) {\n      alert(\"Please enter your name to create a room.\");\n      return;\n    }\n    // Generate 6-digit room code\n    const newRoomCode = Math.floor(100000 + Math.random() * 900000).toString();\n    setRoomCode(newRoomCode);\n    setInputRoomCode(newRoomCode);\n    setIsHost(true);\n  }\n\n  // Get media devices for dropdown\n  useEffect(() => {\n    async function getDevices() {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const videos = devices.filter(d => d.kind === \"videoinput\");\n        const audios = devices.filter(d => d.kind === \"audioinput\");\n        setVideoDevices(videos);\n        setAudioDevices(audios);\n        if (videos.length > 0) setSelectedVideoDevice(videos[0].deviceId);\n        if (audios.length > 0) setSelectedAudioDevice(audios[0].deviceId);\n      } catch (err) {\n        console.error(\"Error getting devices\", err);\n      }\n    }\n    getDevices();\n  }, []);\n\n  // Start local stream based on selected devices\n  useEffect(() => {\n    async function startLocalStream() {\n      if (!selectedVideoDevice || !selectedAudioDevice) return;\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            deviceId: selectedVideoDevice ? {\n              exact: selectedVideoDevice\n            } : undefined\n          },\n          audio: {\n            deviceId: selectedAudioDevice ? {\n              exact: selectedAudioDevice\n            } : undefined\n          }\n        });\n        setLocalStream(stream);\n        if (localVideoRef.current) localVideoRef.current.srcObject = stream;\n      } catch (err) {\n        console.error(\"Error accessing media devices\", err);\n      }\n    }\n    startLocalStream();\n\n    // Cleanup old stream\n    return () => {\n      if (localStream) {\n        localStream.getTracks().forEach(t => t.stop());\n      }\n    };\n  }, [selectedVideoDevice, selectedAudioDevice]);\n\n  // Socket.io connection + WebRTC setup\n  useEffect(() => {\n    if (!roomCode) return;\n    const newSocket = io(SOCKET_SERVER_URL, {\n      transports: [\"websocket\"]\n    });\n    setSocket(newSocket);\n    newSocket.emit(\"join-room\", {\n      roomCode,\n      userName,\n      isHost\n    });\n\n    // When a new user joins - initiate peer connection\n    newSocket.on(\"all-users\", users => {\n      users.forEach(user => {\n        if (user.socketId === newSocket.id) return;\n        createPeerConnection(user.socketId, true, newSocket);\n      });\n    });\n\n    // When another user sends an offer\n    newSocket.on(\"offer\", async ({\n      sdp,\n      callerId\n    }) => {\n      await createPeerConnection(callerId, false, newSocket, sdp);\n    });\n\n    // When another user answers your offer\n    newSocket.on(\"answer\", ({\n      sdp,\n      callerId\n    }) => {\n      const peer = peersRef.current[callerId];\n      if (peer) {\n        peer.setRemoteDescription(new RTCSessionDescription(sdp));\n      }\n    });\n\n    // ICE candidate received\n    newSocket.on(\"ice-candidate\", ({\n      candidate,\n      from\n    }) => {\n      const peer = peersRef.current[from];\n      if (peer) {\n        peer.addIceCandidate(new RTCIceCandidate(candidate));\n      }\n    });\n\n    // User disconnected\n    newSocket.on(\"user-disconnected\", socketId => {\n      if (peersRef.current[socketId]) {\n        peersRef.current[socketId].close();\n        delete peersRef.current[socketId];\n        setPeers({\n          ...peersRef.current\n        });\n        delete remoteStreamsRef.current[socketId];\n        setRemoteStreams({\n          ...remoteStreamsRef.current\n        });\n      }\n    });\n    return () => {\n      newSocket.disconnect();\n      Object.values(peersRef.current).forEach(p => p.close());\n      peersRef.current = {};\n      remoteStreamsRef.current = {};\n      setPeers({});\n      setRemoteStreams({});\n      setSocket(null);\n    };\n  }, [roomCode, userName, isHost]);\n\n  // Create peer connection and signaling\n  async function createPeerConnection(socketId, isInitiator, socketInstance, remoteOffer = null) {\n    if (!localStream) return;\n    const peerConnection = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }\n      // Add TURN server here if needed\n      ]\n    });\n\n    // Add local tracks\n    localStream.getTracks().forEach(track => {\n      peerConnection.addTrack(track, localStream);\n    });\n\n    // Receive remote track\n    peerConnection.ontrack = event => {\n      remoteStreamsRef.current[socketId] = event.streams[0];\n      setRemoteStreams({\n        ...remoteStreamsRef.current\n      });\n    };\n\n    // ICE candidates\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        socketInstance.emit(\"ice-candidate\", {\n          candidate: event.candidate,\n          to: socketId\n        });\n      }\n    };\n    if (isInitiator) {\n      // Create offer\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      socketInstance.emit(\"offer\", {\n        sdp: offer,\n        to: socketId\n      });\n    } else {\n      // Set remote offer\n      await peerConnection.setRemoteDescription(new RTCSessionDescription(remoteOffer));\n      // Create answer\n      const answer = await peerConnection.createAnswer();\n      await peerConnection.setLocalDescription(answer);\n      socketInstance.emit(\"answer\", {\n        sdp: answer,\n        to: socketId\n      });\n    }\n    peersRef.current[socketId] = peerConnection;\n    setPeers({\n      ...peersRef.current\n    });\n  }\n\n  // Host controls\n\n  // Mute/unmute audio track\n  function toggleMute() {\n    if (!localStream) return;\n    const audioTrack = localStream.getAudioTracks()[0];\n    if (audioTrack) {\n      audioTrack.enabled = !audioTrack.enabled;\n      setLocalStream(new MediaStream(localStream.getTracks())); // force re-render if needed\n    }\n  }\n\n  // End meeting (disconnect all)\n  function endMeeting() {\n    if (socket) {\n      socket.emit(\"end-meeting\", roomCode);\n      socket.disconnect();\n      setSocket(null);\n      setPeers({});\n      setRemoteStreams({});\n      setRoomCode(\"\");\n      setInputRoomCode(\"\");\n      setUserName(\"\");\n      setIsHost(false);\n      if (localStream) {\n        localStream.getTracks().forEach(t => t.stop());\n        setLocalStream(null);\n      }\n    }\n  }\n\n  // Screen sharing (toggle)\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const screenTrackRef = useRef(null);\n  async function toggleScreenShare() {\n    if (!isScreenSharing) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true\n        });\n        screenTrackRef.current = screenStream.getVideoTracks()[0];\n        // Replace video track on local stream & peer connections\n        replaceVideoTrack(screenTrackRef.current);\n        setIsScreenSharing(true);\n        screenTrackRef.current.onended = () => {\n          stopScreenShare();\n        };\n      } catch (err) {\n        console.error(\"Screen share error\", err);\n      }\n    } else {\n      stopScreenShare();\n    }\n  }\n  function stopScreenShare() {\n    if (!isScreenSharing) return;\n    if (screenTrackRef.current) {\n      screenTrackRef.current.stop();\n      replaceVideoTrack(localStream.getVideoTracks()[0]);\n      setIsScreenSharing(false);\n    }\n  }\n  function replaceVideoTrack(newTrack) {\n    if (!localStream) return;\n\n    // Replace video track in localStream\n    const sender = Object.values(peersRef.current).map(pc => pc.getSenders()).flat().find(s => s.track && s.track.kind === \"video\");\n    if (sender) sender.replaceTrack(newTrack);\n\n    // Update local video stream\n    const newStream = new MediaStream([...localStream.getAudioTracks(), newTrack]);\n    setLocalStream(newStream);\n    if (localVideoRef.current) localVideoRef.current.srcObject = newStream;\n  }\n\n  // Render all videos: local + remote\n  function renderVideos() {\n    const videos = [];\n\n    // Local video\n    videos.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.videoContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        style: styles.video,\n        ref: localVideoRef,\n        autoPlay: true,\n        muted: true,\n        playsInline: true,\n        onContextMenu: e => e.preventDefault()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.nameTag,\n        children: [userName, \" \", isHost ? \"(Host)\" : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, \"local\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this));\n\n    // Remote videos\n    Object.entries(remoteStreams).forEach(([socketId, stream]) => {\n      videos.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.videoContainer,\n        children: [/*#__PURE__*/_jsxDEV(VideoPlayer, {\n          stream: stream\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.nameTag,\n          children: socketId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)]\n      }, socketId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this));\n    });\n    return videos;\n  }\n\n  // Custom component to attach stream to video tag\n  function VideoPlayer({\n    stream\n  }) {\n    _s();\n    const ref = useRef();\n    useEffect(() => {\n      if (ref.current) {\n        ref.current.srcObject = stream;\n      }\n    }, [stream]);\n    return /*#__PURE__*/_jsxDEV(\"video\", {\n      style: styles.video,\n      ref: ref,\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Participants list (socketId displayed; in real app you may want username map)\n  _s(VideoPlayer, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n  function renderParticipants() {\n    const participantNames = [userName + (isHost ? \" (Host)\" : \"\")];\n\n    // Remote participant names: Ideally you'd want to get names from server\n    // For demo, just socket ids\n    participantNames.push(...Object.keys(remoteStreams));\n    return participantNames.map((name, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.participantItem,\n      children: name\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this));\n  }\n  if (!roomCode) {\n    // Show join/create room form\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...styles.container,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        gap: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: goldenColor\n        },\n        children: \"Ve Meet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your Name\",\n        value: userName,\n        onChange: e => setUserName(e.target.value),\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Room Code to Join\",\n          value: inputRoomCode,\n          onChange: e => setInputRoomCode(e.target.value),\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.button,\n          onClick: handleJoin,\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.button,\n          onClick: handleCreateRoom,\n          children: \"Create Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.leftPanel,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.roomInfo,\n        children: [\"Room Code: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.controls,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Camera:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedVideoDevice,\n            onChange: e => setSelectedVideoDevice(e.target.value),\n            style: styles.select,\n            children: videoDevices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: device.deviceId,\n              children: device.label || `Camera ${device.deviceId}`\n            }, device.deviceId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Microphone:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedAudioDevice,\n            onChange: e => setSelectedAudioDevice(e.target.value),\n            style: styles.select,\n            children: audioDevices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: device.deviceId,\n              children: device.label || `Mic ${device.deviceId}`\n            }, device.deviceId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.button,\n          onClick: toggleMute,\n          children: \"Mute/Unmute Mic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.button,\n          onClick: toggleScreenShare,\n          children: isScreenSharing ? \"Stop Sharing\" : \"Share Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            ...styles.button,\n            ...styles.buttonDanger\n          },\n          onClick: endMeeting,\n          children: \"End Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.participantsList,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Participants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this), renderParticipants()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.videoGrid,\n      children: renderVideos()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 507,\n    columnNumber: 5\n  }, this);\n}\n_s2(Room, \"wY2A020A9VP3FtZEgITmX5mfUVE=\");\n_c = Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","SOCKET_SERVER_URL","goldenColor","styles","container","display","height","backgroundColor","color","fontFamily","leftPanel","flex","flexDirection","padding","borderRight","roomInfo","marginBottom","fontSize","fontWeight","textAlign","borderBottom","paddingBottom","controls","gap","select","borderRadius","border","button","cursor","transition","buttonDanger","videoGrid","gridTemplateColumns","overflowY","videoContainer","position","overflow","video","width","nameTag","bottom","left","participantsList","borderTop","paddingTop","marginTop","participantItem","inputGroup","input","Room","_s2","_s","$RefreshSig$","socket","setSocket","roomCode","setRoomCode","inputRoomCode","setInputRoomCode","userName","setUserName","isHost","setIsHost","localStream","setLocalStream","remoteStreams","setRemoteStreams","peers","setPeers","videoDevices","setVideoDevices","audioDevices","setAudioDevices","selectedVideoDevice","setSelectedVideoDevice","selectedAudioDevice","setSelectedAudioDevice","localVideoRef","peersRef","remoteStreamsRef","handleJoin","trim","alert","handleCreateRoom","newRoomCode","Math","floor","random","toString","getDevices","devices","navigator","mediaDevices","enumerateDevices","videos","filter","d","kind","audios","length","deviceId","err","console","error","startLocalStream","stream","getUserMedia","exact","undefined","audio","current","srcObject","getTracks","forEach","t","stop","newSocket","transports","emit","on","users","user","socketId","id","createPeerConnection","sdp","callerId","peer","setRemoteDescription","RTCSessionDescription","candidate","from","addIceCandidate","RTCIceCandidate","close","disconnect","Object","values","p","isInitiator","socketInstance","remoteOffer","peerConnection","RTCPeerConnection","iceServers","urls","track","addTrack","ontrack","event","streams","onicecandidate","to","offer","createOffer","setLocalDescription","answer","createAnswer","toggleMute","audioTrack","getAudioTracks","enabled","MediaStream","endMeeting","isScreenSharing","setIsScreenSharing","screenTrackRef","toggleScreenShare","screenStream","getDisplayMedia","getVideoTracks","replaceVideoTrack","onended","stopScreenShare","newTrack","sender","map","pc","getSenders","flat","find","s","replaceTrack","newStream","renderVideos","push","style","children","ref","autoPlay","muted","playsInline","onContextMenu","e","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","entries","VideoPlayer","renderParticipants","participantNames","keys","name","idx","justifyContent","alignItems","type","placeholder","value","onChange","target","onClick","device","label","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet/client/src/components/Room.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst SOCKET_SERVER_URL = \"http://localhost:5000\"; // Change to your server URL\r\n\r\nconst goldenColor = \"#d4af37\";\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#000000\",\r\n    color: goldenColor,\r\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n  },\r\n  leftPanel: {\r\n    flex: \"1\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: \"20px\",\r\n    borderRight: `2px solid ${goldenColor}`,\r\n  },\r\n  roomInfo: {\r\n    marginBottom: \"20px\",\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: \"600\",\r\n    textAlign: \"center\",\r\n    borderBottom: `1px solid ${goldenColor}`,\r\n    paddingBottom: \"10px\",\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"15px\",\r\n    marginBottom: \"20px\",\r\n  },\r\n  select: {\r\n    padding: \"8px\",\r\n    borderRadius: \"5px\",\r\n    border: `1px solid ${goldenColor}`,\r\n    backgroundColor: \"#1a1a1a\",\r\n    color: goldenColor,\r\n    fontWeight: \"600\",\r\n  },\r\n  button: {\r\n    padding: \"10px\",\r\n    backgroundColor: goldenColor,\r\n    border: \"none\",\r\n    borderRadius: \"6px\",\r\n    fontWeight: \"700\",\r\n    cursor: \"pointer\",\r\n    color: \"#000\",\r\n    transition: \"background-color 0.3s\",\r\n  },\r\n  buttonDanger: {\r\n    backgroundColor: \"#b22222\",\r\n    color: \"#fff\",\r\n  },\r\n  videoGrid: {\r\n    flex: \"3\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fit,minmax(300px,1fr))\",\r\n    gap: \"10px\",\r\n    padding: \"20px\",\r\n    overflowY: \"auto\",\r\n    backgroundColor: \"#111\",\r\n  },\r\n  videoContainer: {\r\n    position: \"relative\",\r\n    borderRadius: \"10px\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"#222\",\r\n  },\r\n  video: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"#000\",\r\n  },\r\n  nameTag: {\r\n    position: \"absolute\",\r\n    bottom: \"6px\",\r\n    left: \"6px\",\r\n    backgroundColor: \"rgba(0,0,0,0.6)\",\r\n    padding: \"4px 8px\",\r\n    borderRadius: \"4px\",\r\n    color: goldenColor,\r\n    fontWeight: \"600\",\r\n    fontSize: \"0.9rem\",\r\n  },\r\n  participantsList: {\r\n    borderTop: `1px solid ${goldenColor}`,\r\n    paddingTop: \"10px\",\r\n    marginTop: \"auto\",\r\n  },\r\n  participantItem: {\r\n    padding: \"6px 0\",\r\n    borderBottom: `1px solid ${goldenColor}`,\r\n  },\r\n  inputGroup: {\r\n    display: \"flex\",\r\n    marginBottom: \"15px\",\r\n    gap: \"10px\",\r\n  },\r\n  input: {\r\n    flex: \"1\",\r\n    padding: \"10px\",\r\n    borderRadius: \"6px\",\r\n    border: `1px solid ${goldenColor}`,\r\n    backgroundColor: \"#111\",\r\n    color: goldenColor,\r\n    fontWeight: \"600\",\r\n  },\r\n};\r\n\r\nexport default function Room() {\r\n  const [socket, setSocket] = useState(null);\r\n  const [roomCode, setRoomCode] = useState(\"\");\r\n  const [inputRoomCode, setInputRoomCode] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [isHost, setIsHost] = useState(false);\r\n\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const [remoteStreams, setRemoteStreams] = useState({}); // { socketId: stream }\r\n  const [peers, setPeers] = useState({}); // { socketId: RTCPeerConnection }\r\n\r\n  const [videoDevices, setVideoDevices] = useState([]);\r\n  const [audioDevices, setAudioDevices] = useState([]);\r\n  const [selectedVideoDevice, setSelectedVideoDevice] = useState(\"\");\r\n  const [selectedAudioDevice, setSelectedAudioDevice] = useState(\"\");\r\n\r\n  const localVideoRef = useRef(null);\r\n  const peersRef = useRef({});\r\n  const remoteStreamsRef = useRef({});\r\n\r\n  // Join or create room after form submit\r\n  function handleJoin() {\r\n    if (!inputRoomCode.trim() || !userName.trim()) {\r\n      alert(\"Please enter both room code and your name.\");\r\n      return;\r\n    }\r\n\r\n    setRoomCode(inputRoomCode.trim());\r\n    setIsHost(false);\r\n  }\r\n\r\n  function handleCreateRoom() {\r\n    if (!userName.trim()) {\r\n      alert(\"Please enter your name to create a room.\");\r\n      return;\r\n    }\r\n    // Generate 6-digit room code\r\n    const newRoomCode = Math.floor(100000 + Math.random() * 900000).toString();\r\n    setRoomCode(newRoomCode);\r\n    setInputRoomCode(newRoomCode);\r\n    setIsHost(true);\r\n  }\r\n\r\n  // Get media devices for dropdown\r\n  useEffect(() => {\r\n    async function getDevices() {\r\n      try {\r\n        const devices = await navigator.mediaDevices.enumerateDevices();\r\n        const videos = devices.filter((d) => d.kind === \"videoinput\");\r\n        const audios = devices.filter((d) => d.kind === \"audioinput\");\r\n        setVideoDevices(videos);\r\n        setAudioDevices(audios);\r\n        if (videos.length > 0) setSelectedVideoDevice(videos[0].deviceId);\r\n        if (audios.length > 0) setSelectedAudioDevice(audios[0].deviceId);\r\n      } catch (err) {\r\n        console.error(\"Error getting devices\", err);\r\n      }\r\n    }\r\n    getDevices();\r\n  }, []);\r\n\r\n  // Start local stream based on selected devices\r\n  useEffect(() => {\r\n    async function startLocalStream() {\r\n      if (!selectedVideoDevice || !selectedAudioDevice) return;\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          video: { deviceId: selectedVideoDevice ? { exact: selectedVideoDevice } : undefined },\r\n          audio: { deviceId: selectedAudioDevice ? { exact: selectedAudioDevice } : undefined },\r\n        });\r\n        setLocalStream(stream);\r\n        if (localVideoRef.current) localVideoRef.current.srcObject = stream;\r\n      } catch (err) {\r\n        console.error(\"Error accessing media devices\", err);\r\n      }\r\n    }\r\n    startLocalStream();\r\n\r\n    // Cleanup old stream\r\n    return () => {\r\n      if (localStream) {\r\n        localStream.getTracks().forEach((t) => t.stop());\r\n      }\r\n    };\r\n  }, [selectedVideoDevice, selectedAudioDevice]);\r\n\r\n  // Socket.io connection + WebRTC setup\r\n  useEffect(() => {\r\n    if (!roomCode) return;\r\n\r\n    const newSocket = io(SOCKET_SERVER_URL, {\r\n      transports: [\"websocket\"],\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    newSocket.emit(\"join-room\", { roomCode, userName, isHost });\r\n\r\n    // When a new user joins - initiate peer connection\r\n    newSocket.on(\"all-users\", (users) => {\r\n      users.forEach((user) => {\r\n        if (user.socketId === newSocket.id) return;\r\n        createPeerConnection(user.socketId, true, newSocket);\r\n      });\r\n    });\r\n\r\n    // When another user sends an offer\r\n    newSocket.on(\"offer\", async ({ sdp, callerId }) => {\r\n      await createPeerConnection(callerId, false, newSocket, sdp);\r\n    });\r\n\r\n    // When another user answers your offer\r\n    newSocket.on(\"answer\", ({ sdp, callerId }) => {\r\n      const peer = peersRef.current[callerId];\r\n      if (peer) {\r\n        peer.setRemoteDescription(new RTCSessionDescription(sdp));\r\n      }\r\n    });\r\n\r\n    // ICE candidate received\r\n    newSocket.on(\"ice-candidate\", ({ candidate, from }) => {\r\n      const peer = peersRef.current[from];\r\n      if (peer) {\r\n        peer.addIceCandidate(new RTCIceCandidate(candidate));\r\n      }\r\n    });\r\n\r\n    // User disconnected\r\n    newSocket.on(\"user-disconnected\", (socketId) => {\r\n      if (peersRef.current[socketId]) {\r\n        peersRef.current[socketId].close();\r\n        delete peersRef.current[socketId];\r\n        setPeers({ ...peersRef.current });\r\n\r\n        delete remoteStreamsRef.current[socketId];\r\n        setRemoteStreams({ ...remoteStreamsRef.current });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      newSocket.disconnect();\r\n      Object.values(peersRef.current).forEach((p) => p.close());\r\n      peersRef.current = {};\r\n      remoteStreamsRef.current = {};\r\n      setPeers({});\r\n      setRemoteStreams({});\r\n      setSocket(null);\r\n    };\r\n  }, [roomCode, userName, isHost]);\r\n\r\n  // Create peer connection and signaling\r\n  async function createPeerConnection(socketId, isInitiator, socketInstance, remoteOffer = null) {\r\n    if (!localStream) return;\r\n\r\n    const peerConnection = new RTCPeerConnection({\r\n      iceServers: [\r\n        { urls: \"stun:stun.l.google.com:19302\" },\r\n        // Add TURN server here if needed\r\n      ],\r\n    });\r\n\r\n    // Add local tracks\r\n    localStream.getTracks().forEach((track) => {\r\n      peerConnection.addTrack(track, localStream);\r\n    });\r\n\r\n    // Receive remote track\r\n    peerConnection.ontrack = (event) => {\r\n      remoteStreamsRef.current[socketId] = event.streams[0];\r\n      setRemoteStreams({ ...remoteStreamsRef.current });\r\n    };\r\n\r\n    // ICE candidates\r\n    peerConnection.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        socketInstance.emit(\"ice-candidate\", {\r\n          candidate: event.candidate,\r\n          to: socketId,\r\n        });\r\n      }\r\n    };\r\n\r\n    if (isInitiator) {\r\n      // Create offer\r\n      const offer = await peerConnection.createOffer();\r\n      await peerConnection.setLocalDescription(offer);\r\n      socketInstance.emit(\"offer\", {\r\n        sdp: offer,\r\n        to: socketId,\r\n      });\r\n    } else {\r\n      // Set remote offer\r\n      await peerConnection.setRemoteDescription(new RTCSessionDescription(remoteOffer));\r\n      // Create answer\r\n      const answer = await peerConnection.createAnswer();\r\n      await peerConnection.setLocalDescription(answer);\r\n      socketInstance.emit(\"answer\", {\r\n        sdp: answer,\r\n        to: socketId,\r\n      });\r\n    }\r\n\r\n    peersRef.current[socketId] = peerConnection;\r\n    setPeers({ ...peersRef.current });\r\n  }\r\n\r\n  // Host controls\r\n\r\n  // Mute/unmute audio track\r\n  function toggleMute() {\r\n    if (!localStream) return;\r\n    const audioTrack = localStream.getAudioTracks()[0];\r\n    if (audioTrack) {\r\n      audioTrack.enabled = !audioTrack.enabled;\r\n      setLocalStream(new MediaStream(localStream.getTracks())); // force re-render if needed\r\n    }\r\n  }\r\n\r\n  // End meeting (disconnect all)\r\n  function endMeeting() {\r\n    if (socket) {\r\n      socket.emit(\"end-meeting\", roomCode);\r\n      socket.disconnect();\r\n      setSocket(null);\r\n      setPeers({});\r\n      setRemoteStreams({});\r\n      setRoomCode(\"\");\r\n      setInputRoomCode(\"\");\r\n      setUserName(\"\");\r\n      setIsHost(false);\r\n      if (localStream) {\r\n        localStream.getTracks().forEach((t) => t.stop());\r\n        setLocalStream(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Screen sharing (toggle)\r\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\r\n  const screenTrackRef = useRef(null);\r\n\r\n  async function toggleScreenShare() {\r\n    if (!isScreenSharing) {\r\n      try {\r\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n        screenTrackRef.current = screenStream.getVideoTracks()[0];\r\n        // Replace video track on local stream & peer connections\r\n        replaceVideoTrack(screenTrackRef.current);\r\n        setIsScreenSharing(true);\r\n\r\n        screenTrackRef.current.onended = () => {\r\n          stopScreenShare();\r\n        };\r\n      } catch (err) {\r\n        console.error(\"Screen share error\", err);\r\n      }\r\n    } else {\r\n      stopScreenShare();\r\n    }\r\n  }\r\n\r\n  function stopScreenShare() {\r\n    if (!isScreenSharing) return;\r\n    if (screenTrackRef.current) {\r\n      screenTrackRef.current.stop();\r\n      replaceVideoTrack(localStream.getVideoTracks()[0]);\r\n      setIsScreenSharing(false);\r\n    }\r\n  }\r\n\r\n  function replaceVideoTrack(newTrack) {\r\n    if (!localStream) return;\r\n\r\n    // Replace video track in localStream\r\n    const sender = Object.values(peersRef.current)\r\n      .map((pc) => pc.getSenders())\r\n      .flat()\r\n      .find((s) => s.track && s.track.kind === \"video\");\r\n\r\n    if (sender) sender.replaceTrack(newTrack);\r\n\r\n    // Update local video stream\r\n    const newStream = new MediaStream([...localStream.getAudioTracks(), newTrack]);\r\n    setLocalStream(newStream);\r\n    if (localVideoRef.current) localVideoRef.current.srcObject = newStream;\r\n  }\r\n\r\n  // Render all videos: local + remote\r\n  function renderVideos() {\r\n    const videos = [];\r\n\r\n    // Local video\r\n    videos.push(\r\n      <div key=\"local\" style={styles.videoContainer}>\r\n        <video\r\n          style={styles.video}\r\n          ref={localVideoRef}\r\n          autoPlay\r\n          muted\r\n          playsInline\r\n          onContextMenu={(e) => e.preventDefault()}\r\n        />\r\n        <div style={styles.nameTag}>\r\n          {userName} {isHost ? \"(Host)\" : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    // Remote videos\r\n    Object.entries(remoteStreams).forEach(([socketId, stream]) => {\r\n      videos.push(\r\n        <div key={socketId} style={styles.videoContainer}>\r\n          <VideoPlayer stream={stream} />\r\n          <div style={styles.nameTag}>{socketId}</div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return videos;\r\n  }\r\n\r\n  // Custom component to attach stream to video tag\r\n  function VideoPlayer({ stream }) {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n      if (ref.current) {\r\n        ref.current.srcObject = stream;\r\n      }\r\n    }, [stream]);\r\n\r\n    return <video style={styles.video} ref={ref} autoPlay playsInline />;\r\n  }\r\n\r\n  // Participants list (socketId displayed; in real app you may want username map)\r\n  function renderParticipants() {\r\n    const participantNames = [userName + (isHost ? \" (Host)\" : \"\")];\r\n\r\n    // Remote participant names: Ideally you'd want to get names from server\r\n    // For demo, just socket ids\r\n    participantNames.push(...Object.keys(remoteStreams));\r\n\r\n    return participantNames.map((name, idx) => (\r\n      <div key={idx} style={styles.participantItem}>\r\n        {name}\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  if (!roomCode) {\r\n    // Show join/create room form\r\n    return (\r\n      <div\r\n        style={{\r\n          ...styles.container,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n        }}\r\n      >\r\n        <h1 style={{ color: goldenColor }}>Ve Meet</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Your Name\"\r\n          value={userName}\r\n          onChange={(e) => setUserName(e.target.value)}\r\n          style={styles.input}\r\n        />\r\n        <div style={styles.inputGroup}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Room Code to Join\"\r\n            value={inputRoomCode}\r\n            onChange={(e) => setInputRoomCode(e.target.value)}\r\n            style={styles.input}\r\n          />\r\n          <button style={styles.button} onClick={handleJoin}>\r\n            Join\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button style={styles.button} onClick={handleCreateRoom}>\r\n            Create Room\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.leftPanel}>\r\n        <div style={styles.roomInfo}>\r\n          Room Code: <strong>{roomCode}</strong>\r\n        </div>\r\n\r\n        <div style={styles.controls}>\r\n          <label>\r\n            Camera:\r\n            <select\r\n              value={selectedVideoDevice}\r\n              onChange={(e) => setSelectedVideoDevice(e.target.value)}\r\n              style={styles.select}\r\n            >\r\n              {videoDevices.map((device) => (\r\n                <option key={device.deviceId} value={device.deviceId}>\r\n                  {device.label || `Camera ${device.deviceId}`}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            Microphone:\r\n            <select\r\n              value={selectedAudioDevice}\r\n              onChange={(e) => setSelectedAudioDevice(e.target.value)}\r\n              style={styles.select}\r\n            >\r\n              {audioDevices.map((device) => (\r\n                <option key={device.deviceId} value={device.deviceId}>\r\n                  {device.label || `Mic ${device.deviceId}`}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <button style={styles.button} onClick={toggleMute}>\r\n            Mute/Unmute Mic\r\n          </button>\r\n\r\n          <button style={styles.button} onClick={toggleScreenShare}>\r\n            {isScreenSharing ? \"Stop Sharing\" : \"Share Screen\"}\r\n          </button>\r\n\r\n          <button\r\n            style={{ ...styles.button, ...styles.buttonDanger }}\r\n            onClick={endMeeting}\r\n          >\r\n            End Meeting\r\n          </button>\r\n        </div>\r\n\r\n        <div style={styles.participantsList}>\r\n          <h3>Participants</h3>\r\n          {renderParticipants()}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={styles.videoGrid}>{renderVideos()}</div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}