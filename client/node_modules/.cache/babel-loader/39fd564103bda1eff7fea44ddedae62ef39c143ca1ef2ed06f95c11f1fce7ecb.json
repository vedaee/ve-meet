{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\n// Room.js\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"https://your-server-url.com\"); // Update to your server URL if needed\n\nconst Room = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const localVideoRef = useRef(null);\n  const [peers, setPeers] = useState({});\n  const [localStream, setLocalStream] = useState(null);\n  const [participants, setParticipants] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [joined, setJoined] = useState(false);\n  useEffect(() => {\n    const name = prompt(\"Enter your name\");\n    setUserName(name);\n  }, []);\n  useEffect(() => {\n    if (!joined || !userName) return;\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setLocalStream(stream);\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n      }\n      socket.emit(\"join-room\", {\n        roomId,\n        userName\n      });\n      socket.on(\"all-users\", users => {\n        const newPeers = {};\n        users.forEach(({\n          socketId,\n          userName\n        }) => {\n          const peerConnection = createPeerConnection(socketId, userName);\n          stream.getTracks().forEach(track => {\n            peerConnection.addTrack(track, stream);\n          });\n          newPeers[socketId] = {\n            peerConnection,\n            userName\n          };\n        });\n        setPeers(prev => ({\n          ...prev,\n          ...newPeers\n        }));\n      });\n      socket.on(\"user-joined\", ({\n        socketId,\n        userName\n      }) => {\n        const peerConnection = createPeerConnection(socketId, userName);\n        stream.getTracks().forEach(track => {\n          peerConnection.addTrack(track, stream);\n        });\n        setPeers(prev => ({\n          ...prev,\n          [socketId]: {\n            peerConnection,\n            userName\n          }\n        }));\n      });\n      socket.on(\"offer\", async ({\n        offer,\n        from\n      }) => {\n        const pc = createPeerConnection(from, \"Guest\");\n        await pc.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await pc.createAnswer();\n        await pc.setLocalDescription(answer);\n        socket.emit(\"answer\", {\n          answer,\n          to: from\n        });\n        setPeers(prev => ({\n          ...prev,\n          [from]: {\n            peerConnection: pc\n          }\n        }));\n      });\n      socket.on(\"answer\", ({\n        answer,\n        from\n      }) => {\n        const peer = peers[from];\n        if (peer !== null && peer !== void 0 && peer.peerConnection) {\n          peer.peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\n        }\n      });\n      socket.on(\"ice-candidate\", ({\n        candidate,\n        from\n      }) => {\n        const peer = peers[from];\n        if (peer !== null && peer !== void 0 && peer.peerConnection) {\n          peer.peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\n        }\n      });\n      socket.on(\"user-left\", socketId => {\n        const peer = peers[socketId];\n        if (peer !== null && peer !== void 0 && peer.peerConnection) {\n          peer.peerConnection.close();\n        }\n        setPeers(prev => {\n          const updated = {\n            ...prev\n          };\n          delete updated[socketId];\n          return updated;\n        });\n      });\n    });\n  }, [joined, userName]);\n  const createPeerConnection = (socketId, remoteUserName) => {\n    const pc = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    });\n    pc.onicecandidate = e => {\n      if (e.candidate) {\n        socket.emit(\"ice-candidate\", {\n          to: socketId,\n          candidate: e.candidate\n        });\n      }\n    };\n    pc.ontrack = e => {\n      const remoteStream = new MediaStream();\n      remoteStream.addTrack(e.track);\n      const videoElement = document.getElementById(`video-${socketId}`);\n      if (videoElement) {\n        videoElement.srcObject = remoteStream;\n      } else {\n        var _document$getElementB;\n        const container = document.createElement(\"div\");\n        container.className = \"remote-container\";\n        const nameTag = document.createElement(\"div\");\n        nameTag.className = \"name-tag\";\n        nameTag.innerText = remoteUserName || \"Guest\";\n        const video = document.createElement(\"video\");\n        video.id = `video-${socketId}`;\n        video.autoplay = true;\n        video.playsInline = true;\n        video.srcObject = remoteStream;\n        container.appendChild(nameTag);\n        container.appendChild(video);\n        (_document$getElementB = document.getElementById(\"remoteVideos\")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.appendChild(container);\n      }\n    };\n    return pc;\n  };\n  const handleJoin = () => {\n    setJoined(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"room-title\",\n      children: [\"Ve Meet - Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"local-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-tag\",\n          children: userName || \"You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          muted: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"remoteVideos\",\n        className: \"remote-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), !joined && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"join-btn\",\n      onClick: handleJoin,\n      children: \"Join Meeting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"wLbHKSTBWX03U1AkWAcmRpdp7eM=\", false, function () {\n  return [useParams];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","io","jsxDEV","_jsxDEV","socket","Room","_s","roomId","localVideoRef","peers","setPeers","localStream","setLocalStream","participants","setParticipants","userName","setUserName","joined","setJoined","name","prompt","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","emit","on","users","newPeers","forEach","socketId","peerConnection","createPeerConnection","getTracks","track","addTrack","prev","offer","from","pc","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","to","peer","candidate","addIceCandidate","RTCIceCandidate","close","updated","remoteUserName","RTCPeerConnection","iceServers","urls","onicecandidate","e","ontrack","remoteStream","MediaStream","videoElement","document","getElementById","_document$getElementB","container","createElement","className","nameTag","innerText","id","autoplay","playsInline","appendChild","handleJoin","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","onClick","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet/client/src/components/Room.js"],"sourcesContent":["// Room.js\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nimport \"../App.css\";\r\n\r\nconst socket = io(\"https://your-server-url.com\"); // Update to your server URL if needed\r\n\r\nconst Room = () => {\r\n  const { roomId } = useParams();\r\n  const localVideoRef = useRef(null);\r\n  const [peers, setPeers] = useState({});\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [joined, setJoined] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const name = prompt(\"Enter your name\");\r\n    setUserName(name);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!joined || !userName) return;\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        setLocalStream(stream);\r\n        if (localVideoRef.current) {\r\n          localVideoRef.current.srcObject = stream;\r\n        }\r\n\r\n        socket.emit(\"join-room\", { roomId, userName });\r\n\r\n        socket.on(\"all-users\", (users) => {\r\n          const newPeers = {};\r\n          users.forEach(({ socketId, userName }) => {\r\n            const peerConnection = createPeerConnection(socketId, userName);\r\n            stream.getTracks().forEach((track) => {\r\n              peerConnection.addTrack(track, stream);\r\n            });\r\n            newPeers[socketId] = { peerConnection, userName };\r\n          });\r\n          setPeers((prev) => ({ ...prev, ...newPeers }));\r\n        });\r\n\r\n        socket.on(\"user-joined\", ({ socketId, userName }) => {\r\n          const peerConnection = createPeerConnection(socketId, userName);\r\n          stream.getTracks().forEach((track) => {\r\n            peerConnection.addTrack(track, stream);\r\n          });\r\n          setPeers((prev) => ({\r\n            ...prev,\r\n            [socketId]: { peerConnection, userName },\r\n          }));\r\n        });\r\n\r\n        socket.on(\"offer\", async ({ offer, from }) => {\r\n          const pc = createPeerConnection(from, \"Guest\");\r\n          await pc.setRemoteDescription(new RTCSessionDescription(offer));\r\n          const answer = await pc.createAnswer();\r\n          await pc.setLocalDescription(answer);\r\n          socket.emit(\"answer\", { answer, to: from });\r\n          setPeers((prev) => ({ ...prev, [from]: { peerConnection: pc } }));\r\n        });\r\n\r\n        socket.on(\"answer\", ({ answer, from }) => {\r\n          const peer = peers[from];\r\n          if (peer?.peerConnection) {\r\n            peer.peerConnection.setRemoteDescription(\r\n              new RTCSessionDescription(answer)\r\n            );\r\n          }\r\n        });\r\n\r\n        socket.on(\"ice-candidate\", ({ candidate, from }) => {\r\n          const peer = peers[from];\r\n          if (peer?.peerConnection) {\r\n            peer.peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\r\n          }\r\n        });\r\n\r\n        socket.on(\"user-left\", (socketId) => {\r\n          const peer = peers[socketId];\r\n          if (peer?.peerConnection) {\r\n            peer.peerConnection.close();\r\n          }\r\n          setPeers((prev) => {\r\n            const updated = { ...prev };\r\n            delete updated[socketId];\r\n            return updated;\r\n          });\r\n        });\r\n      });\r\n  }, [joined, userName]);\r\n\r\n  const createPeerConnection = (socketId, remoteUserName) => {\r\n    const pc = new RTCPeerConnection({\r\n      iceServers: [\r\n        {\r\n          urls: \"stun:stun.l.google.com:19302\",\r\n        },\r\n      ],\r\n    });\r\n\r\n    pc.onicecandidate = (e) => {\r\n      if (e.candidate) {\r\n        socket.emit(\"ice-candidate\", {\r\n          to: socketId,\r\n          candidate: e.candidate,\r\n        });\r\n      }\r\n    };\r\n\r\n    pc.ontrack = (e) => {\r\n      const remoteStream = new MediaStream();\r\n      remoteStream.addTrack(e.track);\r\n\r\n      const videoElement = document.getElementById(`video-${socketId}`);\r\n      if (videoElement) {\r\n        videoElement.srcObject = remoteStream;\r\n      } else {\r\n        const container = document.createElement(\"div\");\r\n        container.className = \"remote-container\";\r\n\r\n        const nameTag = document.createElement(\"div\");\r\n        nameTag.className = \"name-tag\";\r\n        nameTag.innerText = remoteUserName || \"Guest\";\r\n\r\n        const video = document.createElement(\"video\");\r\n        video.id = `video-${socketId}`;\r\n        video.autoplay = true;\r\n        video.playsInline = true;\r\n        video.srcObject = remoteStream;\r\n\r\n        container.appendChild(nameTag);\r\n        container.appendChild(video);\r\n\r\n        document.getElementById(\"remoteVideos\")?.appendChild(container);\r\n      }\r\n    };\r\n\r\n    return pc;\r\n  };\r\n\r\n  const handleJoin = () => {\r\n    setJoined(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <h2 className=\"room-title\">Ve Meet - Room: {roomId}</h2>\r\n\r\n      <div className=\"video-grid\">\r\n        <div className=\"local-container\">\r\n          <div className=\"name-tag\">{userName || \"You\"}</div>\r\n          <video ref={localVideoRef} autoPlay muted playsInline />\r\n        </div>\r\n\r\n        <div id=\"remoteVideos\" className=\"remote-grid\"></div>\r\n      </div>\r\n\r\n      {!joined && (\r\n        <button className=\"join-btn\" onClick={handleJoin}>\r\n          Join Meeting\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}