{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet\\\\client\\\\src\\\\components\\\\GuestRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport './Room.css'; // reuse same styles as Host\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('https://localhost:5000', {\n  secure: true\n});\nconst GuestRoom = () => {\n  _s();\n  const [roomId, setRoomId] = useState('');\n  const [name, setName] = useState('');\n  const [joined, setJoined] = useState(false);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState([]);\n  const [cameras, setCameras] = useState([]);\n  const [selectedCam, setSelectedCam] = useState('');\n  const localVideoRef = useRef();\n  const peersRef = useRef({});\n  const remoteStreamsRef = useRef({});\n  useEffect(() => {\n    if (!joined) return;\n    navigator.mediaDevices.enumerateDevices().then(devices => {\n      const cams = devices.filter(d => d.kind === 'videoinput');\n      setCameras(cams);\n      if (!selectedCam && cams.length) setSelectedCam(cams[0].deviceId);\n    });\n  }, [joined]);\n  useEffect(() => {\n    if (!joined || !selectedCam) return;\n    const constraints = {\n      audio: true,\n      video: {\n        deviceId: {\n          exact: selectedCam\n        }\n      }\n    };\n    let stream;\n    navigator.mediaDevices.getUserMedia(constraints).then(gotStream => {\n      stream = gotStream;\n      setLocalStream(stream);\n      if (localVideoRef.current) localVideoRef.current.srcObject = stream;\n      socket.emit('join-room', {\n        roomId,\n        name\n      });\n      setupSocketListeners(stream);\n    }).catch(err => {\n      console.error('Error accessing media devices:', err);\n      alert('Cannot access camera or microphone.');\n    });\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n      Object.values(peersRef.current).forEach(peer => peer.close());\n      peersRef.current = {};\n      remoteStreamsRef.current = {};\n      setRemoteStreams([]);\n      socket.offAny();\n    };\n  }, [joined, selectedCam]);\n  const setupSocketListeners = stream => {\n    socket.off('user-list');\n    socket.off('user-joined');\n    socket.off('offer');\n    socket.off('answer');\n    socket.off('candidate');\n    socket.off('user-left');\n    socket.on('user-list', users => {\n      // Guest can display participant list if needed\n    });\n    socket.on('user-joined', ({\n      id\n    }) => {\n      // New user joined (maybe another guest)\n      const peer = createPeerConnection(id, stream);\n      peersRef.current[id] = peer;\n      stream.getTracks().forEach(track => peer.addTrack(track, stream));\n      peer.createOffer().then(offer => peer.setLocalDescription(offer)).then(() => {\n        socket.emit('offer', {\n          to: id,\n          offer: peer.localDescription\n        });\n      });\n    });\n    socket.on('offer', async ({\n      from,\n      offer\n    }) => {\n      const peer = createPeerConnection(from, stream);\n      peersRef.current[from] = peer;\n      stream.getTracks().forEach(track => peer.addTrack(track, stream));\n      await peer.setRemoteDescription(new RTCSessionDescription(offer));\n      const answer = await peer.createAnswer();\n      await peer.setLocalDescription(answer);\n      socket.emit('answer', {\n        to: from,\n        answer: peer.localDescription\n      });\n    });\n    socket.on('answer', async ({\n      from,\n      answer\n    }) => {\n      const peer = peersRef.current[from];\n      if (!peer) return;\n      await peer.setRemoteDescription(new RTCSessionDescription(answer));\n    });\n    socket.on('candidate', async ({\n      from,\n      candidate\n    }) => {\n      const peer = peersRef.current[from];\n      if (!peer) return;\n      try {\n        await peer.addIceCandidate(new RTCIceCandidate(candidate));\n      } catch (e) {\n        console.error('Error adding ICE candidate', e);\n      }\n    });\n    socket.on('user-left', ({\n      id\n    }) => {\n      if (peersRef.current[id]) {\n        peersRef.current[id].close();\n        delete peersRef.current[id];\n      }\n      delete remoteStreamsRef.current[id];\n      setRemoteStreams(Object.values(remoteStreamsRef.current));\n    });\n  };\n  const createPeerConnection = (peerId, stream) => {\n    const peer = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    });\n    peer.onicecandidate = e => {\n      if (e.candidate) {\n        socket.emit('candidate', {\n          to: peerId,\n          candidate: e.candidate\n        });\n      }\n    };\n    peer.ontrack = e => {\n      remoteStreamsRef.current[peerId] = e.streams[0];\n      setRemoteStreams(Object.values(remoteStreamsRef.current));\n    };\n    peer.oniceconnectionstatechange = () => {\n      if (peer.iceConnectionState === 'disconnected' || peer.iceConnectionState === 'failed') {\n        peer.close();\n        delete peersRef.current[peerId];\n        delete remoteStreamsRef.current[peerId];\n        setRemoteStreams(Object.values(remoteStreamsRef.current));\n      }\n    };\n    return peer;\n  };\n  const handleJoin = () => {\n    if (!roomId.trim() || !name.trim()) {\n      alert('Please enter Room Code and Your Name');\n      return;\n    }\n    setJoined(true);\n  };\n  const handleLeave = () => {\n    Object.values(peersRef.current).forEach(peer => peer.close());\n    peersRef.current = {};\n    remoteStreamsRef.current = {};\n    setRemoteStreams([]);\n    localStream === null || localStream === void 0 ? void 0 : localStream.getTracks().forEach(track => track.stop());\n    socket.emit('leave-room', {\n      roomId\n    });\n    setJoined(false);\n  };\n  const toggleAudio = () => {\n    if (localStream) {\n      const audioTrack = localStream.getAudioTracks()[0];\n      if (audioTrack) audioTrack.enabled = !audioTrack.enabled;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: !joined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join as Guest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Room Code\",\n        value: roomId,\n        onChange: e => setRoomId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Your Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCam,\n        onChange: e => setSelectedCam(e.target.value),\n        children: cameras.map(cam => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cam.deviceId,\n          children: cam.label || 'Camera'\n        }, cam.deviceId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoin,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"User: \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: localVideoRef,\n            autoPlay: true,\n            muted: true,\n            playsInline: true,\n            className: \"video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You (\", name, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), remoteStreams.map((stream, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            autoPlay: true,\n            playsInline: true,\n            ref: video => {\n              if (video) video.srcObject = stream;\n            },\n            className: \"video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Participant \", idx + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleAudio,\n          children: \"Mute/Unmute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLeave,\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(GuestRoom, \"ZJWB0akosaFgmalUFPUcZ8xo+vg=\");\n_c = GuestRoom;\nexport default GuestRoom;\nvar _c;\n$RefreshReg$(_c, \"GuestRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","secure","GuestRoom","_s","roomId","setRoomId","name","setName","joined","setJoined","localStream","setLocalStream","remoteStreams","setRemoteStreams","cameras","setCameras","selectedCam","setSelectedCam","localVideoRef","peersRef","remoteStreamsRef","navigator","mediaDevices","enumerateDevices","then","devices","cams","filter","d","kind","length","deviceId","constraints","audio","video","exact","stream","getUserMedia","gotStream","current","srcObject","emit","setupSocketListeners","catch","err","console","error","alert","getTracks","forEach","track","stop","Object","values","peer","close","offAny","off","on","users","id","createPeerConnection","addTrack","createOffer","offer","setLocalDescription","to","localDescription","from","setRemoteDescription","RTCSessionDescription","answer","createAnswer","candidate","addIceCandidate","RTCIceCandidate","e","peerId","RTCPeerConnection","iceServers","urls","onicecandidate","ontrack","streams","oniceconnectionstatechange","iceConnectionState","handleJoin","trim","handleLeave","toggleAudio","audioTrack","getAudioTracks","enabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","map","cam","label","onClick","ref","autoPlay","muted","playsInline","idx","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet/client/src/components/GuestRoom.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './Room.css'; // reuse same styles as Host\r\n\r\nconst socket = io('https://localhost:5000', { secure: true });\r\n\r\nconst GuestRoom = () => {\r\n  const [roomId, setRoomId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [joined, setJoined] = useState(false);\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const [remoteStreams, setRemoteStreams] = useState([]);\r\n  const [cameras, setCameras] = useState([]);\r\n  const [selectedCam, setSelectedCam] = useState('');\r\n  const localVideoRef = useRef();\r\n  const peersRef = useRef({});\r\n  const remoteStreamsRef = useRef({});\r\n\r\n  useEffect(() => {\r\n    if (!joined) return;\r\n\r\n    navigator.mediaDevices.enumerateDevices().then(devices => {\r\n      const cams = devices.filter(d => d.kind === 'videoinput');\r\n      setCameras(cams);\r\n      if (!selectedCam && cams.length) setSelectedCam(cams[0].deviceId);\r\n    });\r\n  }, [joined]);\r\n\r\n  useEffect(() => {\r\n    if (!joined || !selectedCam) return;\r\n\r\n    const constraints = {\r\n      audio: true,\r\n      video: { deviceId: { exact: selectedCam } }\r\n    };\r\n\r\n    let stream;\r\n\r\n    navigator.mediaDevices.getUserMedia(constraints)\r\n      .then(gotStream => {\r\n        stream = gotStream;\r\n        setLocalStream(stream);\r\n        if (localVideoRef.current) localVideoRef.current.srcObject = stream;\r\n\r\n        socket.emit('join-room', { roomId, name });\r\n\r\n        setupSocketListeners(stream);\r\n      })\r\n      .catch(err => {\r\n        console.error('Error accessing media devices:', err);\r\n        alert('Cannot access camera or microphone.');\r\n      });\r\n\r\n    return () => {\r\n      if (stream) {\r\n        stream.getTracks().forEach(track => track.stop());\r\n      }\r\n      Object.values(peersRef.current).forEach(peer => peer.close());\r\n      peersRef.current = {};\r\n      remoteStreamsRef.current = {};\r\n      setRemoteStreams([]);\r\n      socket.offAny();\r\n    };\r\n  }, [joined, selectedCam]);\r\n\r\n  const setupSocketListeners = (stream) => {\r\n    socket.off('user-list');\r\n    socket.off('user-joined');\r\n    socket.off('offer');\r\n    socket.off('answer');\r\n    socket.off('candidate');\r\n    socket.off('user-left');\r\n\r\n    socket.on('user-list', users => {\r\n      // Guest can display participant list if needed\r\n    });\r\n\r\n    socket.on('user-joined', ({ id }) => {\r\n      // New user joined (maybe another guest)\r\n      const peer = createPeerConnection(id, stream);\r\n      peersRef.current[id] = peer;\r\n      stream.getTracks().forEach(track => peer.addTrack(track, stream));\r\n      peer.createOffer()\r\n        .then(offer => peer.setLocalDescription(offer))\r\n        .then(() => {\r\n          socket.emit('offer', { to: id, offer: peer.localDescription });\r\n        });\r\n    });\r\n\r\n    socket.on('offer', async ({ from, offer }) => {\r\n      const peer = createPeerConnection(from, stream);\r\n      peersRef.current[from] = peer;\r\n      stream.getTracks().forEach(track => peer.addTrack(track, stream));\r\n      await peer.setRemoteDescription(new RTCSessionDescription(offer));\r\n      const answer = await peer.createAnswer();\r\n      await peer.setLocalDescription(answer);\r\n      socket.emit('answer', { to: from, answer: peer.localDescription });\r\n    });\r\n\r\n    socket.on('answer', async ({ from, answer }) => {\r\n      const peer = peersRef.current[from];\r\n      if (!peer) return;\r\n      await peer.setRemoteDescription(new RTCSessionDescription(answer));\r\n    });\r\n\r\n    socket.on('candidate', async ({ from, candidate }) => {\r\n      const peer = peersRef.current[from];\r\n      if (!peer) return;\r\n      try {\r\n        await peer.addIceCandidate(new RTCIceCandidate(candidate));\r\n      } catch (e) {\r\n        console.error('Error adding ICE candidate', e);\r\n      }\r\n    });\r\n\r\n    socket.on('user-left', ({ id }) => {\r\n      if (peersRef.current[id]) {\r\n        peersRef.current[id].close();\r\n        delete peersRef.current[id];\r\n      }\r\n      delete remoteStreamsRef.current[id];\r\n      setRemoteStreams(Object.values(remoteStreamsRef.current));\r\n    });\r\n  };\r\n\r\n  const createPeerConnection = (peerId, stream) => {\r\n    const peer = new RTCPeerConnection({\r\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\r\n    });\r\n\r\n    peer.onicecandidate = e => {\r\n      if (e.candidate) {\r\n        socket.emit('candidate', { to: peerId, candidate: e.candidate });\r\n      }\r\n    };\r\n\r\n    peer.ontrack = e => {\r\n      remoteStreamsRef.current[peerId] = e.streams[0];\r\n      setRemoteStreams(Object.values(remoteStreamsRef.current));\r\n    };\r\n\r\n    peer.oniceconnectionstatechange = () => {\r\n      if (peer.iceConnectionState === 'disconnected' || peer.iceConnectionState === 'failed') {\r\n        peer.close();\r\n        delete peersRef.current[peerId];\r\n        delete remoteStreamsRef.current[peerId];\r\n        setRemoteStreams(Object.values(remoteStreamsRef.current));\r\n      }\r\n    };\r\n\r\n    return peer;\r\n  };\r\n\r\n  const handleJoin = () => {\r\n    if (!roomId.trim() || !name.trim()) {\r\n      alert('Please enter Room Code and Your Name');\r\n      return;\r\n    }\r\n    setJoined(true);\r\n  };\r\n\r\n  const handleLeave = () => {\r\n    Object.values(peersRef.current).forEach(peer => peer.close());\r\n    peersRef.current = {};\r\n    remoteStreamsRef.current = {};\r\n    setRemoteStreams([]);\r\n    localStream?.getTracks().forEach(track => track.stop());\r\n    socket.emit('leave-room', { roomId });\r\n    setJoined(false);\r\n  };\r\n\r\n  const toggleAudio = () => {\r\n    if (localStream) {\r\n      const audioTrack = localStream.getAudioTracks()[0];\r\n      if (audioTrack) audioTrack.enabled = !audioTrack.enabled;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      {!joined ? (\r\n        <div className=\"join-container\">\r\n          <h2>Join as Guest</h2>\r\n          <input placeholder=\"Enter Room Code\" value={roomId} onChange={e => setRoomId(e.target.value)} />\r\n          <input placeholder=\"Enter Your Name\" value={name} onChange={e => setName(e.target.value)} />\r\n          <select value={selectedCam} onChange={e => setSelectedCam(e.target.value)}>\r\n            {cameras.map(cam => (\r\n              <option key={cam.deviceId} value={cam.deviceId}>{cam.label || 'Camera'}</option>\r\n            ))}\r\n          </select>\r\n          <button onClick={handleJoin}>Join</button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"header\">\r\n            <h2>Room: {roomId}</h2>\r\n            <h3>User: {name}</h3>\r\n          </div>\r\n          <div className=\"video-grid\">\r\n            <div className=\"video-block\">\r\n              <video ref={localVideoRef} autoPlay muted playsInline className=\"video\" />\r\n              <p>You ({name})</p>\r\n            </div>\r\n            {remoteStreams.map((stream, idx) => (\r\n              <div key={idx} className=\"video-block\">\r\n                <video autoPlay playsInline ref={video => {\r\n                  if (video) video.srcObject = stream;\r\n                }} className=\"video\" />\r\n                <p>Participant {idx + 1}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"controls\">\r\n            <button onClick={toggleAudio}>Mute/Unmute</button>\r\n            <button onClick={handleLeave}>Leave</button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GuestRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}