{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"https://192.168.29.23:5000\";\nconst socket = io(SERVER_URL, {\n  secure: true,\n  reconnection: true,\n  rejectUnauthorized: false\n});\nconst Room = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [participants, setParticipants] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\");\n  const [micOn, setMicOn] = useState(true);\n  const [camOn, setCamOn] = useState(true);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const streamRef = useRef();\n  const screenTrackRef = useRef();\n  const videoRefs = useRef({});\n  useEffect(() => {\n    const name = prompt(\"Enter your name\");\n    const room = prompt(\"Enter room code\");\n    setUserName(name);\n    setRoomID(room);\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      streamRef.current = stream;\n      if (userVideo.current) userVideo.current.srcObject = stream;\n      socket.emit(\"join-room\", {\n        roomId: room,\n        userName: name\n      });\n      socket.on(\"all-users\", users => {\n        const newPeers = [];\n        users.forEach(user => {\n          if (user.id === socket.id) return;\n          const peer = createPeer(user.id, socket.id, stream);\n          peersRef.current.push({\n            peerID: user.id,\n            peer,\n            userName: user.name\n          });\n          newPeers.push({\n            peerID: user.id,\n            peer,\n            userName: user.name\n          });\n        });\n        setPeers(newPeers);\n        setParticipants(users.map(u => u.name));\n      });\n      socket.on(\"user-joined\", payload => {\n        const peer = addPeer(payload.signal, payload.id, payload.name, stream);\n        peersRef.current.push({\n          peerID: payload.id,\n          peer,\n          userName: payload.name\n        });\n        setPeers(u => [...u, {\n          peerID: payload.id,\n          peer,\n          userName: payload.name\n        }]);\n        setParticipants(l => {\n          if (!l.includes(payload.name)) return [...l, payload.name];\n          return l;\n        });\n      });\n      socket.on(\"receiving-returned-signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        if (item && item.peer) {\n          item.peer.signal(payload.signal);\n        }\n      });\n      socket.on(\"user-disconnected\", id => {\n        setPeers(u => u.filter(p => p.peerID !== id));\n        peersRef.current = peersRef.current.filter(p => p.peerID !== id);\n        setParticipants(peersRef.current.map(p => p.userName));\n        delete videoRefs.current[id];\n      });\n    });\n    return () => {\n      peersRef.current.forEach(({\n        peer\n      }) => peer.destroy());\n      if (streamRef.current) streamRef.current.getTracks().forEach(t => t.stop());\n      socket.disconnect();\n    };\n  }, []);\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const el = videoRefs.current[userToSignal];\n      if (el) el.srcObject = remoteStream;\n    });\n    peer.on(\"error\", err => console.error(\"Peer error (createPeer):\", err));\n    return peer;\n  };\n  const addPeer = (incomingSignal, callerId, name, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"returning-signal\", {\n        signal,\n        callerID: callerId\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const el = videoRefs.current[callerId];\n      if (el) el.srcObject = remoteStream;\n    });\n    peer.on(\"error\", err => console.error(\"Peer error (addPeer):\", err));\n    if (incomingSignal) {\n      try {\n        peer.signal(incomingSignal);\n      } catch (e) {\n        console.error(\"Error signaling peer:\", e);\n      }\n    }\n    return peer;\n  };\n  const toggleMic = () => {\n    streamRef.current.getAudioTracks().forEach(t => t.enabled = !micOn);\n    setMicOn(!micOn);\n  };\n  const toggleCam = () => {\n    streamRef.current.getVideoTracks().forEach(t => t.enabled = !camOn);\n    setCamOn(!camOn);\n  };\n  const handleScreenShare = async () => {\n    if (!screenSharing) {\n      const screen = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      const track = screen.getVideoTracks()[0];\n      screenTrackRef.current = track;\n      peersRef.current.forEach(({\n        peer\n      }) => peer.replaceTrack(streamRef.current.getVideoTracks()[0], track, streamRef.current));\n      track.onended = () => {\n        peersRef.current.forEach(({\n          peer\n        }) => peer.replaceTrack(track, streamRef.current.getVideoTracks()[0], streamRef.current));\n        setScreenSharing(false);\n      };\n      setScreenSharing(true);\n    } else {\n      screenTrackRef.current.stop();\n      setScreenSharing(false);\n    }\n  };\n  const endMeeting = () => {\n    peersRef.current.forEach(({\n      peer\n    }) => peer.destroy());\n    streamRef.current.getTracks().forEach(t => t.stop());\n    socket.disconnect();\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"room-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logo\",\n        children: [\"Ve \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gold\",\n          children: \"Meet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Room: \", roomID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"You: \", userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          muted: true,\n          ref: userVideo,\n          autoPlay: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), peers.map(({\n        peerID,\n        userName\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          autoPlay: true,\n          className: \"video\",\n          ref: el => {\n            if (el) videoRefs.current[peerID] = el;else delete videoRefs.current[peerID];\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, peerID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"participants-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Participants (\", participants.length + 1, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [userName, \" (You)\"]\n        }, \"self\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), participants.map((p, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: p\n        }, `${p}-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 39\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMic,\n          children: micOn ? \"Mute\" : \"Unmute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleCam,\n          children: camOn ? \"Video Off\" : \"Video On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleScreenShare,\n          children: screenSharing ? \"Stop Sharing\" : \"Share Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"end-btn\",\n          onClick: endMeeting,\n          children: \"End Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"RoaFfDUeVEuuIrkPVDHyKrTb4ZA=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","SERVER_URL","socket","secure","reconnection","rejectUnauthorized","Room","_s","peers","setPeers","participants","setParticipants","userName","setUserName","roomID","setRoomID","micOn","setMicOn","camOn","setCamOn","screenSharing","setScreenSharing","userVideo","peersRef","streamRef","screenTrackRef","videoRefs","name","prompt","room","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","emit","roomId","on","users","newPeers","forEach","user","id","peer","createPeer","push","peerID","map","u","payload","addPeer","signal","l","includes","item","find","p","filter","destroy","getTracks","t","stop","disconnect","userToSignal","callerID","initiator","trickle","remoteStream","el","err","console","error","incomingSignal","callerId","e","toggleMic","getAudioTracks","enabled","toggleCam","getVideoTracks","handleScreenShare","screen","getDisplayMedia","track","replaceTrack","onended","endMeeting","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","muted","ref","autoPlay","playsInline","length","i","onClick","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./Room.css\";\r\n\r\nconst SERVER_URL = \"https://192.168.29.23:5000\";\r\n\r\nconst socket = io(SERVER_URL, {\r\n  secure: true,\r\n  reconnection: true,\r\n  rejectUnauthorized: false,\r\n});\r\n\r\nconst Room = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [micOn, setMicOn] = useState(true);\r\n  const [camOn, setCamOn] = useState(true);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const streamRef = useRef();\r\n  const screenTrackRef = useRef();\r\n  const videoRefs = useRef({});\r\n\r\n  useEffect(() => {\r\n    const name = prompt(\"Enter your name\");\r\n    const room = prompt(\"Enter room code\");\r\n    setUserName(name);\r\n    setRoomID(room);\r\n\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n      streamRef.current = stream;\r\n      if (userVideo.current) userVideo.current.srcObject = stream;\r\n\r\n      socket.emit(\"join-room\", { roomId: room, userName: name });\r\n\r\n      socket.on(\"all-users\", (users) => {\r\n        const newPeers = [];\r\n        users.forEach((user) => {\r\n          if (user.id === socket.id) return;\r\n          const peer = createPeer(user.id, socket.id, stream);\r\n          peersRef.current.push({ peerID: user.id, peer, userName: user.name });\r\n          newPeers.push({ peerID: user.id, peer, userName: user.name });\r\n        });\r\n        setPeers(newPeers);\r\n        setParticipants(users.map((u) => u.name));\r\n      });\r\n\r\n      socket.on(\"user-joined\", (payload) => {\r\n        const peer = addPeer(payload.signal, payload.id, payload.name, stream);\r\n        peersRef.current.push({ peerID: payload.id, peer, userName: payload.name });\r\n        setPeers((u) => [...u, { peerID: payload.id, peer, userName: payload.name }]);\r\n        setParticipants((l) => {\r\n          if (!l.includes(payload.name)) return [...l, payload.name];\r\n          return l;\r\n        });\r\n      });\r\n\r\n      socket.on(\"receiving-returned-signal\", (payload) => {\r\n        const item = peersRef.current.find((p) => p.peerID === payload.id);\r\n        if (item && item.peer) {\r\n          item.peer.signal(payload.signal);\r\n        }\r\n      });\r\n\r\n      socket.on(\"user-disconnected\", (id) => {\r\n        setPeers((u) => u.filter((p) => p.peerID !== id));\r\n        peersRef.current = peersRef.current.filter((p) => p.peerID !== id);\r\n        setParticipants(peersRef.current.map((p) => p.userName));\r\n        delete videoRefs.current[id];\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      peersRef.current.forEach(({ peer }) => peer.destroy());\r\n      if (streamRef.current) streamRef.current.getTracks().forEach((t) => t.stop());\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const createPeer = (userToSignal, callerID, stream) => {\r\n    const peer = new Peer({ initiator: true, trickle: false, stream });\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"sending-signal\", { userToSignal, callerID, signal });\r\n    });\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const el = videoRefs.current[userToSignal];\r\n      if (el) el.srcObject = remoteStream;\r\n    });\r\n    peer.on(\"error\", (err) => console.error(\"Peer error (createPeer):\", err));\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (incomingSignal, callerId, name, stream) => {\r\n    const peer = new Peer({ initiator: false, trickle: false, stream });\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"returning-signal\", { signal, callerID: callerId });\r\n    });\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const el = videoRefs.current[callerId];\r\n      if (el) el.srcObject = remoteStream;\r\n    });\r\n    peer.on(\"error\", (err) => console.error(\"Peer error (addPeer):\", err));\r\n    if (incomingSignal) {\r\n      try { peer.signal(incomingSignal); }\r\n      catch (e) { console.error(\"Error signaling peer:\", e); }\r\n    }\r\n    return peer;\r\n  };\r\n\r\n  const toggleMic = () => {\r\n    streamRef.current.getAudioTracks().forEach((t) => (t.enabled = !micOn));\r\n    setMicOn(!micOn);\r\n  };\r\n\r\n  const toggleCam = () => {\r\n    streamRef.current.getVideoTracks().forEach((t) => (t.enabled = !camOn));\r\n    setCamOn(!camOn);\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    if (!screenSharing) {\r\n      const screen = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n      const track = screen.getVideoTracks()[0];\r\n      screenTrackRef.current = track;\r\n      peersRef.current.forEach(({ peer }) =>\r\n        peer.replaceTrack(streamRef.current.getVideoTracks()[0], track, streamRef.current)\r\n      );\r\n      track.onended = () => {\r\n        peersRef.current.forEach(({ peer }) =>\r\n          peer.replaceTrack(track, streamRef.current.getVideoTracks()[0], streamRef.current)\r\n        );\r\n        setScreenSharing(false);\r\n      };\r\n      setScreenSharing(true);\r\n    } else {\r\n      screenTrackRef.current.stop();\r\n      setScreenSharing(false);\r\n    }\r\n  };\r\n\r\n  const endMeeting = () => {\r\n    peersRef.current.forEach(({ peer }) => peer.destroy());\r\n    streamRef.current.getTracks().forEach((t) => t.stop());\r\n    socket.disconnect();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <header className=\"room-header\">\r\n        <h2 className=\"logo\">Ve <span className=\"gold\">Meet</span></h2>\r\n        <div>\r\n          <span>Room: {roomID}</span>\r\n          <span className=\"username\">You: {userName}</span>\r\n        </div>\r\n      </header>\r\n      <main className=\"video-grid\">\r\n        <div className=\"video-block\">\r\n          <video muted ref={userVideo} autoPlay playsInline className=\"video\" />\r\n          <p>{userName} (You)</p>\r\n        </div>\r\n        {peers.map(({ peerID, userName }) => (\r\n          <div className=\"video-block\" key={peerID}>\r\n            <video playsInline autoPlay className=\"video\"\r\n              ref={(el) => {\r\n                if (el) videoRefs.current[peerID] = el;\r\n                else delete videoRefs.current[peerID];\r\n              }}\r\n            />\r\n            <p>{userName}</p>\r\n          </div>\r\n        ))}\r\n      </main>\r\n      <aside className=\"participants-panel\">\r\n        <h3>Participants ({participants.length + 1})</h3>\r\n        <ul>\r\n          <li key=\"self\">{userName} (You)</li>\r\n          {participants.map((p, i) => <li key={`${p}-${i}`}>{p}</li>)}\r\n        </ul>\r\n        <div className=\"controls\">\r\n          <button onClick={toggleMic}>{micOn ? \"Mute\" : \"Unmute\"}</button>\r\n          <button onClick={toggleCam}>{camOn ? \"Video Off\" : \"Video On\"}</button>\r\n          <button onClick={handleScreenShare}>{screenSharing ? \"Stop Sharing\" : \"Share Screen\"}</button>\r\n          <button className=\"end-btn\" onClick={endMeeting}>End Meeting</button>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}