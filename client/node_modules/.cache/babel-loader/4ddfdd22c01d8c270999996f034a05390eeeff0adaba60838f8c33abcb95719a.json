{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"https://192.168.29.23:5000\", {\n  secure: true,\n  reconnection: true,\n  rejectUnauthorized: false\n});\nconst Room = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [participants, setParticipants] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\");\n  const [micOn, setMicOn] = useState(true);\n  const [camOn, setCamOn] = useState(true);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const streamRef = useRef();\n  const screenTrackRef = useRef();\n  const videoRefs = useRef({});\n  useEffect(() => {\n    async function init() {\n      const name = prompt(\"Enter your name\");\n      const room = prompt(\"Enter room code\");\n      setUserName(name);\n      setRoomID(room);\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        streamRef.current = stream;\n        if (userVideo.current) userVideo.current.srcObject = stream;\n        socket.emit(\"join-room\", {\n          roomId: room,\n          userName: name\n        });\n\n        // Initialize participants with self\n        setParticipants([name]);\n      } catch (err) {\n        console.error(\"Error accessing media devices\", err);\n        alert(\"Could not access your camera and microphone.\");\n      }\n    }\n    init();\n\n    // Socket listeners (only once)\n    socket.on(\"all-users\", users => {\n      const newPeers = [];\n      users.forEach(user => {\n        if (user.id === socket.id) return;\n        const peer = createPeer(user.id, socket.id, streamRef.current);\n        peersRef.current.push({\n          peerID: user.id,\n          peer,\n          userName: user.name\n        });\n        newPeers.push({\n          peerID: user.id,\n          peer,\n          userName: user.name\n        });\n      });\n      setPeers(newPeers);\n      setParticipants(prev => {\n        // add new users who are not in list already\n        const names = users.map(u => u.name);\n        return Array.from(new Set([...prev, ...names]));\n      });\n    });\n    socket.on(\"user-joined\", payload => {\n      const peer = addPeer(payload.signal, payload.id, payload.name, streamRef.current);\n      peersRef.current.push({\n        peerID: payload.id,\n        peer,\n        userName: payload.name\n      });\n      setPeers(users => [...users, {\n        peerID: payload.id,\n        peer,\n        userName: payload.name\n      }]);\n      setParticipants(list => [...list, payload.name]);\n    });\n    socket.on(\"receiving-returned-signal\", payload => {\n      const item = peersRef.current.find(p => p.peerID === payload.id);\n      if (item) item.peer.signal(payload.signal);\n    });\n    socket.on(\"user-disconnected\", id => {\n      const disconnectedPeer = peersRef.current.find(p => p.peerID === id);\n      if (disconnectedPeer) {\n        peersRef.current = peersRef.current.filter(p => p.peerID !== id);\n        setPeers(users => users.filter(p => p.peerID !== id));\n        setParticipants(list => list.filter(name => name !== disconnectedPeer.userName));\n      }\n    });\n    return () => {\n      socket.off(\"all-users\");\n      socket.off(\"user-joined\");\n      socket.off(\"receiving-returned-signal\");\n      socket.off(\"user-disconnected\");\n      socket.disconnect();\n      peersRef.current.forEach(({\n        peer\n      }) => peer.destroy());\n      if (streamRef.current) streamRef.current.getTracks().forEach(t => t.stop());\n    };\n  }, []);\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const videoElement = videoRefs.current[userToSignal];\n      if (videoElement) {\n        videoElement.srcObject = remoteStream;\n      }\n    });\n    return peer;\n  };\n  const addPeer = (incomingSignal, callerId, name, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"returning-signal\", {\n        signal,\n        to: callerId\n      }); // fixed event name here\n    });\n    peer.on(\"stream\", remoteStream => {\n      const videoElement = videoRefs.current[callerId];\n      if (videoElement) {\n        videoElement.srcObject = remoteStream;\n      }\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  };\n  const toggleMic = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getAudioTracks().forEach(track => {\n      track.enabled = !micOn;\n    });\n    setMicOn(!micOn);\n  };\n  const toggleCam = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getVideoTracks().forEach(track => {\n      track.enabled = !camOn;\n    });\n    setCamOn(!camOn);\n  };\n  const handleScreenShare = async () => {\n    if (!screenSharing) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true\n        });\n        const screenTrack = screenStream.getVideoTracks()[0];\n        screenTrackRef.current = screenTrack;\n        peersRef.current.forEach(({\n          peer\n        }) => {\n          peer.replaceTrack(streamRef.current.getVideoTracks()[0], screenTrack, streamRef.current);\n        });\n        screenTrack.onended = () => {\n          peersRef.current.forEach(({\n            peer\n          }) => {\n            peer.replaceTrack(screenTrack, streamRef.current.getVideoTracks()[0], streamRef.current);\n          });\n          setScreenSharing(false);\n        };\n        setScreenSharing(true);\n      } catch (err) {\n        console.error(\"Screen share error:\", err);\n      }\n    } else {\n      if (screenTrackRef.current) screenTrackRef.current.stop();\n      setScreenSharing(false);\n    }\n  };\n  const endMeeting = () => {\n    peersRef.current.forEach(({\n      peer\n    }) => peer.destroy());\n    peersRef.current = [];\n    if (streamRef.current) streamRef.current.getTracks().forEach(track => track.stop());\n    socket.disconnect();\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"room-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logo\",\n        children: \"Ve Meet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Room: \", roomID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"You: \", userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          muted: true,\n          ref: userVideo,\n          autoPlay: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), peers.map(({\n        peerID,\n        userName\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          autoPlay: true,\n          className: \"video\",\n          ref: el => {\n            videoRefs.current[peerID] = el;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, peerID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"participants-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Participants (\", participants.length + 1, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), participants.map((pName, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: pName\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMic,\n          children: micOn ? \"Mute\" : \"Unmute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleCam,\n          children: camOn ? \"Video Off\" : \"Video On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleScreenShare,\n          children: screenSharing ? \"Stop Sharing\" : \"Share Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"end-btn\",\n          onClick: endMeeting,\n          children: \"End Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"RoaFfDUeVEuuIrkPVDHyKrTb4ZA=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","socket","secure","reconnection","rejectUnauthorized","Room","_s","peers","setPeers","participants","setParticipants","userName","setUserName","roomID","setRoomID","micOn","setMicOn","camOn","setCamOn","screenSharing","setScreenSharing","userVideo","peersRef","streamRef","screenTrackRef","videoRefs","init","name","prompt","room","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","emit","roomId","err","console","error","alert","on","users","newPeers","forEach","user","id","peer","createPeer","push","peerID","prev","names","map","u","Array","from","Set","payload","addPeer","signal","list","item","find","p","disconnectedPeer","filter","off","disconnect","destroy","getTracks","t","stop","userToSignal","callerID","initiator","trickle","remoteStream","videoElement","incomingSignal","callerId","to","toggleMic","getAudioTracks","track","enabled","toggleCam","getVideoTracks","handleScreenShare","screenStream","getDisplayMedia","screenTrack","replaceTrack","onended","endMeeting","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","muted","ref","autoPlay","playsInline","el","length","pName","idx","onClick","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./Room.css\";\r\n\r\nconst socket = io(\"https://192.168.29.23:5000\", {\r\n  secure: true,\r\n  reconnection: true,\r\n  rejectUnauthorized: false,\r\n});\r\n\r\nconst Room = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [micOn, setMicOn] = useState(true);\r\n  const [camOn, setCamOn] = useState(true);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const streamRef = useRef();\r\n  const screenTrackRef = useRef();\r\n  const videoRefs = useRef({});\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      const name = prompt(\"Enter your name\");\r\n      const room = prompt(\"Enter room code\");\r\n      setUserName(name);\r\n      setRoomID(room);\r\n\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          video: true,\r\n          audio: true,\r\n        });\r\n        streamRef.current = stream;\r\n        if (userVideo.current) userVideo.current.srcObject = stream;\r\n\r\n        socket.emit(\"join-room\", { roomId: room, userName: name });\r\n\r\n        // Initialize participants with self\r\n        setParticipants([name]);\r\n      } catch (err) {\r\n        console.error(\"Error accessing media devices\", err);\r\n        alert(\"Could not access your camera and microphone.\");\r\n      }\r\n    }\r\n    init();\r\n\r\n    // Socket listeners (only once)\r\n    socket.on(\"all-users\", (users) => {\r\n      const newPeers = [];\r\n      users.forEach((user) => {\r\n        if (user.id === socket.id) return;\r\n        const peer = createPeer(user.id, socket.id, streamRef.current);\r\n        peersRef.current.push({ peerID: user.id, peer, userName: user.name });\r\n        newPeers.push({ peerID: user.id, peer, userName: user.name });\r\n      });\r\n      setPeers(newPeers);\r\n      setParticipants((prev) => {\r\n        // add new users who are not in list already\r\n        const names = users.map((u) => u.name);\r\n        return Array.from(new Set([...prev, ...names]));\r\n      });\r\n    });\r\n\r\n    socket.on(\"user-joined\", (payload) => {\r\n      const peer = addPeer(payload.signal, payload.id, payload.name, streamRef.current);\r\n      peersRef.current.push({ peerID: payload.id, peer, userName: payload.name });\r\n      setPeers((users) => [...users, { peerID: payload.id, peer, userName: payload.name }]);\r\n      setParticipants((list) => [...list, payload.name]);\r\n    });\r\n\r\n    socket.on(\"receiving-returned-signal\", (payload) => {\r\n      const item = peersRef.current.find((p) => p.peerID === payload.id);\r\n      if (item) item.peer.signal(payload.signal);\r\n    });\r\n\r\n    socket.on(\"user-disconnected\", (id) => {\r\n      const disconnectedPeer = peersRef.current.find((p) => p.peerID === id);\r\n      if (disconnectedPeer) {\r\n        peersRef.current = peersRef.current.filter((p) => p.peerID !== id);\r\n        setPeers((users) => users.filter((p) => p.peerID !== id));\r\n        setParticipants((list) => list.filter((name) => name !== disconnectedPeer.userName));\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"all-users\");\r\n      socket.off(\"user-joined\");\r\n      socket.off(\"receiving-returned-signal\");\r\n      socket.off(\"user-disconnected\");\r\n\r\n      socket.disconnect();\r\n      peersRef.current.forEach(({ peer }) => peer.destroy());\r\n      if (streamRef.current) streamRef.current.getTracks().forEach((t) => t.stop());\r\n    };\r\n  }, []);\r\n\r\n  const createPeer = (userToSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"sending-signal\", { userToSignal, callerID, signal });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const videoElement = videoRefs.current[userToSignal];\r\n      if (videoElement) {\r\n        videoElement.srcObject = remoteStream;\r\n      }\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (incomingSignal, callerId, name, stream) => {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"returning-signal\", { signal, to: callerId }); // fixed event name here\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const videoElement = videoRefs.current[callerId];\r\n      if (videoElement) {\r\n        videoElement.srcObject = remoteStream;\r\n      }\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n    return peer;\r\n  };\r\n\r\n  const toggleMic = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getAudioTracks().forEach((track) => {\r\n      track.enabled = !micOn;\r\n    });\r\n    setMicOn(!micOn);\r\n  };\r\n\r\n  const toggleCam = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getVideoTracks().forEach((track) => {\r\n      track.enabled = !camOn;\r\n    });\r\n    setCamOn(!camOn);\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    if (!screenSharing) {\r\n      try {\r\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n        const screenTrack = screenStream.getVideoTracks()[0];\r\n        screenTrackRef.current = screenTrack;\r\n\r\n        peersRef.current.forEach(({ peer }) => {\r\n          peer.replaceTrack(streamRef.current.getVideoTracks()[0], screenTrack, streamRef.current);\r\n        });\r\n\r\n        screenTrack.onended = () => {\r\n          peersRef.current.forEach(({ peer }) => {\r\n            peer.replaceTrack(screenTrack, streamRef.current.getVideoTracks()[0], streamRef.current);\r\n          });\r\n          setScreenSharing(false);\r\n        };\r\n\r\n        setScreenSharing(true);\r\n      } catch (err) {\r\n        console.error(\"Screen share error:\", err);\r\n      }\r\n    } else {\r\n      if (screenTrackRef.current) screenTrackRef.current.stop();\r\n      setScreenSharing(false);\r\n    }\r\n  };\r\n\r\n  const endMeeting = () => {\r\n    peersRef.current.forEach(({ peer }) => peer.destroy());\r\n    peersRef.current = [];\r\n    if (streamRef.current) streamRef.current.getTracks().forEach((track) => track.stop());\r\n    socket.disconnect();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <header className=\"room-header\">\r\n        <h2 className=\"logo\">Ve Meet</h2>\r\n        <div>\r\n          <span>Room: {roomID}</span>\r\n          <span className=\"username\">You: {userName}</span>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"video-grid\">\r\n        <div className=\"video-block\">\r\n          <video muted ref={userVideo} autoPlay playsInline className=\"video\" />\r\n          <p>{userName} (You)</p>\r\n        </div>\r\n        {peers.map(({ peerID, userName }) => (\r\n          <div className=\"video-block\" key={peerID}>\r\n            <video\r\n              playsInline\r\n              autoPlay\r\n              className=\"video\"\r\n              ref={(el) => {\r\n                videoRefs.current[peerID] = el;\r\n              }}\r\n            />\r\n            <p>{userName}</p>\r\n          </div>\r\n        ))}\r\n      </main>\r\n\r\n      <aside className=\"participants-panel\">\r\n        <h3>Participants ({participants.length + 1})</h3>\r\n        <ul>\r\n          <li>{userName} (You)</li>\r\n          {participants.map((pName, idx) => (\r\n            <li key={idx}>{pName}</li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"controls\">\r\n          <button onClick={toggleMic}>{micOn ? \"Mute\" : \"Unmute\"}</button>\r\n          <button onClick={toggleCam}>{camOn ? \"Video Off\" : \"Video On\"}</button>\r\n          <button onClick={handleScreenShare}>{screenSharing ? \"Stop Sharing\" : \"Share Screen\"}</button>\r\n          <button className=\"end-btn\" onClick={endMeeting}>\r\n            End Meeting\r\n          </button>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}