{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"https://192.168.29.23:5000\";\nconst socket = io(SERVER_URL, {\n  secure: true,\n  reconnection: true,\n  rejectUnauthorized: false\n});\nconst Room = () => {\n  _s();\n  const [peers, setPeers] = useState([]); // {peerID, peer, userName}\n  const [participants, setParticipants] = useState([]); // array of userNames\n  const [userName, setUserName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\");\n  const [micOn, setMicOn] = useState(true);\n  const [camOn, setCamOn] = useState(true);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const streamRef = useRef();\n  const screenTrackRef = useRef();\n  const videoRefs = useRef({}); // map peerID => video element\n\n  useEffect(() => {\n    const name = prompt(\"Enter your name\");\n    const room = prompt(\"Enter room code\");\n    setUserName(name);\n    setRoomID(room);\n\n    // Get user media\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      streamRef.current = stream;\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n      socket.emit(\"join-room\", {\n        roomId: room,\n        userName: name\n      });\n\n      // Listen for existing users\n      socket.on(\"all-users\", users => {\n        // Filter duplicates (just in case)\n        const uniqueUsers = users.filter((u, idx, self) => idx === self.findIndex(t => t.id === u.id));\n        const newPeers = [];\n        uniqueUsers.forEach(user => {\n          if (user.id === socket.id) return;\n          if (!peersRef.current.find(p => p.peerID === user.id)) {\n            const peer = createPeer(user.id, socket.id, stream);\n            peersRef.current.push({\n              peerID: user.id,\n              peer,\n              userName: user.name\n            });\n            newPeers.push({\n              peerID: user.id,\n              peer,\n              userName: user.name\n            });\n          }\n        });\n        setPeers(newPeers);\n        setParticipants(uniqueUsers.map(u => u.name));\n      });\n\n      // New user joined\n      socket.on(\"user-joined\", payload => {\n        if (!peersRef.current.find(p => p.peerID === payload.id)) {\n          const peer = addPeer(payload.signal, payload.id, payload.name, stream);\n          peersRef.current.push({\n            peerID: payload.id,\n            peer,\n            userName: payload.name\n          });\n          setPeers(users => [...users, {\n            peerID: payload.id,\n            peer,\n            userName: payload.name\n          }]);\n        }\n        setParticipants(list => {\n          if (!list.includes(payload.name)) return [...list, payload.name];else return list;\n        });\n      });\n\n      // Signal returned from other peers\n      socket.on(\"receiving-returned-signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        if (item && item.peer && typeof item.peer.signal === \"function\") {\n          try {\n            item.peer.signal(payload.signal);\n          } catch (err) {\n            console.error(\"Error signaling peer (receiving-returned-signal):\", err);\n          }\n        }\n      });\n\n      // User disconnected\n      socket.on(\"user-disconnected\", id => {\n        setPeers(users => users.filter(p => p.peerID !== id));\n        peersRef.current = peersRef.current.filter(p => p.peerID !== id);\n        setParticipants(peersRef.current.map(p => p.userName));\n        if (videoRefs.current[id]) {\n          delete videoRefs.current[id];\n        }\n      });\n    }).catch(err => {\n      alert(\"Error accessing camera/mic: \" + err.message);\n    });\n    return () => {\n      socket.disconnect();\n      peersRef.current.forEach(({\n        peer\n      }) => peer.destroy());\n      if (streamRef.current) streamRef.current.getTracks().forEach(track => track.stop());\n    };\n  }, []);\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const videoElem = videoRefs.current[userToSignal];\n      if (videoElem) {\n        videoElem.srcObject = remoteStream;\n      }\n    });\n    peer.on(\"error\", err => {\n      console.error(\"Peer error (createPeer):\", err);\n    });\n    return peer;\n  };\n  const addPeer = (incomingSignal, callerId, name, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"returning-signal\", {\n        signal,\n        to: callerId\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const videoElem = videoRefs.current[callerId];\n      if (videoElem) {\n        videoElem.srcObject = remoteStream;\n      }\n    });\n    peer.on(\"error\", err => {\n      console.error(\"Peer error (addPeer):\", err);\n    });\n    if (peer && typeof peer.signal === \"function\" && incomingSignal) {\n      try {\n        peer.signal(incomingSignal);\n      } catch (err) {\n        console.error(\"Error signaling peer (addPeer):\", err);\n      }\n    }\n    return peer;\n  };\n  const toggleMic = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getAudioTracks().forEach(track => {\n      track.enabled = !micOn;\n    });\n    setMicOn(!micOn);\n  };\n  const toggleCam = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getVideoTracks().forEach(track => {\n      track.enabled = !camOn;\n    });\n    setCamOn(!camOn);\n  };\n  const handleScreenShare = async () => {\n    if (!screenSharing) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true\n        });\n        const screenTrack = screenStream.getVideoTracks()[0];\n        screenTrackRef.current = screenTrack;\n        peersRef.current.forEach(({\n          peer\n        }) => {\n          peer.replaceTrack(streamRef.current.getVideoTracks()[0], screenTrack, streamRef.current);\n        });\n        screenTrack.onended = () => {\n          peersRef.current.forEach(({\n            peer\n          }) => {\n            peer.replaceTrack(screenTrack, streamRef.current.getVideoTracks()[0], streamRef.current);\n          });\n          setScreenSharing(false);\n        };\n        setScreenSharing(true);\n      } catch (err) {\n        console.error(\"Screen share error:\", err);\n      }\n    } else {\n      if (screenTrackRef.current) screenTrackRef.current.stop();\n      setScreenSharing(false);\n    }\n  };\n  const endMeeting = () => {\n    peersRef.current.forEach(({\n      peer\n    }) => peer.destroy());\n    peersRef.current = [];\n    if (streamRef.current) streamRef.current.getTracks().forEach(track => track.stop());\n    socket.disconnect();\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"room-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logo\",\n        children: [\"Ve \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gold\",\n          children: \"Meet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Room: \", roomID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"You: \", userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          muted: true,\n          ref: userVideo,\n          autoPlay: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), peers.map(({\n        peerID,\n        userName\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          autoPlay: true,\n          className: \"video\",\n          ref: el => {\n            if (el) videoRefs.current[peerID] = el;else delete videoRefs.current[peerID];\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, peerID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"participants-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Participants (\", participants.length + 1, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [userName, \" (You)\"]\n        }, userName + \"-self\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), participants.map(pName => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: pName\n        }, pName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMic,\n          children: micOn ? \"Mute\" : \"Unmute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleCam,\n          children: camOn ? \"Video Off\" : \"Video On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleScreenShare,\n          children: screenSharing ? \"Stop Sharing\" : \"Share Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"end-btn\",\n          onClick: endMeeting,\n          children: \"End Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"RoaFfDUeVEuuIrkPVDHyKrTb4ZA=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","SERVER_URL","socket","secure","reconnection","rejectUnauthorized","Room","_s","peers","setPeers","participants","setParticipants","userName","setUserName","roomID","setRoomID","micOn","setMicOn","camOn","setCamOn","screenSharing","setScreenSharing","userVideo","peersRef","streamRef","screenTrackRef","videoRefs","name","prompt","room","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","emit","roomId","on","users","uniqueUsers","filter","u","idx","self","findIndex","t","id","newPeers","forEach","user","find","p","peerID","peer","createPeer","push","map","payload","addPeer","signal","list","includes","item","err","console","error","catch","alert","message","disconnect","destroy","getTracks","track","stop","userToSignal","callerID","initiator","trickle","remoteStream","videoElem","incomingSignal","callerId","to","toggleMic","getAudioTracks","enabled","toggleCam","getVideoTracks","handleScreenShare","screenStream","getDisplayMedia","screenTrack","replaceTrack","onended","endMeeting","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","muted","ref","autoPlay","playsInline","el","length","pName","onClick","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./Room.css\";\r\n\r\nconst SERVER_URL = \"https://192.168.29.23:5000\";\r\n\r\nconst socket = io(SERVER_URL, {\r\n  secure: true,\r\n  reconnection: true,\r\n  rejectUnauthorized: false,\r\n});\r\n\r\nconst Room = () => {\r\n  const [peers, setPeers] = useState([]); // {peerID, peer, userName}\r\n  const [participants, setParticipants] = useState([]); // array of userNames\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [micOn, setMicOn] = useState(true);\r\n  const [camOn, setCamOn] = useState(true);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const streamRef = useRef();\r\n  const screenTrackRef = useRef();\r\n  const videoRefs = useRef({}); // map peerID => video element\r\n\r\n  useEffect(() => {\r\n    const name = prompt(\"Enter your name\");\r\n    const room = prompt(\"Enter room code\");\r\n    setUserName(name);\r\n    setRoomID(room);\r\n\r\n    // Get user media\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        streamRef.current = stream;\r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = stream;\r\n        }\r\n\r\n        socket.emit(\"join-room\", { roomId: room, userName: name });\r\n\r\n        // Listen for existing users\r\n        socket.on(\"all-users\", (users) => {\r\n          // Filter duplicates (just in case)\r\n          const uniqueUsers = users.filter(\r\n            (u, idx, self) => idx === self.findIndex(t => t.id === u.id)\r\n          );\r\n\r\n          const newPeers = [];\r\n          uniqueUsers.forEach((user) => {\r\n            if (user.id === socket.id) return;\r\n            if (!peersRef.current.find((p) => p.peerID === user.id)) {\r\n              const peer = createPeer(user.id, socket.id, stream);\r\n              peersRef.current.push({ peerID: user.id, peer, userName: user.name });\r\n              newPeers.push({ peerID: user.id, peer, userName: user.name });\r\n            }\r\n          });\r\n          setPeers(newPeers);\r\n          setParticipants(uniqueUsers.map(u => u.name));\r\n        });\r\n\r\n        // New user joined\r\n        socket.on(\"user-joined\", (payload) => {\r\n          if (!peersRef.current.find(p => p.peerID === payload.id)) {\r\n            const peer = addPeer(payload.signal, payload.id, payload.name, stream);\r\n            peersRef.current.push({ peerID: payload.id, peer, userName: payload.name });\r\n            setPeers(users => [...users, { peerID: payload.id, peer, userName: payload.name }]);\r\n          }\r\n          setParticipants(list => {\r\n            if (!list.includes(payload.name)) return [...list, payload.name];\r\n            else return list;\r\n          });\r\n        });\r\n\r\n        // Signal returned from other peers\r\n        socket.on(\"receiving-returned-signal\", (payload) => {\r\n          const item = peersRef.current.find(p => p.peerID === payload.id);\r\n          if (item && item.peer && typeof item.peer.signal === \"function\") {\r\n            try {\r\n              item.peer.signal(payload.signal);\r\n            } catch (err) {\r\n              console.error(\"Error signaling peer (receiving-returned-signal):\", err);\r\n            }\r\n          }\r\n        });\r\n\r\n        // User disconnected\r\n        socket.on(\"user-disconnected\", (id) => {\r\n          setPeers(users => users.filter(p => p.peerID !== id));\r\n          peersRef.current = peersRef.current.filter(p => p.peerID !== id);\r\n          setParticipants(peersRef.current.map(p => p.userName));\r\n          if (videoRefs.current[id]) {\r\n            delete videoRefs.current[id];\r\n          }\r\n        });\r\n      })\r\n      .catch(err => {\r\n        alert(\"Error accessing camera/mic: \" + err.message);\r\n      });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      peersRef.current.forEach(({ peer }) => peer.destroy());\r\n      if (streamRef.current) streamRef.current.getTracks().forEach(track => track.stop());\r\n    };\r\n  }, []);\r\n\r\n  const createPeer = (userToSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"sending-signal\", { userToSignal, callerID, signal });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const videoElem = videoRefs.current[userToSignal];\r\n      if (videoElem) {\r\n        videoElem.srcObject = remoteStream;\r\n      }\r\n    });\r\n\r\n    peer.on(\"error\", (err) => {\r\n      console.error(\"Peer error (createPeer):\", err);\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (incomingSignal, callerId, name, stream) => {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"returning-signal\", { signal, to: callerId });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const videoElem = videoRefs.current[callerId];\r\n      if (videoElem) {\r\n        videoElem.srcObject = remoteStream;\r\n      }\r\n    });\r\n\r\n    peer.on(\"error\", (err) => {\r\n      console.error(\"Peer error (addPeer):\", err);\r\n    });\r\n\r\n    if (peer && typeof peer.signal === \"function\" && incomingSignal) {\r\n      try {\r\n        peer.signal(incomingSignal);\r\n      } catch (err) {\r\n        console.error(\"Error signaling peer (addPeer):\", err);\r\n      }\r\n    }\r\n\r\n    return peer;\r\n  };\r\n\r\n  const toggleMic = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getAudioTracks().forEach(track => {\r\n      track.enabled = !micOn;\r\n    });\r\n    setMicOn(!micOn);\r\n  };\r\n\r\n  const toggleCam = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getVideoTracks().forEach(track => {\r\n      track.enabled = !camOn;\r\n    });\r\n    setCamOn(!camOn);\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    if (!screenSharing) {\r\n      try {\r\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n        const screenTrack = screenStream.getVideoTracks()[0];\r\n        screenTrackRef.current = screenTrack;\r\n\r\n        peersRef.current.forEach(({ peer }) => {\r\n          peer.replaceTrack(streamRef.current.getVideoTracks()[0], screenTrack, streamRef.current);\r\n        });\r\n\r\n        screenTrack.onended = () => {\r\n          peersRef.current.forEach(({ peer }) => {\r\n            peer.replaceTrack(screenTrack, streamRef.current.getVideoTracks()[0], streamRef.current);\r\n          });\r\n          setScreenSharing(false);\r\n        };\r\n\r\n        setScreenSharing(true);\r\n      } catch (err) {\r\n        console.error(\"Screen share error:\", err);\r\n      }\r\n    } else {\r\n      if (screenTrackRef.current) screenTrackRef.current.stop();\r\n      setScreenSharing(false);\r\n    }\r\n  };\r\n\r\n  const endMeeting = () => {\r\n    peersRef.current.forEach(({ peer }) => peer.destroy());\r\n    peersRef.current = [];\r\n    if (streamRef.current) streamRef.current.getTracks().forEach(track => track.stop());\r\n    socket.disconnect();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <header className=\"room-header\">\r\n        <h2 className=\"logo\">\r\n          Ve <span className=\"gold\">Meet</span>\r\n        </h2>\r\n        <div>\r\n          <span>Room: {roomID}</span>\r\n          <span className=\"username\">You: {userName}</span>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"video-grid\">\r\n        <div className=\"video-block\">\r\n          <video muted ref={userVideo} autoPlay playsInline className=\"video\" />\r\n          <p>{userName} (You)</p>\r\n        </div>\r\n\r\n        {peers.map(({ peerID, userName }) => (\r\n          <div className=\"video-block\" key={peerID}>\r\n            <video\r\n              playsInline\r\n              autoPlay\r\n              className=\"video\"\r\n              ref={el => {\r\n                if (el) videoRefs.current[peerID] = el;\r\n                else delete videoRefs.current[peerID];\r\n              }}\r\n            />\r\n            <p>{userName}</p>\r\n          </div>\r\n        ))}\r\n      </main>\r\n\r\n      <aside className=\"participants-panel\">\r\n        <h3>Participants ({participants.length + 1})</h3>\r\n        <ul>\r\n          <li key={userName + \"-self\"}>{userName} (You)</li>\r\n          {participants.map((pName) => (\r\n            <li key={pName}>{pName}</li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"controls\">\r\n          <button onClick={toggleMic}>{micOn ? \"Mute\" : \"Unmute\"}</button>\r\n          <button onClick={toggleCam}>{camOn ? \"Video Off\" : \"Video On\"}</button>\r\n          <button onClick={handleScreenShare}>{screenSharing ? \"Stop Sharing\" : \"Share Screen\"}</button>\r\n          <button className=\"end-btn\" onClick={endMeeting}>\r\n            End Meeting\r\n          </button>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}