{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"https://192.168.29.23:5000\";\nconst socket = io(SERVER_URL, {\n  secure: true,\n  reconnection: true,\n  rejectUnauthorized: false\n});\n\n// Video component to correctly assign stream to video element\nconst Video = ({\n  stream,\n  muted\n}) => {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.srcObject = stream;\n    }\n  }, [stream]);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    ref: ref,\n    autoPlay: true,\n    playsInline: true,\n    muted: muted,\n    className: \"video\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = Video;\nconst Room = () => {\n  _s2();\n  const [peers, setPeers] = useState([]);\n  const [peerStreams, setPeerStreams] = useState({}); // <-- New state for streams\n  const [participants, setParticipants] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\");\n  const [micOn, setMicOn] = useState(true);\n  const [camOn, setCamOn] = useState(true);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const streamRef = useRef();\n  const screenTrackRef = useRef();\n  useEffect(() => {\n    const name = prompt(\"Enter your name\");\n    const room = prompt(\"Enter room code\");\n    setUserName(name);\n    setRoomID(room);\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      streamRef.current = stream;\n      if (userVideo.current) userVideo.current.srcObject = stream;\n      socket.emit(\"join-room\", {\n        roomId: room,\n        userName: name\n      });\n      socket.on(\"all-users\", users => {\n        const newPeers = [];\n        users.forEach(user => {\n          if (user.id === socket.id) return;\n          const peer = createPeer(user.id, socket.id, stream);\n          peersRef.current.push({\n            peerID: user.id,\n            peer,\n            userName: user.name\n          });\n          newPeers.push({\n            peerID: user.id,\n            peer,\n            userName: user.name\n          });\n        });\n        setPeers(newPeers);\n        setParticipants(users.map(u => u.name));\n      });\n      socket.on(\"user-joined\", payload => {\n        const peer = addPeer(payload.signal, payload.id, payload.name, stream);\n        peersRef.current.push({\n          peerID: payload.id,\n          peer,\n          userName: payload.name\n        });\n        setPeers(users => [...users, {\n          peerID: payload.id,\n          peer,\n          userName: payload.name\n        }]);\n        setParticipants(list => [...list, payload.name]);\n      });\n      socket.on(\"receiving-returned-signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        if (item && item.peer) {\n          item.peer.signal(payload.signal);\n        } else {\n          console.warn(`Peer not found for id ${payload.id} on receiving-returned-signal`);\n        }\n      });\n      socket.on(\"user-disconnected\", id => {\n        setPeers(users => users.filter(p => p.peerID !== id));\n        peersRef.current = peersRef.current.filter(p => p.peerID !== id);\n        setParticipants(peersRef.current.map(p => p.userName));\n        setPeerStreams(streams => {\n          const updated = {\n            ...streams\n          };\n          delete updated[id];\n          return updated;\n        });\n      });\n    });\n    return () => {\n      socket.disconnect();\n      peersRef.current.forEach(({\n        peer\n      }) => peer.destroy());\n      if (streamRef.current) streamRef.current.getTracks().forEach(t => t.stop());\n    };\n  }, []);\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      setPeerStreams(prev => ({\n        ...prev,\n        [userToSignal]: remoteStream\n      }));\n    });\n    peer.on(\"error\", err => {\n      console.error(\"Peer error (Host createPeer):\", err);\n    });\n    return peer;\n  };\n  const addPeer = (incomingSignal, callerId, name, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"returning-signal\", {\n        signal,\n        callerID: callerId\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      setPeerStreams(prev => ({\n        ...prev,\n        [callerId]: remoteStream\n      }));\n    });\n    peer.on(\"error\", err => {\n      console.error(\"Peer error (Host addPeer):\", err);\n    });\n    if (peer && typeof peer.signal === \"function\" && incomingSignal) {\n      try {\n        peer.signal(incomingSignal);\n      } catch (err) {\n        console.error(\"Error signaling peer (Host):\", err);\n      }\n    }\n    return peer;\n  };\n  const toggleMic = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getAudioTracks().forEach(track => {\n      track.enabled = !micOn;\n    });\n    setMicOn(!micOn);\n  };\n  const toggleCam = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getVideoTracks().forEach(track => {\n      track.enabled = !camOn;\n    });\n    setCamOn(!camOn);\n  };\n  const handleScreenShare = async () => {\n    if (!screenSharing) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true\n        });\n        const screenTrack = screenStream.getVideoTracks()[0];\n        screenTrackRef.current = screenTrack;\n        peersRef.current.forEach(({\n          peer\n        }) => {\n          peer.replaceTrack(streamRef.current.getVideoTracks()[0], screenTrack, streamRef.current);\n        });\n        screenTrack.onended = () => {\n          peersRef.current.forEach(({\n            peer\n          }) => {\n            peer.replaceTrack(screenTrack, streamRef.current.getVideoTracks()[0], streamRef.current);\n          });\n          setScreenSharing(false);\n        };\n        setScreenSharing(true);\n      } catch (err) {\n        console.error(\"Screen share error:\", err);\n      }\n    } else {\n      if (screenTrackRef.current) screenTrackRef.current.stop();\n      setScreenSharing(false);\n    }\n  };\n  const endMeeting = () => {\n    peersRef.current.forEach(({\n      peer\n    }) => peer.destroy());\n    peersRef.current = [];\n    setPeerStreams({});\n    if (streamRef.current) streamRef.current.getTracks().forEach(track => track.stop());\n    socket.disconnect();\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"room-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logo\",\n        children: [\"Ve \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gold\",\n          children: \"Meet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Room: \", roomID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"You: \", userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(Video, {\n          stream: streamRef.current,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), peers.map(({\n        peerID,\n        userName\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [peerStreams[peerID] ? /*#__PURE__*/_jsxDEV(Video, {\n          stream: peerStreams[peerID],\n          muted: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)]\n      }, peerID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"participants-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Participants (\", participants.length + 1, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), participants.map((pName, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: pName\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMic,\n          children: micOn ? \"Mute\" : \"Unmute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleCam,\n          children: camOn ? \"Video Off\" : \"Video On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleScreenShare,\n          children: screenSharing ? \"Stop Sharing\" : \"Share Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"end-btn\",\n          onClick: endMeeting,\n          children: \"End Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s2(Room, \"a119rL66C+r0df/cO2pJ+q7e7lE=\");\n_c2 = Room;\nexport default Room;\nvar _c, _c2;\n$RefreshReg$(_c, \"Video\");\n$RefreshReg$(_c2, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","SERVER_URL","socket","secure","reconnection","rejectUnauthorized","Video","stream","muted","_s","ref","current","srcObject","autoPlay","playsInline","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Room","_s2","peers","setPeers","peerStreams","setPeerStreams","participants","setParticipants","userName","setUserName","roomID","setRoomID","micOn","setMicOn","camOn","setCamOn","screenSharing","setScreenSharing","userVideo","peersRef","streamRef","screenTrackRef","name","prompt","room","navigator","mediaDevices","getUserMedia","video","audio","then","emit","roomId","on","users","newPeers","forEach","user","id","peer","createPeer","push","peerID","map","u","payload","addPeer","signal","list","item","find","p","console","warn","filter","streams","updated","disconnect","destroy","getTracks","t","stop","userToSignal","callerID","initiator","trickle","remoteStream","prev","err","error","incomingSignal","callerId","toggleMic","getAudioTracks","track","enabled","toggleCam","getVideoTracks","handleScreenShare","screenStream","getDisplayMedia","screenTrack","replaceTrack","onended","endMeeting","window","location","reload","children","length","pName","idx","onClick","_c2","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./Room.css\";\r\n\r\nconst SERVER_URL = \"https://192.168.29.23:5000\";\r\n\r\nconst socket = io(SERVER_URL, {\r\n  secure: true,\r\n  reconnection: true,\r\n  rejectUnauthorized: false,\r\n});\r\n\r\n// Video component to correctly assign stream to video element\r\nconst Video = ({ stream, muted }) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      ref.current.srcObject = stream;\r\n    }\r\n  }, [stream]);\r\n\r\n  return <video ref={ref} autoPlay playsInline muted={muted} className=\"video\" />;\r\n};\r\n\r\nconst Room = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [peerStreams, setPeerStreams] = useState({}); // <-- New state for streams\r\n  const [participants, setParticipants] = useState([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [micOn, setMicOn] = useState(true);\r\n  const [camOn, setCamOn] = useState(true);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const streamRef = useRef();\r\n  const screenTrackRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const name = prompt(\"Enter your name\");\r\n    const room = prompt(\"Enter room code\");\r\n    setUserName(name);\r\n    setRoomID(room);\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        streamRef.current = stream;\r\n        if (userVideo.current) userVideo.current.srcObject = stream;\r\n\r\n        socket.emit(\"join-room\", { roomId: room, userName: name });\r\n\r\n        socket.on(\"all-users\", (users) => {\r\n          const newPeers = [];\r\n          users.forEach((user) => {\r\n            if (user.id === socket.id) return;\r\n            const peer = createPeer(user.id, socket.id, stream);\r\n            peersRef.current.push({ peerID: user.id, peer, userName: user.name });\r\n            newPeers.push({ peerID: user.id, peer, userName: user.name });\r\n          });\r\n          setPeers(newPeers);\r\n          setParticipants(users.map((u) => u.name));\r\n        });\r\n\r\n        socket.on(\"user-joined\", (payload) => {\r\n          const peer = addPeer(payload.signal, payload.id, payload.name, stream);\r\n          peersRef.current.push({ peerID: payload.id, peer, userName: payload.name });\r\n          setPeers((users) => [...users, { peerID: payload.id, peer, userName: payload.name }]);\r\n          setParticipants((list) => [...list, payload.name]);\r\n        });\r\n\r\n        socket.on(\"receiving-returned-signal\", (payload) => {\r\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\r\n          if (item && item.peer) {\r\n            item.peer.signal(payload.signal);\r\n          } else {\r\n            console.warn(`Peer not found for id ${payload.id} on receiving-returned-signal`);\r\n          }\r\n        });\r\n\r\n        socket.on(\"user-disconnected\", (id) => {\r\n          setPeers((users) => users.filter((p) => p.peerID !== id));\r\n          peersRef.current = peersRef.current.filter((p) => p.peerID !== id);\r\n          setParticipants(peersRef.current.map((p) => p.userName));\r\n          setPeerStreams((streams) => {\r\n            const updated = { ...streams };\r\n            delete updated[id];\r\n            return updated;\r\n          });\r\n        });\r\n      });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      peersRef.current.forEach(({ peer }) => peer.destroy());\r\n      if (streamRef.current) streamRef.current.getTracks().forEach((t) => t.stop());\r\n    };\r\n  }, []);\r\n\r\n  const createPeer = (userToSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"sending-signal\", { userToSignal, callerID, signal });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      setPeerStreams((prev) => ({ ...prev, [userToSignal]: remoteStream }));\r\n    });\r\n\r\n    peer.on(\"error\", (err) => {\r\n      console.error(\"Peer error (Host createPeer):\", err);\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (incomingSignal, callerId, name, stream) => {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"returning-signal\", { signal, callerID: callerId });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      setPeerStreams((prev) => ({ ...prev, [callerId]: remoteStream }));\r\n    });\r\n\r\n    peer.on(\"error\", (err) => {\r\n      console.error(\"Peer error (Host addPeer):\", err);\r\n    });\r\n\r\n    if (peer && typeof peer.signal === \"function\" && incomingSignal) {\r\n      try {\r\n        peer.signal(incomingSignal);\r\n      } catch (err) {\r\n        console.error(\"Error signaling peer (Host):\", err);\r\n      }\r\n    }\r\n\r\n    return peer;\r\n  };\r\n\r\n  const toggleMic = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getAudioTracks().forEach((track) => {\r\n      track.enabled = !micOn;\r\n    });\r\n    setMicOn(!micOn);\r\n  };\r\n\r\n  const toggleCam = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getVideoTracks().forEach((track) => {\r\n      track.enabled = !camOn;\r\n    });\r\n    setCamOn(!camOn);\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    if (!screenSharing) {\r\n      try {\r\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n        const screenTrack = screenStream.getVideoTracks()[0];\r\n        screenTrackRef.current = screenTrack;\r\n\r\n        peersRef.current.forEach(({ peer }) => {\r\n          peer.replaceTrack(streamRef.current.getVideoTracks()[0], screenTrack, streamRef.current);\r\n        });\r\n\r\n        screenTrack.onended = () => {\r\n          peersRef.current.forEach(({ peer }) => {\r\n            peer.replaceTrack(screenTrack, streamRef.current.getVideoTracks()[0], streamRef.current);\r\n          });\r\n          setScreenSharing(false);\r\n        };\r\n\r\n        setScreenSharing(true);\r\n      } catch (err) {\r\n        console.error(\"Screen share error:\", err);\r\n      }\r\n    } else {\r\n      if (screenTrackRef.current) screenTrackRef.current.stop();\r\n      setScreenSharing(false);\r\n    }\r\n  };\r\n\r\n  const endMeeting = () => {\r\n    peersRef.current.forEach(({ peer }) => peer.destroy());\r\n    peersRef.current = [];\r\n    setPeerStreams({});\r\n    if (streamRef.current) streamRef.current.getTracks().forEach((track) => track.stop());\r\n    socket.disconnect();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <header className=\"room-header\">\r\n        <h2 className=\"logo\">\r\n          Ve <span className=\"gold\">Meet</span>\r\n        </h2>\r\n        <div>\r\n          <span>Room: {roomID}</span>\r\n          <span className=\"username\">You: {userName}</span>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"video-grid\">\r\n        <div className=\"video-block\">\r\n          <Video stream={streamRef.current} muted={true} />\r\n          <p>{userName} (You)</p>\r\n        </div>\r\n        {peers.map(({ peerID, userName }) => (\r\n          <div className=\"video-block\" key={peerID}>\r\n            {peerStreams[peerID] ? (\r\n              <Video stream={peerStreams[peerID]} muted={false} />\r\n            ) : (\r\n              <div className=\"video-placeholder\" />\r\n            )}\r\n            <p>{userName}</p>\r\n          </div>\r\n        ))}\r\n      </main>\r\n\r\n      <aside className=\"participants-panel\">\r\n        <h3>Participants ({participants.length + 1})</h3>\r\n        <ul>\r\n          <li>{userName} (You)</li>\r\n          {participants.map((pName, idx) => (\r\n            <li key={idx}>{pName}</li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"controls\">\r\n          <button onClick={toggleMic}>{micOn ? \"Mute\" : \"Unmute\"}</button>\r\n          <button onClick={toggleCam}>{camOn ? \"Video Off\" : \"Video On\"}</button>\r\n          <button onClick={handleScreenShare}>{screenSharing ? \"Stop Sharing\" : \"Share Screen\"}</button>\r\n          <button className=\"end-btn\" onClick={endMeeting}>\r\n            End Meeting\r\n          </button>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}