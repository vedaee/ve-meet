{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet\\\\client\\\\src\\\\components\\\\GuestRoom.js\",\n  _s = $RefreshSig$();\n// src/components/GuestRoom.js\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./GuestRoom.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"https://localhost:5000\", {\n  secure: true\n});\nconst GuestRoom = () => {\n  _s();\n  const [roomId, setRoomId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [joined, setJoined] = useState(false);\n  const [users, setUsers] = useState([]); // Array of { id, name }\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState([]); // Array of { id, stream, name }\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const [videoEnabled, setVideoEnabled] = useState(true);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const localVideoRef = useRef();\n  const peersRef = useRef({}); // peer connections keyed by socketId\n  const remoteStreamsRef = useRef({}); // store { id, stream, name }\n\n  // On join - get media and join room\n  const handleJoin = () => {\n    if (!roomId.trim() || !name.trim()) {\n      alert(\"Enter both Room Code and Your Name\");\n      return;\n    }\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setLocalStream(stream);\n      if (localVideoRef.current) localVideoRef.current.srcObject = stream;\n      socket.emit(\"join-room\", {\n        roomId,\n        name\n      });\n      setJoined(true);\n      setupSocketListeners(stream);\n    }).catch(e => {\n      alert(\"Could not get camera/mic: \" + e.message);\n    });\n  };\n\n  // Setup socket event handlers\n  const setupSocketListeners = stream => {\n    socket.off(\"all-users\");\n    socket.off(\"user-joined\");\n    socket.off(\"offer\");\n    socket.off(\"answer\");\n    socket.off(\"candidate\");\n    socket.off(\"user-left\");\n    socket.on(\"all-users\", usersList => {\n      setUsers(usersList);\n      // Initiate connections to all users except self\n      usersList.forEach(({\n        id,\n        name: peerName\n      }) => {\n        if (id === socket.id) return;\n        const peer = createPeer(id, socket.id, stream);\n        peersRef.current[id] = {\n          peer,\n          name: peerName\n        };\n      });\n    });\n    socket.on(\"user-joined\", ({\n      id,\n      name: peerName\n    }) => {\n      setUsers(prev => [...prev, {\n        id,\n        name: peerName\n      }]);\n      const peer = createPeer(id, socket.id, stream);\n      peersRef.current[id] = {\n        peer,\n        name: peerName\n      };\n    });\n    socket.on(\"offer\", async ({\n      from,\n      offer\n    }) => {\n      const peer = addPeer(offer, from, stream);\n      peersRef.current[from] = {\n        peer,\n        name: getNameById(from) || \"Guest\"\n      };\n    });\n    socket.on(\"answer\", ({\n      from,\n      answer\n    }) => {\n      const peerObj = peersRef.current[from];\n      if (!peerObj) return;\n      peerObj.peer.setRemoteDescription(new RTCSessionDescription(answer));\n    });\n    socket.on(\"candidate\", ({\n      from,\n      candidate\n    }) => {\n      const peerObj = peersRef.current[from];\n      if (!peerObj) return;\n      peerObj.peer.addIceCandidate(new RTCIceCandidate(candidate));\n    });\n    socket.on(\"user-left\", ({\n      id\n    }) => {\n      if (peersRef.current[id]) {\n        peersRef.current[id].peer.close();\n        delete peersRef.current[id];\n      }\n      setUsers(prev => prev.filter(u => u.id !== id));\n      delete remoteStreamsRef.current[id];\n      updateRemoteStreams();\n    });\n  };\n\n  // Helper to get user name by id from users list\n  const getNameById = id => {\n    const user = users.find(u => u.id === id);\n    return user ? user.name : null;\n  };\n\n  // Create peer connection and send offer (caller)\n  const createPeer = (userToSignal, callerId, stream) => {\n    const peer = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    });\n    peer.onicecandidate = e => {\n      if (e.candidate) {\n        socket.emit(\"candidate\", {\n          to: userToSignal,\n          candidate: e.candidate\n        });\n      }\n    };\n    peer.ontrack = e => {\n      remoteStreamsRef.current[userToSignal] = {\n        id: userToSignal,\n        stream: e.streams[0],\n        name: getNameById(userToSignal) || \"Guest\"\n      };\n      updateRemoteStreams();\n    };\n    stream.getTracks().forEach(track => peer.addTrack(track, stream));\n    peer.createOffer().then(offer => peer.setLocalDescription(offer)).then(() => {\n      socket.emit(\"offer\", {\n        to: userToSignal,\n        offer: peer.localDescription\n      });\n    });\n    return peer;\n  };\n\n  // Add peer connection and send answer (callee)\n  const addPeer = (incomingOffer, callerId, stream) => {\n    const peer = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    });\n    peer.onicecandidate = e => {\n      if (e.candidate) {\n        socket.emit(\"candidate\", {\n          to: callerId,\n          candidate: e.candidate\n        });\n      }\n    };\n    peer.ontrack = e => {\n      remoteStreamsRef.current[callerId] = {\n        id: callerId,\n        stream: e.streams[0],\n        name: getNameById(callerId) || \"Guest\"\n      };\n      updateRemoteStreams();\n    };\n    stream.getTracks().forEach(track => peer.addTrack(track, stream));\n    peer.setRemoteDescription(new RTCSessionDescription(incomingOffer)).then(() => peer.createAnswer()).then(answer => peer.setLocalDescription(answer)).then(() => {\n      socket.emit(\"answer\", {\n        to: callerId,\n        answer: peer.localDescription\n      });\n    });\n    return peer;\n  };\n\n  // Update remoteStreams state from ref\n  const updateRemoteStreams = () => {\n    setRemoteStreams(Object.values(remoteStreamsRef.current));\n  };\n\n  // Controls handlers\n  const toggleAudio = () => {\n    if (!localStream) return;\n    const audioTrack = localStream.getAudioTracks()[0];\n    if (audioTrack) {\n      audioTrack.enabled = !audioTrack.enabled;\n      setAudioEnabled(audioTrack.enabled);\n    }\n  };\n  const toggleVideo = () => {\n    if (!localStream) return;\n    const videoTrack = localStream.getVideoTracks()[0];\n    if (videoTrack) {\n      videoTrack.enabled = !videoTrack.enabled;\n      setVideoEnabled(videoTrack.enabled);\n    }\n  };\n  const handleScreenShare = async () => {\n    if (screenSharing) {\n      stopScreenShare();\n    } else {\n      startScreenShare();\n    }\n  };\n  const startScreenShare = async () => {\n    try {\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      const screenTrack = screenStream.getVideoTracks()[0];\n      const videoTrack = localStream.getVideoTracks()[0];\n\n      // Replace tracks for all peers\n      Object.values(peersRef.current).forEach(({\n        peer\n      }) => {\n        const sender = peer.getSenders().find(s => s.track.kind === \"video\");\n        if (sender) sender.replaceTrack(screenTrack);\n      });\n\n      // Replace local video\n      if (localVideoRef.current) localVideoRef.current.srcObject = screenStream;\n      screenTrack.onended = () => {\n        stopScreenShare();\n      };\n      setScreenSharing(true);\n    } catch (err) {\n      alert(\"Error sharing screen: \" + err.message);\n    }\n  };\n  const stopScreenShare = () => {\n    const videoTrack = localStream.getVideoTracks()[0];\n    Object.values(peersRef.current).forEach(({\n      peer\n    }) => {\n      const sender = peer.getSenders().find(s => s.track.kind === \"video\");\n      if (sender) sender.replaceTrack(videoTrack);\n    });\n    if (localVideoRef.current) localVideoRef.current.srcObject = localStream;\n    setScreenSharing(false);\n  };\n  const handleLeave = () => {\n    // Close all connections\n    Object.values(peersRef.current).forEach(({\n      peer\n    }) => peer.close());\n    peersRef.current = {};\n    remoteStreamsRef.current = {};\n    setRemoteStreams([]);\n    setUsers([]);\n\n    // Stop local media\n    localStream === null || localStream === void 0 ? void 0 : localStream.getTracks().forEach(track => track.stop());\n    setLocalStream(null);\n    socket.emit(\"leave-room\", {\n      roomId\n    });\n    setJoined(false);\n    setRoomId(\"\");\n    setName(\"\");\n  };\n\n  // Render Join form if not joined yet\n  if (!joined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: \"Ve Meet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join a Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Room Code\",\n        value: roomId,\n        onChange: e => setRoomId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Your Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoin,\n        className: \"btn\",\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guestroom-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: \"Ve Meet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), \" | \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"You: \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLeave,\n          className: \"btn leave-btn\",\n          children: \"Leave Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block local\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          muted: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"video-name\",\n          children: [name, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), remoteStreams.map(({\n        id,\n        stream,\n        name: userName\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          autoPlay: true,\n          playsInline: true,\n          ref: video => {\n            if (video) video.srcObject = stream;\n          },\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"video-name\",\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleAudio,\n        className: \"btn control-btn\",\n        children: audioEnabled ? \"Mute\" : \"Unmute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVideo,\n        className: \"btn control-btn\",\n        children: videoEnabled ? \"Stop Video\" : \"Start Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleScreenShare,\n        className: \"btn control-btn\",\n        children: screenSharing ? \"Stop Sharing\" : \"Share Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLeave,\n        className: \"btn control-btn leave-btn\",\n        children: \"Leave Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Participants (\", users.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(({\n          id,\n          name: userName\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [userName, \" \", id === socket.id ? \"(You)\" : \"\"]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(GuestRoom, \"pdD3sNe9rB0A2GafR0cEjFG8XD0=\");\n_c = GuestRoom;\nexport default GuestRoom;\nvar _c;\n$RefreshReg$(_c, \"GuestRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","secure","GuestRoom","_s","roomId","setRoomId","name","setName","joined","setJoined","users","setUsers","localStream","setLocalStream","remoteStreams","setRemoteStreams","audioEnabled","setAudioEnabled","videoEnabled","setVideoEnabled","screenSharing","setScreenSharing","localVideoRef","peersRef","remoteStreamsRef","handleJoin","trim","alert","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","emit","setupSocketListeners","catch","e","message","off","on","usersList","forEach","id","peerName","peer","createPeer","prev","from","offer","addPeer","getNameById","answer","peerObj","setRemoteDescription","RTCSessionDescription","candidate","addIceCandidate","RTCIceCandidate","close","filter","u","updateRemoteStreams","user","find","userToSignal","callerId","RTCPeerConnection","iceServers","urls","onicecandidate","to","ontrack","streams","getTracks","track","addTrack","createOffer","setLocalDescription","localDescription","incomingOffer","createAnswer","Object","values","toggleAudio","audioTrack","getAudioTracks","enabled","toggleVideo","videoTrack","getVideoTracks","handleScreenShare","stopScreenShare","startScreenShare","screenStream","getDisplayMedia","screenTrack","sender","getSenders","s","kind","replaceTrack","onended","err","handleLeave","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","onClick","ref","autoPlay","muted","playsInline","map","userName","length","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet/client/src/components/GuestRoom.js"],"sourcesContent":["// src/components/GuestRoom.js\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"./GuestRoom.css\";\r\n\r\nconst socket = io(\"https://localhost:5000\", { secure: true });\r\n\r\nconst GuestRoom = () => {\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [joined, setJoined] = useState(false);\r\n  const [users, setUsers] = useState([]); // Array of { id, name }\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const [remoteStreams, setRemoteStreams] = useState([]); // Array of { id, stream, name }\r\n  const [audioEnabled, setAudioEnabled] = useState(true);\r\n  const [videoEnabled, setVideoEnabled] = useState(true);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n\r\n  const localVideoRef = useRef();\r\n  const peersRef = useRef({}); // peer connections keyed by socketId\r\n  const remoteStreamsRef = useRef({}); // store { id, stream, name }\r\n\r\n  // On join - get media and join room\r\n  const handleJoin = () => {\r\n    if (!roomId.trim() || !name.trim()) {\r\n      alert(\"Enter both Room Code and Your Name\");\r\n      return;\r\n    }\r\n\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n      setLocalStream(stream);\r\n      if (localVideoRef.current) localVideoRef.current.srcObject = stream;\r\n\r\n      socket.emit(\"join-room\", { roomId, name });\r\n      setJoined(true);\r\n\r\n      setupSocketListeners(stream);\r\n    }).catch((e) => {\r\n      alert(\"Could not get camera/mic: \" + e.message);\r\n    });\r\n  };\r\n\r\n  // Setup socket event handlers\r\n  const setupSocketListeners = (stream) => {\r\n    socket.off(\"all-users\");\r\n    socket.off(\"user-joined\");\r\n    socket.off(\"offer\");\r\n    socket.off(\"answer\");\r\n    socket.off(\"candidate\");\r\n    socket.off(\"user-left\");\r\n\r\n    socket.on(\"all-users\", (usersList) => {\r\n      setUsers(usersList);\r\n      // Initiate connections to all users except self\r\n      usersList.forEach(({ id, name: peerName }) => {\r\n        if (id === socket.id) return;\r\n        const peer = createPeer(id, socket.id, stream);\r\n        peersRef.current[id] = { peer, name: peerName };\r\n      });\r\n    });\r\n\r\n    socket.on(\"user-joined\", ({ id, name: peerName }) => {\r\n      setUsers((prev) => [...prev, { id, name: peerName }]);\r\n      const peer = createPeer(id, socket.id, stream);\r\n      peersRef.current[id] = { peer, name: peerName };\r\n    });\r\n\r\n    socket.on(\"offer\", async ({ from, offer }) => {\r\n      const peer = addPeer(offer, from, stream);\r\n      peersRef.current[from] = { peer, name: getNameById(from) || \"Guest\" };\r\n    });\r\n\r\n    socket.on(\"answer\", ({ from, answer }) => {\r\n      const peerObj = peersRef.current[from];\r\n      if (!peerObj) return;\r\n      peerObj.peer.setRemoteDescription(new RTCSessionDescription(answer));\r\n    });\r\n\r\n    socket.on(\"candidate\", ({ from, candidate }) => {\r\n      const peerObj = peersRef.current[from];\r\n      if (!peerObj) return;\r\n      peerObj.peer.addIceCandidate(new RTCIceCandidate(candidate));\r\n    });\r\n\r\n    socket.on(\"user-left\", ({ id }) => {\r\n      if (peersRef.current[id]) {\r\n        peersRef.current[id].peer.close();\r\n        delete peersRef.current[id];\r\n      }\r\n      setUsers((prev) => prev.filter((u) => u.id !== id));\r\n      delete remoteStreamsRef.current[id];\r\n      updateRemoteStreams();\r\n    });\r\n  };\r\n\r\n  // Helper to get user name by id from users list\r\n  const getNameById = (id) => {\r\n    const user = users.find((u) => u.id === id);\r\n    return user ? user.name : null;\r\n  };\r\n\r\n  // Create peer connection and send offer (caller)\r\n  const createPeer = (userToSignal, callerId, stream) => {\r\n    const peer = new RTCPeerConnection({\r\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\r\n    });\r\n\r\n    peer.onicecandidate = (e) => {\r\n      if (e.candidate) {\r\n        socket.emit(\"candidate\", { to: userToSignal, candidate: e.candidate });\r\n      }\r\n    };\r\n\r\n    peer.ontrack = (e) => {\r\n      remoteStreamsRef.current[userToSignal] = {\r\n        id: userToSignal,\r\n        stream: e.streams[0],\r\n        name: getNameById(userToSignal) || \"Guest\",\r\n      };\r\n      updateRemoteStreams();\r\n    };\r\n\r\n    stream.getTracks().forEach((track) => peer.addTrack(track, stream));\r\n\r\n    peer\r\n      .createOffer()\r\n      .then((offer) => peer.setLocalDescription(offer))\r\n      .then(() => {\r\n        socket.emit(\"offer\", { to: userToSignal, offer: peer.localDescription });\r\n      });\r\n\r\n    return peer;\r\n  };\r\n\r\n  // Add peer connection and send answer (callee)\r\n  const addPeer = (incomingOffer, callerId, stream) => {\r\n    const peer = new RTCPeerConnection({\r\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\r\n    });\r\n\r\n    peer.onicecandidate = (e) => {\r\n      if (e.candidate) {\r\n        socket.emit(\"candidate\", { to: callerId, candidate: e.candidate });\r\n      }\r\n    };\r\n\r\n    peer.ontrack = (e) => {\r\n      remoteStreamsRef.current[callerId] = {\r\n        id: callerId,\r\n        stream: e.streams[0],\r\n        name: getNameById(callerId) || \"Guest\",\r\n      };\r\n      updateRemoteStreams();\r\n    };\r\n\r\n    stream.getTracks().forEach((track) => peer.addTrack(track, stream));\r\n\r\n    peer\r\n      .setRemoteDescription(new RTCSessionDescription(incomingOffer))\r\n      .then(() => peer.createAnswer())\r\n      .then((answer) => peer.setLocalDescription(answer))\r\n      .then(() => {\r\n        socket.emit(\"answer\", { to: callerId, answer: peer.localDescription });\r\n      });\r\n\r\n    return peer;\r\n  };\r\n\r\n  // Update remoteStreams state from ref\r\n  const updateRemoteStreams = () => {\r\n    setRemoteStreams(Object.values(remoteStreamsRef.current));\r\n  };\r\n\r\n  // Controls handlers\r\n  const toggleAudio = () => {\r\n    if (!localStream) return;\r\n    const audioTrack = localStream.getAudioTracks()[0];\r\n    if (audioTrack) {\r\n      audioTrack.enabled = !audioTrack.enabled;\r\n      setAudioEnabled(audioTrack.enabled);\r\n    }\r\n  };\r\n\r\n  const toggleVideo = () => {\r\n    if (!localStream) return;\r\n    const videoTrack = localStream.getVideoTracks()[0];\r\n    if (videoTrack) {\r\n      videoTrack.enabled = !videoTrack.enabled;\r\n      setVideoEnabled(videoTrack.enabled);\r\n    }\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    if (screenSharing) {\r\n      stopScreenShare();\r\n    } else {\r\n      startScreenShare();\r\n    }\r\n  };\r\n\r\n  const startScreenShare = async () => {\r\n    try {\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n      const screenTrack = screenStream.getVideoTracks()[0];\r\n      const videoTrack = localStream.getVideoTracks()[0];\r\n\r\n      // Replace tracks for all peers\r\n      Object.values(peersRef.current).forEach(({ peer }) => {\r\n        const sender = peer.getSenders().find((s) => s.track.kind === \"video\");\r\n        if (sender) sender.replaceTrack(screenTrack);\r\n      });\r\n\r\n      // Replace local video\r\n      if (localVideoRef.current) localVideoRef.current.srcObject = screenStream;\r\n\r\n      screenTrack.onended = () => {\r\n        stopScreenShare();\r\n      };\r\n\r\n      setScreenSharing(true);\r\n    } catch (err) {\r\n      alert(\"Error sharing screen: \" + err.message);\r\n    }\r\n  };\r\n\r\n  const stopScreenShare = () => {\r\n    const videoTrack = localStream.getVideoTracks()[0];\r\n    Object.values(peersRef.current).forEach(({ peer }) => {\r\n      const sender = peer.getSenders().find((s) => s.track.kind === \"video\");\r\n      if (sender) sender.replaceTrack(videoTrack);\r\n    });\r\n    if (localVideoRef.current) localVideoRef.current.srcObject = localStream;\r\n    setScreenSharing(false);\r\n  };\r\n\r\n  const handleLeave = () => {\r\n    // Close all connections\r\n    Object.values(peersRef.current).forEach(({ peer }) => peer.close());\r\n    peersRef.current = {};\r\n    remoteStreamsRef.current = {};\r\n    setRemoteStreams([]);\r\n    setUsers([]);\r\n\r\n    // Stop local media\r\n    localStream?.getTracks().forEach((track) => track.stop());\r\n    setLocalStream(null);\r\n\r\n    socket.emit(\"leave-room\", { roomId });\r\n\r\n    setJoined(false);\r\n    setRoomId(\"\");\r\n    setName(\"\");\r\n  };\r\n\r\n  // Render Join form if not joined yet\r\n  if (!joined) {\r\n    return (\r\n      <div className=\"join-container\">\r\n        <h1 className=\"logo\">Ve Meet</h1>\r\n        <h2>Join a Meeting</h2>\r\n        <input\r\n          placeholder=\"Enter Room Code\"\r\n          value={roomId}\r\n          onChange={(e) => setRoomId(e.target.value)}\r\n        />\r\n        <input\r\n          placeholder=\"Enter Your Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <button onClick={handleJoin} className=\"btn\">\r\n          Join\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"guestroom-container\">\r\n      <header className=\"header\">\r\n        <h1 className=\"logo\">Ve Meet</h1>\r\n        <div>\r\n          <span>Room: {roomId}</span> | <span>You: {name}</span>\r\n          <button onClick={handleLeave} className=\"btn leave-btn\">\r\n            Leave Meeting\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"video-grid\">\r\n        {/* Local Video */}\r\n        <div className=\"video-block local\">\r\n          <video\r\n            ref={localVideoRef}\r\n            autoPlay\r\n            muted\r\n            playsInline\r\n            className=\"video\"\r\n          />\r\n          <p className=\"video-name\">{name} (You)</p>\r\n        </div>\r\n\r\n        {/* Remote Videos */}\r\n        {remoteStreams.map(({ id, stream, name: userName }) => (\r\n          <div className=\"video-block\" key={id}>\r\n            <video\r\n              autoPlay\r\n              playsInline\r\n              ref={(video) => {\r\n                if (video) video.srcObject = stream;\r\n              }}\r\n              className=\"video\"\r\n            />\r\n            <p className=\"video-name\">{userName}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        <button onClick={toggleAudio} className=\"btn control-btn\">\r\n          {audioEnabled ? \"Mute\" : \"Unmute\"}\r\n        </button>\r\n        <button onClick={toggleVideo} className=\"btn control-btn\">\r\n          {videoEnabled ? \"Stop Video\" : \"Start Video\"}\r\n        </button>\r\n        <button onClick={handleScreenShare} className=\"btn control-btn\">\r\n          {screenSharing ? \"Stop Sharing\" : \"Share Screen\"}\r\n        </button>\r\n        <button onClick={handleLeave} className=\"btn control-btn leave-btn\">\r\n          Leave Meeting\r\n        </button>\r\n      </div>\r\n\r\n      <aside className=\"sidebar\">\r\n        <h3>Participants ({users.length})</h3>\r\n        <ul>\r\n          {users.map(({ id, name: userName }) => (\r\n            <li key={id}>\r\n              {userName} {id === socket.id ? \"(You)\" : \"\"}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GuestRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}