{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = \"http://localhost:5000\"; // Change as needed\n\nconst Room = ({\n  isHost,\n  roomCode,\n  userName\n}) => {\n  _s();\n  const [peers, setPeers] = useState({}); // { socketId: { stream, name, audioEnabled, videoEnabled } }\n  const [localStream, setLocalStream] = useState(null);\n  const [cameraDevices, setCameraDevices] = useState([]);\n  const [micDevices, setMicDevices] = useState([]);\n  const [selectedCamera, setSelectedCamera] = useState(\"\");\n  const [selectedMic, setSelectedMic] = useState(\"\");\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const [videoEnabled, setVideoEnabled] = useState(true);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const [joiners, setJoiners] = useState([]); // Array of {id, name}\n\n  const socketRef = useRef();\n  const localVideoRef = useRef();\n  const peersRef = useRef({}); // To keep peer connections per socketId\n\n  // Get media devices list\n  const getMediaDevices = async () => {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const cameras = devices.filter(d => d.kind === \"videoinput\");\n    const mics = devices.filter(d => d.kind === \"audioinput\");\n    setCameraDevices(cameras);\n    setMicDevices(mics);\n    if (!selectedCamera && cameras.length > 0) setSelectedCamera(cameras[0].deviceId);\n    if (!selectedMic && mics.length > 0) setSelectedMic(mics[0].deviceId);\n  };\n\n  // Get user media with selected devices\n  const getUserMediaStream = useCallback(async () => {\n    if (!selectedCamera || !selectedMic) return;\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          deviceId: selectedCamera ? {\n            exact: selectedCamera\n          } : undefined\n        },\n        audio: {\n          deviceId: selectedMic ? {\n            exact: selectedMic\n          } : undefined\n        }\n      });\n      setLocalStream(stream);\n      if (localVideoRef.current) localVideoRef.current.srcObject = stream;\n      // Update peers with new stream tracks\n      Object.values(peersRef.current).forEach(({\n        peerConnection\n      }) => {\n        const senders = peerConnection.getSenders();\n        stream.getTracks().forEach(track => {\n          const sender = senders.find(s => s.track.kind === track.kind);\n          if (sender) sender.replaceTrack(track);\n        });\n      });\n    } catch (err) {\n      console.error(\"Error getting user media:\", err);\n    }\n  }, [selectedCamera, selectedMic]);\n\n  // Toggle Audio\n  const toggleAudio = () => {\n    if (!localStream) return;\n    localStream.getAudioTracks().forEach(track => track.enabled = !audioEnabled);\n    setAudioEnabled(!audioEnabled);\n  };\n\n  // Toggle Video\n  const toggleVideo = () => {\n    if (!localStream) return;\n    localStream.getVideoTracks().forEach(track => track.enabled = !videoEnabled);\n    setVideoEnabled(!videoEnabled);\n  };\n\n  // Screen sharing toggle\n  const toggleScreenSharing = async () => {\n    if (!screenSharing) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true\n        });\n        // Replace video tracks in all peer connections\n        Object.values(peersRef.current).forEach(({\n          peerConnection\n        }) => {\n          const sender = peerConnection.getSenders().find(s => s.track.kind === \"video\");\n          if (sender) sender.replaceTrack(screenStream.getVideoTracks()[0]);\n        });\n        // Replace local video\n        if (localVideoRef.current) localVideoRef.current.srcObject = screenStream;\n\n        // When screen sharing stops, revert to camera stream\n        screenStream.getVideoTracks()[0].onended = () => {\n          if (localStream) {\n            Object.values(peersRef.current).forEach(({\n              peerConnection\n            }) => {\n              const sender = peerConnection.getSenders().find(s => s.track.kind === \"video\");\n              if (sender) sender.replaceTrack(localStream.getVideoTracks()[0]);\n            });\n            if (localVideoRef.current) localVideoRef.current.srcObject = localStream;\n            setScreenSharing(false);\n          }\n        };\n        setScreenSharing(true);\n      } catch (err) {\n        console.error(\"Screen sharing error:\", err);\n      }\n    } else {\n      // Stop screen sharing manually\n      if (localStream) {\n        Object.values(peersRef.current).forEach(({\n          peerConnection\n        }) => {\n          const sender = peerConnection.getSenders().find(s => s.track.kind === \"video\");\n          if (sender) sender.replaceTrack(localStream.getVideoTracks()[0]);\n        });\n        if (localVideoRef.current) localVideoRef.current.srcObject = localStream;\n        setScreenSharing(false);\n      }\n    }\n  };\n\n  // Cleanup on end meeting\n  const endMeeting = () => {\n    Object.values(peersRef.current).forEach(({\n      peerConnection\n    }) => peerConnection.close());\n    peersRef.current = {};\n    setPeers({});\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n      setLocalStream(null);\n    }\n    if (socketRef.current) {\n      socketRef.current.emit(\"leave-room\", {\n        roomCode,\n        userName\n      });\n      socketRef.current.disconnect();\n    }\n    window.location.reload(); // or redirect as needed\n  };\n\n  // Initialize socket and peer connections\n  useEffect(() => {\n    socketRef.current = io(SOCKET_SERVER_URL);\n\n    // Join room event\n    socketRef.current.emit(\"join-room\", {\n      roomCode,\n      userName,\n      isHost\n    });\n\n    // Receive existing users in room\n    socketRef.current.on(\"all-users\", users => {\n      // users = [{ socketId, name }]\n      setJoiners(users.filter(u => u.socketId !== socketRef.current.id));\n      // Initiate connections with each user\n      users.forEach(user => {\n        if (user.socketId === socketRef.current.id) return;\n        createPeerConnection(user.socketId, true);\n      });\n    });\n\n    // New user joined\n    socketRef.current.on(\"user-joined\", user => {\n      setJoiners(prev => [...prev, user]);\n      createPeerConnection(user.socketId, false);\n    });\n\n    // Receive offer\n    socketRef.current.on(\"offer\", async ({\n      from,\n      sdp\n    }) => {\n      if (peersRef.current[from]) return; // Already have peer connection\n\n      const peerConnection = new RTCPeerConnection({\n        iceServers: [{\n          urls: \"stun:stun.l.google.com:19302\"\n        }]\n      });\n      addStreamTracks(peerConnection);\n      peersRef.current[from] = {\n        peerConnection,\n        name: \"\"\n      };\n      peerConnection.onicecandidate = event => {\n        if (event.candidate) {\n          socketRef.current.emit(\"ice-candidate\", {\n            to: from,\n            candidate: event.candidate\n          });\n        }\n      };\n      peerConnection.ontrack = event => {\n        setPeers(prev => {\n          const newPeers = {\n            ...prev\n          };\n          newPeers[from] = {\n            ...(newPeers[from] || {}),\n            stream: event.streams[0]\n          };\n          return newPeers;\n        });\n      };\n      await peerConnection.setRemoteDescription(new RTCSessionDescription(sdp));\n      const answer = await peerConnection.createAnswer();\n      await peerConnection.setLocalDescription(answer);\n      socketRef.current.emit(\"answer\", {\n        to: from,\n        sdp: peerConnection.localDescription\n      });\n    });\n\n    // Receive answer\n    socketRef.current.on(\"answer\", async ({\n      from,\n      sdp\n    }) => {\n      var _peersRef$current$fro;\n      const pc = (_peersRef$current$fro = peersRef.current[from]) === null || _peersRef$current$fro === void 0 ? void 0 : _peersRef$current$fro.peerConnection;\n      if (!pc) return;\n      await pc.setRemoteDescription(new RTCSessionDescription(sdp));\n    });\n\n    // Receive ICE candidate\n    socketRef.current.on(\"ice-candidate\", ({\n      from,\n      candidate\n    }) => {\n      var _peersRef$current$fro2;\n      const pc = (_peersRef$current$fro2 = peersRef.current[from]) === null || _peersRef$current$fro2 === void 0 ? void 0 : _peersRef$current$fro2.peerConnection;\n      if (!pc) return;\n      pc.addIceCandidate(new RTCIceCandidate(candidate));\n    });\n\n    // User left\n    socketRef.current.on(\"user-left\", socketId => {\n      const newPeers = {\n        ...peersRef.current\n      };\n      if (newPeers[socketId]) {\n        newPeers[socketId].peerConnection.close();\n        delete newPeers[socketId];\n      }\n      peersRef.current = newPeers;\n      setPeers(prev => {\n        const updated = {\n          ...prev\n        };\n        delete updated[socketId];\n        return updated;\n      });\n      setJoiners(prev => prev.filter(j => j.socketId !== socketId));\n    });\n    getMediaDevices();\n    return () => {\n      endMeeting();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Update user media when device selections change\n  useEffect(() => {\n    getUserMediaStream();\n  }, [getUserMediaStream]);\n\n  // Add tracks from local stream to peer connection\n  const addStreamTracks = peerConnection => {\n    if (!localStream) return;\n    localStream.getTracks().forEach(track => {\n      peerConnection.addTrack(track, localStream);\n    });\n  };\n\n  // Create peer connection and start offer if initiator\n  const createPeerConnection = async (socketId, initiator) => {\n    if (peersRef.current[socketId]) return; // Already exists\n\n    const peerConnection = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    });\n    addStreamTracks(peerConnection);\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        socketRef.current.emit(\"ice-candidate\", {\n          to: socketId,\n          candidate: event.candidate\n        });\n      }\n    };\n    peerConnection.ontrack = event => {\n      setPeers(prev => {\n        const newPeers = {\n          ...prev\n        };\n        newPeers[socketId] = {\n          ...(newPeers[socketId] || {}),\n          stream: event.streams[0]\n        };\n        return newPeers;\n      });\n    };\n    peersRef.current[socketId] = {\n      peerConnection\n    };\n    if (initiator) {\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      socketRef.current.emit(\"offer\", {\n        to: socketId,\n        sdp: peerConnection.localDescription\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\",\n      background: \"#2d2d2d\",\n      color: \"white\",\n      padding: 16,\n      gap: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexBasis: \"300px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 12,\n        background: \"#3b3b3b\",\n        padding: 16,\n        borderRadius: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Room Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"1.5rem\",\n            fontWeight: \"bold\",\n            background: \"#000\",\n            padding: \"8px 12px\",\n            borderRadius: 4,\n            userSelect: \"all\"\n          },\n          children: roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: localVideoRef,\n        autoPlay: true,\n        muted: true,\n        playsInline: true,\n        style: {\n          width: \"100%\",\n          borderRadius: 8,\n          backgroundColor: \"#000\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Camera:\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCamera,\n            onChange: e => setSelectedCamera(e.target.value),\n            style: {\n              width: \"100%\"\n            },\n            children: cameraDevices.map(cam => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cam.deviceId,\n              children: cam.label || `Camera ${cam.deviceId}`\n            }, cam.deviceId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Microphone:\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedMic,\n            onChange: e => setSelectedMic(e.target.value),\n            style: {\n              width: \"100%\"\n            },\n            children: micDevices.map(mic => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: mic.deviceId,\n              children: mic.label || `Microphone ${mic.deviceId}`\n            }, mic.deviceId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: 8,\n          marginTop: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleAudio,\n          style: buttonStyle,\n          children: audioEnabled ? \"Mute\" : \"Unmute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleVideo,\n          style: buttonStyle,\n          children: videoEnabled ? \"Stop Video\" : \"Start Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleScreenSharing,\n          style: buttonStyle,\n          children: screenSharing ? \"Stop Sharing\" : \"Share Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: endMeeting,\n          style: {\n            ...buttonStyle,\n            backgroundColor: \"#e63946\"\n          },\n          children: \"End Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1,\n        background: \"#202020\",\n        borderRadius: 8,\n        padding: 16,\n        overflowY: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Participants (\", joiners.length + 1, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 16,\n          fontWeight: \"bold\"\n        },\n        children: [\"Host: \", userName, \" \", isHost && \"(You)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(200px, 1fr))\",\n          gap: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: videoTileStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: localVideoRef,\n            autoPlay: true,\n            muted: true,\n            playsInline: true,\n            style: videoStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: nameTagStyle,\n            children: [userName, \" (You)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), Object.entries(peers).map(([socketId, {\n          stream\n        }]) => {\n          var _joiners$find;\n          return /*#__PURE__*/_jsxDEV(PeerVideo, {\n            stream: stream,\n            name: ((_joiners$find = joiners.find(j => j.socketId === socketId)) === null || _joiners$find === void 0 ? void 0 : _joiners$find.name) || \"Guest\"\n          }, socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"fO2zQnjh8Xf4L9nUVEN+vH69Xtc=\");\n_c = Room;\nconst PeerVideo = ({\n  stream,\n  name\n}) => {\n  _s2();\n  const videoRef = useRef();\n  useEffect(() => {\n    if (videoRef.current) videoRef.current.srcObject = stream;\n  }, [stream]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: videoTileStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true,\n      style: videoStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: nameTagStyle,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 5\n  }, this);\n};\n_s2(PeerVideo, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c2 = PeerVideo;\nconst buttonStyle = {\n  flexGrow: 1,\n  padding: \"8px 12px\",\n  backgroundColor: \"#1a73e8\",\n  border: \"none\",\n  borderRadius: 4,\n  color: \"white\",\n  fontWeight: \"bold\",\n  cursor: \"pointer\"\n};\nconst videoTileStyle = {\n  position: \"relative\",\n  backgroundColor: \"#000\",\n  borderRadius: 8,\n  overflow: \"hidden\",\n  boxShadow: \"0 0 8px rgba(0,0,0,0.5)\"\n};\nconst videoStyle = {\n  width: \"100%\",\n  height: \"auto\",\n  display: \"block\"\n};\nconst nameTagStyle = {\n  position: \"absolute\",\n  bottom: 0,\n  left: 0,\n  right: 0,\n  backgroundColor: \"rgba(0,0,0,0.6)\",\n  color: \"white\",\n  padding: \"4px 8px\",\n  fontSize: \"0.9rem\",\n  fontWeight: \"bold\",\n  textAlign: \"center\",\n  userSelect: \"none\"\n};\nexport default Room;\nvar _c, _c2;\n$RefreshReg$(_c, \"Room\");\n$RefreshReg$(_c2, \"PeerVideo\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","io","jsxDEV","_jsxDEV","SOCKET_SERVER_URL","Room","isHost","roomCode","userName","_s","peers","setPeers","localStream","setLocalStream","cameraDevices","setCameraDevices","micDevices","setMicDevices","selectedCamera","setSelectedCamera","selectedMic","setSelectedMic","audioEnabled","setAudioEnabled","videoEnabled","setVideoEnabled","screenSharing","setScreenSharing","joiners","setJoiners","socketRef","localVideoRef","peersRef","getMediaDevices","devices","navigator","mediaDevices","enumerateDevices","cameras","filter","d","kind","mics","length","deviceId","getUserMediaStream","stream","getUserMedia","video","exact","undefined","audio","current","srcObject","Object","values","forEach","peerConnection","senders","getSenders","getTracks","track","sender","find","s","replaceTrack","err","console","error","toggleAudio","getAudioTracks","enabled","toggleVideo","getVideoTracks","toggleScreenSharing","screenStream","getDisplayMedia","onended","endMeeting","close","stop","emit","disconnect","window","location","reload","on","users","u","socketId","id","user","createPeerConnection","prev","from","sdp","RTCPeerConnection","iceServers","urls","addStreamTracks","name","onicecandidate","event","candidate","to","ontrack","newPeers","streams","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","localDescription","_peersRef$current$fro","pc","_peersRef$current$fro2","addIceCandidate","RTCIceCandidate","updated","j","addTrack","initiator","offer","createOffer","style","display","height","background","color","padding","gap","children","flexBasis","flexDirection","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","userSelect","ref","autoPlay","muted","playsInline","width","backgroundColor","value","onChange","e","target","map","cam","label","mic","marginTop","onClick","buttonStyle","flexGrow","overflowY","marginBottom","gridTemplateColumns","videoTileStyle","videoStyle","nameTagStyle","entries","_joiners$find","PeerVideo","_c","_s2","videoRef","_c2","border","cursor","position","overflow","boxShadow","bottom","left","right","textAlign","$RefreshReg$"],"sources":["C:/projects/Ve Meet/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst SOCKET_SERVER_URL = \"http://localhost:5000\"; // Change as needed\r\n\r\nconst Room = ({ isHost, roomCode, userName }) => {\r\n  const [peers, setPeers] = useState({}); // { socketId: { stream, name, audioEnabled, videoEnabled } }\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const [cameraDevices, setCameraDevices] = useState([]);\r\n  const [micDevices, setMicDevices] = useState([]);\r\n  const [selectedCamera, setSelectedCamera] = useState(\"\");\r\n  const [selectedMic, setSelectedMic] = useState(\"\");\r\n  const [audioEnabled, setAudioEnabled] = useState(true);\r\n  const [videoEnabled, setVideoEnabled] = useState(true);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n  const [joiners, setJoiners] = useState([]); // Array of {id, name}\r\n\r\n  const socketRef = useRef();\r\n  const localVideoRef = useRef();\r\n  const peersRef = useRef({}); // To keep peer connections per socketId\r\n\r\n  // Get media devices list\r\n  const getMediaDevices = async () => {\r\n    const devices = await navigator.mediaDevices.enumerateDevices();\r\n    const cameras = devices.filter((d) => d.kind === \"videoinput\");\r\n    const mics = devices.filter((d) => d.kind === \"audioinput\");\r\n    setCameraDevices(cameras);\r\n    setMicDevices(mics);\r\n\r\n    if (!selectedCamera && cameras.length > 0) setSelectedCamera(cameras[0].deviceId);\r\n    if (!selectedMic && mics.length > 0) setSelectedMic(mics[0].deviceId);\r\n  };\r\n\r\n  // Get user media with selected devices\r\n  const getUserMediaStream = useCallback(async () => {\r\n    if (!selectedCamera || !selectedMic) return;\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: { deviceId: selectedCamera ? { exact: selectedCamera } : undefined },\r\n        audio: { deviceId: selectedMic ? { exact: selectedMic } : undefined },\r\n      });\r\n      setLocalStream(stream);\r\n      if (localVideoRef.current) localVideoRef.current.srcObject = stream;\r\n      // Update peers with new stream tracks\r\n      Object.values(peersRef.current).forEach(({ peerConnection }) => {\r\n        const senders = peerConnection.getSenders();\r\n        stream.getTracks().forEach((track) => {\r\n          const sender = senders.find((s) => s.track.kind === track.kind);\r\n          if (sender) sender.replaceTrack(track);\r\n        });\r\n      });\r\n    } catch (err) {\r\n      console.error(\"Error getting user media:\", err);\r\n    }\r\n  }, [selectedCamera, selectedMic]);\r\n\r\n  // Toggle Audio\r\n  const toggleAudio = () => {\r\n    if (!localStream) return;\r\n    localStream.getAudioTracks().forEach((track) => (track.enabled = !audioEnabled));\r\n    setAudioEnabled(!audioEnabled);\r\n  };\r\n\r\n  // Toggle Video\r\n  const toggleVideo = () => {\r\n    if (!localStream) return;\r\n    localStream.getVideoTracks().forEach((track) => (track.enabled = !videoEnabled));\r\n    setVideoEnabled(!videoEnabled);\r\n  };\r\n\r\n  // Screen sharing toggle\r\n  const toggleScreenSharing = async () => {\r\n    if (!screenSharing) {\r\n      try {\r\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n        // Replace video tracks in all peer connections\r\n        Object.values(peersRef.current).forEach(({ peerConnection }) => {\r\n          const sender = peerConnection.getSenders().find((s) => s.track.kind === \"video\");\r\n          if (sender) sender.replaceTrack(screenStream.getVideoTracks()[0]);\r\n        });\r\n        // Replace local video\r\n        if (localVideoRef.current) localVideoRef.current.srcObject = screenStream;\r\n\r\n        // When screen sharing stops, revert to camera stream\r\n        screenStream.getVideoTracks()[0].onended = () => {\r\n          if (localStream) {\r\n            Object.values(peersRef.current).forEach(({ peerConnection }) => {\r\n              const sender = peerConnection.getSenders().find((s) => s.track.kind === \"video\");\r\n              if (sender) sender.replaceTrack(localStream.getVideoTracks()[0]);\r\n            });\r\n            if (localVideoRef.current) localVideoRef.current.srcObject = localStream;\r\n            setScreenSharing(false);\r\n          }\r\n        };\r\n\r\n        setScreenSharing(true);\r\n      } catch (err) {\r\n        console.error(\"Screen sharing error:\", err);\r\n      }\r\n    } else {\r\n      // Stop screen sharing manually\r\n      if (localStream) {\r\n        Object.values(peersRef.current).forEach(({ peerConnection }) => {\r\n          const sender = peerConnection.getSenders().find((s) => s.track.kind === \"video\");\r\n          if (sender) sender.replaceTrack(localStream.getVideoTracks()[0]);\r\n        });\r\n        if (localVideoRef.current) localVideoRef.current.srcObject = localStream;\r\n        setScreenSharing(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Cleanup on end meeting\r\n  const endMeeting = () => {\r\n    Object.values(peersRef.current).forEach(({ peerConnection }) => peerConnection.close());\r\n    peersRef.current = {};\r\n    setPeers({});\r\n    if (localStream) {\r\n      localStream.getTracks().forEach((track) => track.stop());\r\n      setLocalStream(null);\r\n    }\r\n    if (socketRef.current) {\r\n      socketRef.current.emit(\"leave-room\", { roomCode, userName });\r\n      socketRef.current.disconnect();\r\n    }\r\n    window.location.reload(); // or redirect as needed\r\n  };\r\n\r\n  // Initialize socket and peer connections\r\n  useEffect(() => {\r\n    socketRef.current = io(SOCKET_SERVER_URL);\r\n\r\n    // Join room event\r\n    socketRef.current.emit(\"join-room\", { roomCode, userName, isHost });\r\n\r\n    // Receive existing users in room\r\n    socketRef.current.on(\"all-users\", (users) => {\r\n      // users = [{ socketId, name }]\r\n      setJoiners(users.filter((u) => u.socketId !== socketRef.current.id));\r\n      // Initiate connections with each user\r\n      users.forEach((user) => {\r\n        if (user.socketId === socketRef.current.id) return;\r\n        createPeerConnection(user.socketId, true);\r\n      });\r\n    });\r\n\r\n    // New user joined\r\n    socketRef.current.on(\"user-joined\", (user) => {\r\n      setJoiners((prev) => [...prev, user]);\r\n      createPeerConnection(user.socketId, false);\r\n    });\r\n\r\n    // Receive offer\r\n    socketRef.current.on(\"offer\", async ({ from, sdp }) => {\r\n      if (peersRef.current[from]) return; // Already have peer connection\r\n\r\n      const peerConnection = new RTCPeerConnection({\r\n        iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\r\n      });\r\n\r\n      addStreamTracks(peerConnection);\r\n      peersRef.current[from] = { peerConnection, name: \"\" };\r\n\r\n      peerConnection.onicecandidate = (event) => {\r\n        if (event.candidate) {\r\n          socketRef.current.emit(\"ice-candidate\", { to: from, candidate: event.candidate });\r\n        }\r\n      };\r\n\r\n      peerConnection.ontrack = (event) => {\r\n        setPeers((prev) => {\r\n          const newPeers = { ...prev };\r\n          newPeers[from] = { ...(newPeers[from] || {}), stream: event.streams[0] };\r\n          return newPeers;\r\n        });\r\n      };\r\n\r\n      await peerConnection.setRemoteDescription(new RTCSessionDescription(sdp));\r\n      const answer = await peerConnection.createAnswer();\r\n      await peerConnection.setLocalDescription(answer);\r\n\r\n      socketRef.current.emit(\"answer\", { to: from, sdp: peerConnection.localDescription });\r\n    });\r\n\r\n    // Receive answer\r\n    socketRef.current.on(\"answer\", async ({ from, sdp }) => {\r\n      const pc = peersRef.current[from]?.peerConnection;\r\n      if (!pc) return;\r\n      await pc.setRemoteDescription(new RTCSessionDescription(sdp));\r\n    });\r\n\r\n    // Receive ICE candidate\r\n    socketRef.current.on(\"ice-candidate\", ({ from, candidate }) => {\r\n      const pc = peersRef.current[from]?.peerConnection;\r\n      if (!pc) return;\r\n      pc.addIceCandidate(new RTCIceCandidate(candidate));\r\n    });\r\n\r\n    // User left\r\n    socketRef.current.on(\"user-left\", (socketId) => {\r\n      const newPeers = { ...peersRef.current };\r\n      if (newPeers[socketId]) {\r\n        newPeers[socketId].peerConnection.close();\r\n        delete newPeers[socketId];\r\n      }\r\n      peersRef.current = newPeers;\r\n      setPeers((prev) => {\r\n        const updated = { ...prev };\r\n        delete updated[socketId];\r\n        return updated;\r\n      });\r\n      setJoiners((prev) => prev.filter((j) => j.socketId !== socketId));\r\n    });\r\n\r\n    getMediaDevices();\r\n\r\n    return () => {\r\n      endMeeting();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Update user media when device selections change\r\n  useEffect(() => {\r\n    getUserMediaStream();\r\n  }, [getUserMediaStream]);\r\n\r\n  // Add tracks from local stream to peer connection\r\n  const addStreamTracks = (peerConnection) => {\r\n    if (!localStream) return;\r\n    localStream.getTracks().forEach((track) => {\r\n      peerConnection.addTrack(track, localStream);\r\n    });\r\n  };\r\n\r\n  // Create peer connection and start offer if initiator\r\n  const createPeerConnection = async (socketId, initiator) => {\r\n    if (peersRef.current[socketId]) return; // Already exists\r\n\r\n    const peerConnection = new RTCPeerConnection({\r\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\r\n    });\r\n\r\n    addStreamTracks(peerConnection);\r\n\r\n    peerConnection.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        socketRef.current.emit(\"ice-candidate\", { to: socketId, candidate: event.candidate });\r\n      }\r\n    };\r\n\r\n    peerConnection.ontrack = (event) => {\r\n      setPeers((prev) => {\r\n        const newPeers = { ...prev };\r\n        newPeers[socketId] = { ...(newPeers[socketId] || {}), stream: event.streams[0] };\r\n        return newPeers;\r\n      });\r\n    };\r\n\r\n    peersRef.current[socketId] = { peerConnection };\r\n\r\n    if (initiator) {\r\n      const offer = await peerConnection.createOffer();\r\n      await peerConnection.setLocalDescription(offer);\r\n      socketRef.current.emit(\"offer\", { to: socketId, sdp: peerConnection.localDescription });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", height: \"100vh\", background: \"#2d2d2d\", color: \"white\", padding: 16, gap: 16 }}>\r\n      {/* Left panel: Local video and controls */}\r\n      <div style={{ flexBasis: \"300px\", display: \"flex\", flexDirection: \"column\", gap: 12, background: \"#3b3b3b\", padding: 16, borderRadius: 8 }}>\r\n        <div>\r\n          <h2>Room Code</h2>\r\n          <div style={{ fontSize: \"1.5rem\", fontWeight: \"bold\", background: \"#000\", padding: \"8px 12px\", borderRadius: 4, userSelect: \"all\" }}>\r\n            {roomCode}\r\n          </div>\r\n        </div>\r\n\r\n        <video\r\n          ref={localVideoRef}\r\n          autoPlay\r\n          muted\r\n          playsInline\r\n          style={{ width: \"100%\", borderRadius: 8, backgroundColor: \"#000\" }}\r\n        />\r\n\r\n        <div>\r\n          <label>\r\n            Camera:{\" \"}\r\n            <select value={selectedCamera} onChange={(e) => setSelectedCamera(e.target.value)} style={{ width: \"100%\" }}>\r\n              {cameraDevices.map((cam) => (\r\n                <option key={cam.deviceId} value={cam.deviceId}>\r\n                  {cam.label || `Camera ${cam.deviceId}`}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            Microphone:{\" \"}\r\n            <select value={selectedMic} onChange={(e) => setSelectedMic(e.target.value)} style={{ width: \"100%\" }}>\r\n              {micDevices.map((mic) => (\r\n                <option key={mic.deviceId} value={mic.deviceId}>\r\n                  {mic.label || `Microphone ${mic.deviceId}`}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n        </div>\r\n\r\n        <div style={{ display: \"flex\", gap: 8, marginTop: 12 }}>\r\n          <button onClick={toggleAudio} style={buttonStyle}>\r\n            {audioEnabled ? \"Mute\" : \"Unmute\"}\r\n          </button>\r\n          <button onClick={toggleVideo} style={buttonStyle}>\r\n            {videoEnabled ? \"Stop Video\" : \"Start Video\"}\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{ marginTop: 8 }}>\r\n          <button onClick={toggleScreenSharing} style={buttonStyle}>\r\n            {screenSharing ? \"Stop Sharing\" : \"Share Screen\"}\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{ marginTop: 8 }}>\r\n          <button onClick={endMeeting} style={{ ...buttonStyle, backgroundColor: \"#e63946\" }}>\r\n            End Meeting\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right panel: Peers and joiners list */}\r\n      <div style={{ flexGrow: 1, background: \"#202020\", borderRadius: 8, padding: 16, overflowY: \"auto\" }}>\r\n        <h3>Participants ({joiners.length + 1})</h3>\r\n        <div style={{ marginBottom: 16, fontWeight: \"bold\" }}>\r\n          Host: {userName} {isHost && \"(You)\"}\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"repeat(auto-fill, minmax(200px, 1fr))\",\r\n            gap: 12,\r\n          }}\r\n        >\r\n          {/* Local video tile */}\r\n          <div style={videoTileStyle}>\r\n            <video ref={localVideoRef} autoPlay muted playsInline style={videoStyle} />\r\n            <div style={nameTagStyle}>{userName} (You)</div>\r\n          </div>\r\n\r\n          {/* Remote peers */}\r\n          {Object.entries(peers).map(([socketId, { stream }]) => (\r\n            <PeerVideo key={socketId} stream={stream} name={joiners.find((j) => j.socketId === socketId)?.name || \"Guest\"} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PeerVideo = ({ stream, name }) => {\r\n  const videoRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (videoRef.current) videoRef.current.srcObject = stream;\r\n  }, [stream]);\r\n\r\n  return (\r\n    <div style={videoTileStyle}>\r\n      <video ref={videoRef} autoPlay playsInline style={videoStyle} />\r\n      <div style={nameTagStyle}>{name}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst buttonStyle = {\r\n  flexGrow: 1,\r\n  padding: \"8px 12px\",\r\n  backgroundColor: \"#1a73e8\",\r\n  border: \"none\",\r\n  borderRadius: 4,\r\n  color: \"white\",\r\n  fontWeight: \"bold\",\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst videoTileStyle = {\r\n  position: \"relative\",\r\n  backgroundColor: \"#000\",\r\n  borderRadius: 8,\r\n  overflow: \"hidden\",\r\n  boxShadow: \"0 0 8px rgba(0,0,0,0.5)\",\r\n};\r\n\r\nconst videoStyle = {\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  display: \"block\",\r\n};\r\n\r\nconst nameTagStyle = {\r\n  position: \"absolute\",\r\n  bottom: 0,\r\n  left: 0,\r\n  right: 0,\r\n  backgroundColor: \"rgba(0,0,0,0.6)\",\r\n  color: \"white\",\r\n  padding: \"4px 8px\",\r\n  fontSize: \"0.9rem\",\r\n  fontWeight: \"bold\",\r\n  textAlign: \"center\",\r\n  userSelect: \"none\",\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}