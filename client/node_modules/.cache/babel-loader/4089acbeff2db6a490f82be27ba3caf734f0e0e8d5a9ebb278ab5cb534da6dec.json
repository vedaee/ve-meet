{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport './Room.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('https://localhost:5000', {\n  secure: true\n});\nconst Room = () => {\n  _s();\n  const [roomId, setRoomId] = useState('');\n  const [name, setName] = useState('');\n  const [joined, setJoined] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState([]);\n  const [selectedCam, setSelectedCam] = useState('');\n  const [cameras, setCameras] = useState([]);\n  const localVideoRef = useRef();\n  const peersRef = useRef({});\n  const remoteStreamsRef = useRef({});\n  const screenSharing = useRef(false);\n  useEffect(() => {\n    if (!joined) return;\n\n    // List cameras once when joined\n    navigator.mediaDevices.enumerateDevices().then(devices => {\n      const cams = devices.filter(d => d.kind === 'videoinput');\n      setCameras(cams);\n      if (!selectedCam && cams.length) setSelectedCam(cams[0].deviceId);\n    });\n  }, [joined]);\n  useEffect(() => {\n    if (!joined || !selectedCam) return;\n\n    // Get user media with selected camera\n    const constraints = {\n      audio: true,\n      video: {\n        deviceId: {\n          exact: selectedCam\n        }\n      }\n    };\n    let stream;\n    navigator.mediaDevices.getUserMedia(constraints).then(gotStream => {\n      stream = gotStream;\n      setLocalStream(stream);\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n      }\n\n      // Join room with name and roomId\n      socket.emit('join-room', {\n        roomId,\n        name\n      });\n\n      // Set up socket listeners once:\n      setupSocketListeners(stream);\n    }).catch(err => {\n      console.error('Error accessing media devices:', err);\n      alert('Error accessing camera or microphone. Please check permissions.');\n    });\n\n    // Cleanup on unmount or camera change\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n      // Close all peer connections\n      Object.values(peersRef.current).forEach(peer => peer.close());\n      peersRef.current = {};\n      remoteStreamsRef.current = {};\n      setRemoteStreams([]);\n      setUsers([]);\n      socket.offAny(); // Remove all listeners attached to socket\n    };\n  }, [joined, selectedCam]);\n\n  // Setup socket event handlers\n  const setupSocketListeners = stream => {\n    // Avoid attaching multiple listeners\n    socket.off('user-list');\n    socket.off('user-joined');\n    socket.off('offer');\n    socket.off('answer');\n    socket.off('candidate');\n    socket.off('user-left');\n    socket.on('user-list', usersArray => {\n      setUsers(usersArray);\n    });\n    socket.on('user-joined', ({\n      id,\n      name: newUserName\n    }) => {\n      console.log('User joined:', id);\n\n      // Create peer connection for new user\n      const peer = createPeerConnection(id, stream);\n      peersRef.current[id] = peer;\n\n      // Add local tracks to peer\n      stream.getTracks().forEach(track => peer.addTrack(track, stream));\n\n      // Create offer and send to new user\n      peer.createOffer().then(offer => peer.setLocalDescription(offer)).then(() => {\n        socket.emit('offer', {\n          to: id,\n          offer: peer.localDescription\n        });\n      });\n    });\n    socket.on('offer', async ({\n      from,\n      offer\n    }) => {\n      console.log('Received offer from', from);\n      const peer = createPeerConnection(from, stream);\n      peersRef.current[from] = peer;\n\n      // Add local tracks\n      stream.getTracks().forEach(track => peer.addTrack(track, stream));\n      await peer.setRemoteDescription(new RTCSessionDescription(offer));\n      const answer = await peer.createAnswer();\n      await peer.setLocalDescription(answer);\n      socket.emit('answer', {\n        to: from,\n        answer: peer.localDescription\n      });\n    });\n    socket.on('answer', async ({\n      from,\n      answer\n    }) => {\n      console.log('Received answer from', from);\n      const peer = peersRef.current[from];\n      if (!peer) return;\n      await peer.setRemoteDescription(new RTCSessionDescription(answer));\n    });\n    socket.on('candidate', async ({\n      from,\n      candidate\n    }) => {\n      const peer = peersRef.current[from];\n      if (!peer) return;\n      try {\n        await peer.addIceCandidate(new RTCIceCandidate(candidate));\n      } catch (e) {\n        console.error('Error adding received ice candidate', e);\n      }\n    });\n    socket.on('user-left', ({\n      id\n    }) => {\n      console.log('User left:', id);\n      if (peersRef.current[id]) {\n        peersRef.current[id].close();\n        delete peersRef.current[id];\n      }\n      delete remoteStreamsRef.current[id];\n      setRemoteStreams(Object.values(remoteStreamsRef.current));\n      setUsers(prevUsers => prevUsers.filter(u => u !== id));\n    });\n  };\n\n  // Helper: create RTCPeerConnection with handlers\n  const createPeerConnection = (peerId, stream) => {\n    const peer = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    });\n    peer.onicecandidate = event => {\n      if (event.candidate) {\n        socket.emit('candidate', {\n          to: peerId,\n          candidate: event.candidate\n        });\n      }\n    };\n    peer.ontrack = event => {\n      // Save remote stream by peer id\n      remoteStreamsRef.current[peerId] = event.streams[0];\n      setRemoteStreams(Object.values(remoteStreamsRef.current));\n    };\n    peer.oniceconnectionstatechange = () => {\n      if (peer.iceConnectionState === 'disconnected' || peer.iceConnectionState === 'failed') {\n        peer.close();\n        delete peersRef.current[peerId];\n        delete remoteStreamsRef.current[peerId];\n        setRemoteStreams(Object.values(remoteStreamsRef.current));\n      }\n    };\n    return peer;\n  };\n  const handleJoin = () => {\n    if (!roomId.trim() || !name.trim()) {\n      alert('Please enter both Room Code and Your Name');\n      return;\n    }\n    setJoined(true);\n  };\n  const handleEnd = () => {\n    Object.values(peersRef.current).forEach(peer => peer.close());\n    peersRef.current = {};\n    remoteStreamsRef.current = {};\n    setRemoteStreams([]);\n    setUsers([]);\n    localStream === null || localStream === void 0 ? void 0 : localStream.getTracks().forEach(track => track.stop());\n    socket.emit('leave-room', {\n      roomId\n    });\n    setJoined(false);\n  };\n  const toggleAudio = () => {\n    if (localStream) {\n      const audioTrack = localStream.getAudioTracks()[0];\n      if (audioTrack) audioTrack.enabled = !audioTrack.enabled;\n    }\n  };\n  const toggleVideo = () => {\n    if (localStream) {\n      const videoTrack = localStream.getVideoTracks()[0];\n      if (videoTrack) videoTrack.enabled = !videoTrack.enabled;\n    }\n  };\n  const handleScreenShare = async () => {\n    if (!screenSharing.current) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true\n        });\n        const screenTrack = screenStream.getVideoTracks()[0];\n        const videoTrack = localStream.getVideoTracks()[0];\n        Object.values(peersRef.current).forEach(peer => {\n          const sender = peer.getSenders().find(s => s.track.kind === 'video');\n          if (sender) sender.replaceTrack(screenTrack);\n        });\n        screenTrack.onended = () => {\n          Object.values(peersRef.current).forEach(peer => {\n            const sender = peer.getSenders().find(s => s.track.kind === 'video');\n            if (sender) sender.replaceTrack(videoTrack);\n          });\n          screenSharing.current = false;\n        };\n        screenSharing.current = true;\n      } catch (err) {\n        console.error('Error sharing screen:', err);\n      }\n    }\n  };\n  if (!joined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join a Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Room Code\",\n        value: roomId,\n        onChange: e => setRoomId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Your Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCam,\n        onChange: e => setSelectedCam(e.target.value),\n        children: cameras.map(cam => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cam.deviceId,\n          children: cam.label || 'Camera'\n        }, cam.deviceId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoin,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Room: \", roomId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"User: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          muted: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You (\", name, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), remoteStreams.map((stream, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          autoPlay: true,\n          playsInline: true,\n          ref: video => {\n            if (video) video.srcObject = stream;\n          },\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Guest \", idx + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleAudio,\n        children: \"Mute/Unmute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVideo,\n        children: \"Video On/Off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleScreenShare,\n        children: \"Share Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEnd,\n        children: \"End Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Participants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map((u, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: u\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"yAESAML5afHQLN7CiewYOEJ08cU=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","secure","Room","_s","roomId","setRoomId","name","setName","joined","setJoined","users","setUsers","localStream","setLocalStream","remoteStreams","setRemoteStreams","selectedCam","setSelectedCam","cameras","setCameras","localVideoRef","peersRef","remoteStreamsRef","screenSharing","navigator","mediaDevices","enumerateDevices","then","devices","cams","filter","d","kind","length","deviceId","constraints","audio","video","exact","stream","getUserMedia","gotStream","current","srcObject","emit","setupSocketListeners","catch","err","console","error","alert","getTracks","forEach","track","stop","Object","values","peer","close","offAny","off","on","usersArray","id","newUserName","log","createPeerConnection","addTrack","createOffer","offer","setLocalDescription","to","localDescription","from","setRemoteDescription","RTCSessionDescription","answer","createAnswer","candidate","addIceCandidate","RTCIceCandidate","e","prevUsers","u","peerId","RTCPeerConnection","iceServers","urls","onicecandidate","event","ontrack","streams","oniceconnectionstatechange","iceConnectionState","handleJoin","trim","handleEnd","toggleAudio","audioTrack","getAudioTracks","enabled","toggleVideo","videoTrack","getVideoTracks","handleScreenShare","screenStream","getDisplayMedia","screenTrack","sender","getSenders","find","s","replaceTrack","onended","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","map","cam","label","onClick","ref","autoPlay","muted","playsInline","idx","i","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './Room.css';\r\n\r\nconst socket = io('https://localhost:5000', { secure: true });\r\n\r\n\r\nconst Room = () => {\r\n  const [roomId, setRoomId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [joined, setJoined] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const [remoteStreams, setRemoteStreams] = useState([]);\r\n  const [selectedCam, setSelectedCam] = useState('');\r\n  const [cameras, setCameras] = useState([]);\r\n\r\n  const localVideoRef = useRef();\r\n  const peersRef = useRef({});\r\n  const remoteStreamsRef = useRef({});\r\n  const screenSharing = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!joined) return;\r\n\r\n    // List cameras once when joined\r\n    navigator.mediaDevices.enumerateDevices().then(devices => {\r\n      const cams = devices.filter(d => d.kind === 'videoinput');\r\n      setCameras(cams);\r\n      if (!selectedCam && cams.length) setSelectedCam(cams[0].deviceId);\r\n    });\r\n  }, [joined]);\r\n\r\n  useEffect(() => {\r\n    if (!joined || !selectedCam) return;\r\n\r\n    // Get user media with selected camera\r\n    const constraints = {\r\n      audio: true,\r\n      video: { deviceId: { exact: selectedCam } }\r\n    };\r\n\r\n    let stream;\r\n\r\n    navigator.mediaDevices.getUserMedia(constraints)\r\n      .then(gotStream => {\r\n        stream = gotStream;\r\n        setLocalStream(stream);\r\n        if (localVideoRef.current) {\r\n          localVideoRef.current.srcObject = stream;\r\n        }\r\n\r\n        // Join room with name and roomId\r\n        socket.emit('join-room', { roomId, name });\r\n\r\n        // Set up socket listeners once:\r\n        setupSocketListeners(stream);\r\n\r\n      })\r\n      .catch(err => {\r\n        console.error('Error accessing media devices:', err);\r\n        alert('Error accessing camera or microphone. Please check permissions.');\r\n      });\r\n\r\n    // Cleanup on unmount or camera change\r\n    return () => {\r\n      if (stream) {\r\n        stream.getTracks().forEach(track => track.stop());\r\n      }\r\n      // Close all peer connections\r\n      Object.values(peersRef.current).forEach(peer => peer.close());\r\n      peersRef.current = {};\r\n      remoteStreamsRef.current = {};\r\n      setRemoteStreams([]);\r\n      setUsers([]);\r\n      socket.offAny(); // Remove all listeners attached to socket\r\n    };\r\n\r\n  }, [joined, selectedCam]);\r\n\r\n  // Setup socket event handlers\r\n  const setupSocketListeners = (stream) => {\r\n    // Avoid attaching multiple listeners\r\n    socket.off('user-list');\r\n    socket.off('user-joined');\r\n    socket.off('offer');\r\n    socket.off('answer');\r\n    socket.off('candidate');\r\n    socket.off('user-left');\r\n\r\n    socket.on('user-list', usersArray => {\r\n      setUsers(usersArray);\r\n    });\r\n\r\n    socket.on('user-joined', ({ id, name: newUserName }) => {\r\n      console.log('User joined:', id);\r\n\r\n      // Create peer connection for new user\r\n      const peer = createPeerConnection(id, stream);\r\n\r\n      peersRef.current[id] = peer;\r\n\r\n      // Add local tracks to peer\r\n      stream.getTracks().forEach(track => peer.addTrack(track, stream));\r\n\r\n      // Create offer and send to new user\r\n      peer.createOffer()\r\n        .then(offer => peer.setLocalDescription(offer))\r\n        .then(() => {\r\n          socket.emit('offer', { to: id, offer: peer.localDescription });\r\n        });\r\n    });\r\n\r\n    socket.on('offer', async ({ from, offer }) => {\r\n      console.log('Received offer from', from);\r\n\r\n      const peer = createPeerConnection(from, stream);\r\n      peersRef.current[from] = peer;\r\n\r\n      // Add local tracks\r\n      stream.getTracks().forEach(track => peer.addTrack(track, stream));\r\n\r\n      await peer.setRemoteDescription(new RTCSessionDescription(offer));\r\n      const answer = await peer.createAnswer();\r\n      await peer.setLocalDescription(answer);\r\n\r\n      socket.emit('answer', { to: from, answer: peer.localDescription });\r\n    });\r\n\r\n    socket.on('answer', async ({ from, answer }) => {\r\n      console.log('Received answer from', from);\r\n      const peer = peersRef.current[from];\r\n      if (!peer) return;\r\n      await peer.setRemoteDescription(new RTCSessionDescription(answer));\r\n    });\r\n\r\n    socket.on('candidate', async ({ from, candidate }) => {\r\n      const peer = peersRef.current[from];\r\n      if (!peer) return;\r\n      try {\r\n        await peer.addIceCandidate(new RTCIceCandidate(candidate));\r\n      } catch (e) {\r\n        console.error('Error adding received ice candidate', e);\r\n      }\r\n    });\r\n\r\n    socket.on('user-left', ({ id }) => {\r\n      console.log('User left:', id);\r\n      if (peersRef.current[id]) {\r\n        peersRef.current[id].close();\r\n        delete peersRef.current[id];\r\n      }\r\n      delete remoteStreamsRef.current[id];\r\n      setRemoteStreams(Object.values(remoteStreamsRef.current));\r\n      setUsers(prevUsers => prevUsers.filter(u => u !== id));\r\n    });\r\n  };\r\n\r\n  // Helper: create RTCPeerConnection with handlers\r\n  const createPeerConnection = (peerId, stream) => {\r\n    const peer = new RTCPeerConnection({\r\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\r\n    });\r\n\r\n    peer.onicecandidate = event => {\r\n      if (event.candidate) {\r\n        socket.emit('candidate', { to: peerId, candidate: event.candidate });\r\n      }\r\n    };\r\n\r\n    peer.ontrack = event => {\r\n      // Save remote stream by peer id\r\n      remoteStreamsRef.current[peerId] = event.streams[0];\r\n      setRemoteStreams(Object.values(remoteStreamsRef.current));\r\n    };\r\n\r\n    peer.oniceconnectionstatechange = () => {\r\n      if (peer.iceConnectionState === 'disconnected' || peer.iceConnectionState === 'failed') {\r\n        peer.close();\r\n        delete peersRef.current[peerId];\r\n        delete remoteStreamsRef.current[peerId];\r\n        setRemoteStreams(Object.values(remoteStreamsRef.current));\r\n      }\r\n    };\r\n\r\n    return peer;\r\n  };\r\n\r\n  const handleJoin = () => {\r\n    if (!roomId.trim() || !name.trim()) {\r\n      alert('Please enter both Room Code and Your Name');\r\n      return;\r\n    }\r\n    setJoined(true);\r\n  };\r\n\r\n  const handleEnd = () => {\r\n    Object.values(peersRef.current).forEach(peer => peer.close());\r\n    peersRef.current = {};\r\n    remoteStreamsRef.current = {};\r\n    setRemoteStreams([]);\r\n    setUsers([]);\r\n    localStream?.getTracks().forEach(track => track.stop());\r\n    socket.emit('leave-room', { roomId });\r\n    setJoined(false);\r\n  };\r\n\r\n  const toggleAudio = () => {\r\n    if (localStream) {\r\n      const audioTrack = localStream.getAudioTracks()[0];\r\n      if (audioTrack) audioTrack.enabled = !audioTrack.enabled;\r\n    }\r\n  };\r\n\r\n  const toggleVideo = () => {\r\n    if (localStream) {\r\n      const videoTrack = localStream.getVideoTracks()[0];\r\n      if (videoTrack) videoTrack.enabled = !videoTrack.enabled;\r\n    }\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    if (!screenSharing.current) {\r\n      try {\r\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n        const screenTrack = screenStream.getVideoTracks()[0];\r\n        const videoTrack = localStream.getVideoTracks()[0];\r\n\r\n        Object.values(peersRef.current).forEach(peer => {\r\n          const sender = peer.getSenders().find(s => s.track.kind === 'video');\r\n          if (sender) sender.replaceTrack(screenTrack);\r\n        });\r\n\r\n        screenTrack.onended = () => {\r\n          Object.values(peersRef.current).forEach(peer => {\r\n            const sender = peer.getSenders().find(s => s.track.kind === 'video');\r\n            if (sender) sender.replaceTrack(videoTrack);\r\n          });\r\n          screenSharing.current = false;\r\n        };\r\n\r\n        screenSharing.current = true;\r\n      } catch (err) {\r\n        console.error('Error sharing screen:', err);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!joined) {\r\n    return (\r\n      <div className=\"join-container\">\r\n        <h2>Join a Meeting</h2>\r\n        <input placeholder=\"Enter Room Code\" value={roomId} onChange={e => setRoomId(e.target.value)} />\r\n        <input placeholder=\"Enter Your Name\" value={name} onChange={e => setName(e.target.value)} />\r\n        <select value={selectedCam} onChange={e => setSelectedCam(e.target.value)}>\r\n          {cameras.map(cam => (\r\n            <option key={cam.deviceId} value={cam.deviceId}>{cam.label || 'Camera'}</option>\r\n          ))}\r\n        </select>\r\n        <button onClick={handleJoin}>Join</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <div className=\"header\">\r\n        <h2>Room: {roomId}</h2>\r\n        <h3>User: {name}</h3>\r\n      </div>\r\n\r\n      <div className=\"video-grid\">\r\n        <div className=\"video-block\">\r\n          <video ref={localVideoRef} autoPlay muted playsInline className=\"video\" />\r\n          <p>You ({name})</p>\r\n        </div>\r\n\r\n        {remoteStreams.map((stream, idx) => (\r\n          <div key={idx} className=\"video-block\">\r\n            <video autoPlay playsInline ref={video => {\r\n              if (video) video.srcObject = stream;\r\n            }} className=\"video\" />\r\n            <p>Guest {idx + 1}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        <button onClick={toggleAudio}>Mute/Unmute</button>\r\n        <button onClick={toggleVideo}>Video On/Off</button>\r\n        <button onClick={handleScreenShare}>Share Screen</button>\r\n        <button onClick={handleEnd}>End Meeting</button>\r\n      </div>\r\n\r\n      <div className=\"sidebar\">\r\n        <h4>Participants</h4>\r\n        <ul>\r\n          {users.map((u, i) => (\r\n            <li key={i}>{u}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}