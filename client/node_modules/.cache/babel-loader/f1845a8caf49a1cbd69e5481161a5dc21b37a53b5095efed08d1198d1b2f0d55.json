{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet - Copy\\\\client\\\\src\\\\components\\\\GuestRoom.js\",\n  _s = $RefreshSig$();\n// src/components/GuestRoom.js\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./GuestRoom.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"https://abcdef.ngrok.io\", {\n  secure: true\n});\nconst GuestRoom = () => {\n  _s();\n  const [roomId, setRoomId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [joined, setJoined] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState([]);\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const [videoEnabled, setVideoEnabled] = useState(true);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const [videoDevices, setVideoDevices] = useState([]);\n  const [selectedDeviceId, setSelectedDeviceId] = useState(null);\n  const localVideoRef = useRef();\n  const peersRef = useRef({});\n  const remoteStreamsRef = useRef({});\n  const handleJoin = () => {\n    if (!roomId.trim() || !name.trim()) {\n      alert(\"Enter both Room Code and Your Name\");\n      return;\n    }\n    const constraints = {\n      video: selectedDeviceId ? {\n        deviceId: {\n          exact: selectedDeviceId\n        }\n      } : true,\n      audio: true\n    };\n    navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n      setLocalStream(stream);\n      if (localVideoRef.current) localVideoRef.current.srcObject = stream;\n      socket.emit(\"join-room\", {\n        roomId,\n        name\n      });\n      setJoined(true);\n      setupSocketListeners(stream);\n    }).catch(e => {\n      alert(\"Could not get camera/mic: \" + e.message);\n    });\n  };\n  useEffect(() => {\n    navigator.mediaDevices.enumerateDevices().then(devices => {\n      const videoInputs = devices.filter(d => d.kind === \"videoinput\");\n      setVideoDevices(videoInputs);\n      if (videoInputs.length > 0) setSelectedDeviceId(videoInputs[0].deviceId);\n    });\n  }, []);\n  const setupSocketListeners = stream => {\n    socket.off(\"all-users\");\n    socket.off(\"user-joined\");\n    socket.off(\"offer\");\n    socket.off(\"answer\");\n    socket.off(\"candidate\");\n    socket.off(\"user-left\");\n    socket.on(\"all-users\", usersList => {\n      setUsers(usersList);\n      usersList.forEach(({\n        id,\n        name: peerName\n      }) => {\n        if (id === socket.id) return;\n        const peer = createPeer(id, socket.id, stream);\n        peersRef.current[id] = {\n          peer,\n          name: peerName\n        };\n      });\n    });\n    socket.on(\"user-joined\", ({\n      id,\n      name: peerName\n    }) => {\n      setUsers(prev => [...prev, {\n        id,\n        name: peerName\n      }]);\n      const peer = createPeer(id, socket.id, stream);\n      peersRef.current[id] = {\n        peer,\n        name: peerName\n      };\n    });\n    socket.on(\"offer\", async ({\n      from,\n      offer\n    }) => {\n      const peer = addPeer(offer, from, stream);\n      peersRef.current[from] = {\n        peer,\n        name: getNameById(from) || \"Guest\"\n      };\n    });\n    socket.on(\"answer\", ({\n      from,\n      answer\n    }) => {\n      const peerObj = peersRef.current[from];\n      if (!peerObj) return;\n      peerObj.peer.setRemoteDescription(new RTCSessionDescription(answer));\n    });\n    socket.on(\"candidate\", ({\n      from,\n      candidate\n    }) => {\n      const peerObj = peersRef.current[from];\n      if (!peerObj) return;\n      peerObj.peer.addIceCandidate(new RTCIceCandidate(candidate));\n    });\n    socket.on(\"user-left\", ({\n      id\n    }) => {\n      if (peersRef.current[id]) {\n        peersRef.current[id].peer.close();\n        delete peersRef.current[id];\n      }\n      setUsers(prev => prev.filter(u => u.id !== id));\n      delete remoteStreamsRef.current[id];\n      updateRemoteStreams();\n    });\n  };\n  const getNameById = id => {\n    const user = users.find(u => u.id === id);\n    return user ? user.name : null;\n  };\n  const createPeer = (userToSignal, callerId, stream) => {\n    const peer = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    });\n    peer.onicecandidate = e => {\n      if (e.candidate) {\n        socket.emit(\"candidate\", {\n          to: userToSignal,\n          candidate: e.candidate\n        });\n      }\n    };\n    peer.ontrack = e => {\n      remoteStreamsRef.current[userToSignal] = {\n        id: userToSignal,\n        stream: e.streams[0],\n        name: getNameById(userToSignal) || \"Guest\"\n      };\n      updateRemoteStreams();\n    };\n    stream.getTracks().forEach(track => peer.addTrack(track, stream));\n    peer.createOffer().then(offer => peer.setLocalDescription(offer)).then(() => {\n      socket.emit(\"offer\", {\n        to: userToSignal,\n        offer: peer.localDescription\n      });\n    });\n    return peer;\n  };\n  const addPeer = (incomingOffer, callerId, stream) => {\n    const peer = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    });\n    peer.onicecandidate = e => {\n      if (e.candidate) {\n        socket.emit(\"candidate\", {\n          to: callerId,\n          candidate: e.candidate\n        });\n      }\n    };\n    peer.ontrack = e => {\n      remoteStreamsRef.current[callerId] = {\n        id: callerId,\n        stream: e.streams[0],\n        name: getNameById(callerId) || \"Guest\"\n      };\n      updateRemoteStreams();\n    };\n    stream.getTracks().forEach(track => peer.addTrack(track, stream));\n    peer.setRemoteDescription(new RTCSessionDescription(incomingOffer)).then(() => peer.createAnswer()).then(answer => peer.setLocalDescription(answer)).then(() => {\n      socket.emit(\"answer\", {\n        to: callerId,\n        answer: peer.localDescription\n      });\n    });\n    return peer;\n  };\n  const updateRemoteStreams = () => {\n    setRemoteStreams(Object.values(remoteStreamsRef.current));\n  };\n  const toggleAudio = () => {\n    if (!localStream) return;\n    const audioTrack = localStream.getAudioTracks()[0];\n    if (audioTrack) {\n      audioTrack.enabled = !audioTrack.enabled;\n      setAudioEnabled(audioTrack.enabled);\n    }\n  };\n  const toggleVideo = () => {\n    if (!localStream) return;\n    const videoTrack = localStream.getVideoTracks()[0];\n    if (videoTrack) {\n      videoTrack.enabled = !videoTrack.enabled;\n      setVideoEnabled(videoTrack.enabled);\n    }\n  };\n  const handleScreenShare = async () => {\n    if (screenSharing) {\n      stopScreenShare();\n    } else {\n      startScreenShare();\n    }\n  };\n  const startScreenShare = async () => {\n    try {\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      const screenTrack = screenStream.getVideoTracks()[0];\n      const videoTrack = localStream.getVideoTracks()[0];\n      Object.values(peersRef.current).forEach(({\n        peer\n      }) => {\n        const sender = peer.getSenders().find(s => s.track.kind === \"video\");\n        if (sender) sender.replaceTrack(screenTrack);\n      });\n      if (localVideoRef.current) localVideoRef.current.srcObject = screenStream;\n      screenTrack.onended = () => stopScreenShare();\n      setScreenSharing(true);\n    } catch (err) {\n      alert(\"Error sharing screen: \" + err.message);\n    }\n  };\n  const stopScreenShare = () => {\n    const videoTrack = localStream.getVideoTracks()[0];\n    Object.values(peersRef.current).forEach(({\n      peer\n    }) => {\n      const sender = peer.getSenders().find(s => s.track.kind === \"video\");\n      if (sender) sender.replaceTrack(videoTrack);\n    });\n    if (localVideoRef.current) localVideoRef.current.srcObject = localStream;\n    setScreenSharing(false);\n  };\n  const handleLeave = () => {\n    Object.values(peersRef.current).forEach(({\n      peer\n    }) => peer.close());\n    peersRef.current = {};\n    remoteStreamsRef.current = {};\n    setRemoteStreams([]);\n    setUsers([]);\n    localStream === null || localStream === void 0 ? void 0 : localStream.getTracks().forEach(track => track.stop());\n    setLocalStream(null);\n    socket.emit(\"leave-room\", {\n      roomId\n    });\n    setJoined(false);\n    setRoomId(\"\");\n    setName(\"\");\n  };\n  if (!joined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: \"Ve Meet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join a Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Room Code\",\n        value: roomId,\n        onChange: e => setRoomId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Your Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedDeviceId || \"\",\n        onChange: e => setSelectedDeviceId(e.target.value),\n        children: videoDevices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: device.deviceId,\n          children: device.label\n        }, device.deviceId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoin,\n        className: \"btn\",\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"guestroom-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: \"Ve Meet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), \" | \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"You: \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLeave,\n          className: \"btn leave-btn\",\n          children: \"Leave Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block local\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          muted: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"video-name\",\n          children: [name, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), remoteStreams.map(({\n        id,\n        stream,\n        name: userName\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          autoPlay: true,\n          playsInline: true,\n          ref: video => {\n            if (video) video.srcObject = stream;\n          },\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"video-name\",\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleAudio,\n        className: \"btn control-btn\",\n        children: audioEnabled ? \"Mute\" : \"Unmute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVideo,\n        className: \"btn control-btn\",\n        children: videoEnabled ? \"Stop Video\" : \"Start Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleScreenShare,\n        className: \"btn control-btn\",\n        children: screenSharing ? \"Stop Sharing\" : \"Share Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLeave,\n        className: \"btn control-btn leave-btn\",\n        children: \"Leave Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Participants (\", users.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(({\n          id,\n          name: userName\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [userName, \" \", id === socket.id ? \"(You)\" : \"\"]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n_s(GuestRoom, \"+1YzlS2Bxo3AwDnptuQoCQr13JA=\");\n_c = GuestRoom;\nexport default GuestRoom;\nvar _c;\n$RefreshReg$(_c, \"GuestRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","secure","GuestRoom","_s","roomId","setRoomId","name","setName","joined","setJoined","users","setUsers","localStream","setLocalStream","remoteStreams","setRemoteStreams","audioEnabled","setAudioEnabled","videoEnabled","setVideoEnabled","screenSharing","setScreenSharing","videoDevices","setVideoDevices","selectedDeviceId","setSelectedDeviceId","localVideoRef","peersRef","remoteStreamsRef","handleJoin","trim","alert","constraints","video","deviceId","exact","audio","navigator","mediaDevices","getUserMedia","then","stream","current","srcObject","emit","setupSocketListeners","catch","e","message","enumerateDevices","devices","videoInputs","filter","d","kind","length","off","on","usersList","forEach","id","peerName","peer","createPeer","prev","from","offer","addPeer","getNameById","answer","peerObj","setRemoteDescription","RTCSessionDescription","candidate","addIceCandidate","RTCIceCandidate","close","u","updateRemoteStreams","user","find","userToSignal","callerId","RTCPeerConnection","iceServers","urls","onicecandidate","to","ontrack","streams","getTracks","track","addTrack","createOffer","setLocalDescription","localDescription","incomingOffer","createAnswer","Object","values","toggleAudio","audioTrack","getAudioTracks","enabled","toggleVideo","videoTrack","getVideoTracks","handleScreenShare","stopScreenShare","startScreenShare","screenStream","getDisplayMedia","screenTrack","sender","getSenders","s","replaceTrack","onended","err","handleLeave","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","map","device","label","onClick","ref","autoPlay","muted","playsInline","userName","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet - Copy/client/src/components/GuestRoom.js"],"sourcesContent":["// src/components/GuestRoom.js\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"./GuestRoom.css\";\r\n\r\nconst socket = io(\"https://abcdef.ngrok.io\", { secure: true });\r\n\r\nconst GuestRoom = () => {\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [joined, setJoined] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const [remoteStreams, setRemoteStreams] = useState([]);\r\n  const [audioEnabled, setAudioEnabled] = useState(true);\r\n  const [videoEnabled, setVideoEnabled] = useState(true);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n  const [videoDevices, setVideoDevices] = useState([]);\r\n  const [selectedDeviceId, setSelectedDeviceId] = useState(null);\r\n\r\n  const localVideoRef = useRef();\r\n  const peersRef = useRef({});\r\n  const remoteStreamsRef = useRef({});\r\n\r\n  const handleJoin = () => {\r\n    if (!roomId.trim() || !name.trim()) {\r\n      alert(\"Enter both Room Code and Your Name\");\r\n      return;\r\n    }\r\n\r\n    const constraints = {\r\n      video: selectedDeviceId ? { deviceId: { exact: selectedDeviceId } } : true,\r\n      audio: true,\r\n    };\r\n\r\n    navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\r\n      setLocalStream(stream);\r\n      if (localVideoRef.current) localVideoRef.current.srcObject = stream;\r\n\r\n      socket.emit(\"join-room\", { roomId, name });\r\n      setJoined(true);\r\n\r\n      setupSocketListeners(stream);\r\n    }).catch((e) => {\r\n      alert(\"Could not get camera/mic: \" + e.message);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\r\n      const videoInputs = devices.filter((d) => d.kind === \"videoinput\");\r\n      setVideoDevices(videoInputs);\r\n      if (videoInputs.length > 0) setSelectedDeviceId(videoInputs[0].deviceId);\r\n    });\r\n  }, []);\r\n\r\n  const setupSocketListeners = (stream) => {\r\n    socket.off(\"all-users\");\r\n    socket.off(\"user-joined\");\r\n    socket.off(\"offer\");\r\n    socket.off(\"answer\");\r\n    socket.off(\"candidate\");\r\n    socket.off(\"user-left\");\r\n\r\n    socket.on(\"all-users\", (usersList) => {\r\n      setUsers(usersList);\r\n      usersList.forEach(({ id, name: peerName }) => {\r\n        if (id === socket.id) return;\r\n        const peer = createPeer(id, socket.id, stream);\r\n        peersRef.current[id] = { peer, name: peerName };\r\n      });\r\n    });\r\n\r\n    socket.on(\"user-joined\", ({ id, name: peerName }) => {\r\n      setUsers((prev) => [...prev, { id, name: peerName }]);\r\n      const peer = createPeer(id, socket.id, stream);\r\n      peersRef.current[id] = { peer, name: peerName };\r\n    });\r\n\r\n    socket.on(\"offer\", async ({ from, offer }) => {\r\n      const peer = addPeer(offer, from, stream);\r\n      peersRef.current[from] = { peer, name: getNameById(from) || \"Guest\" };\r\n    });\r\n\r\n    socket.on(\"answer\", ({ from, answer }) => {\r\n      const peerObj = peersRef.current[from];\r\n      if (!peerObj) return;\r\n      peerObj.peer.setRemoteDescription(new RTCSessionDescription(answer));\r\n    });\r\n\r\n    socket.on(\"candidate\", ({ from, candidate }) => {\r\n      const peerObj = peersRef.current[from];\r\n      if (!peerObj) return;\r\n      peerObj.peer.addIceCandidate(new RTCIceCandidate(candidate));\r\n    });\r\n\r\n    socket.on(\"user-left\", ({ id }) => {\r\n      if (peersRef.current[id]) {\r\n        peersRef.current[id].peer.close();\r\n        delete peersRef.current[id];\r\n      }\r\n      setUsers((prev) => prev.filter((u) => u.id !== id));\r\n      delete remoteStreamsRef.current[id];\r\n      updateRemoteStreams();\r\n    });\r\n  };\r\n\r\n  const getNameById = (id) => {\r\n    const user = users.find((u) => u.id === id);\r\n    return user ? user.name : null;\r\n  };\r\n\r\n  const createPeer = (userToSignal, callerId, stream) => {\r\n    const peer = new RTCPeerConnection({\r\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\r\n    });\r\n\r\n    peer.onicecandidate = (e) => {\r\n      if (e.candidate) {\r\n        socket.emit(\"candidate\", { to: userToSignal, candidate: e.candidate });\r\n      }\r\n    };\r\n\r\n    peer.ontrack = (e) => {\r\n      remoteStreamsRef.current[userToSignal] = {\r\n        id: userToSignal,\r\n        stream: e.streams[0],\r\n        name: getNameById(userToSignal) || \"Guest\",\r\n      };\r\n      updateRemoteStreams();\r\n    };\r\n\r\n    stream.getTracks().forEach((track) => peer.addTrack(track, stream));\r\n\r\n    peer.createOffer().then((offer) => peer.setLocalDescription(offer)).then(() => {\r\n      socket.emit(\"offer\", { to: userToSignal, offer: peer.localDescription });\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (incomingOffer, callerId, stream) => {\r\n    const peer = new RTCPeerConnection({\r\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\r\n    });\r\n\r\n    peer.onicecandidate = (e) => {\r\n      if (e.candidate) {\r\n        socket.emit(\"candidate\", { to: callerId, candidate: e.candidate });\r\n      }\r\n    };\r\n\r\n    peer.ontrack = (e) => {\r\n      remoteStreamsRef.current[callerId] = {\r\n        id: callerId,\r\n        stream: e.streams[0],\r\n        name: getNameById(callerId) || \"Guest\",\r\n      };\r\n      updateRemoteStreams();\r\n    };\r\n\r\n    stream.getTracks().forEach((track) => peer.addTrack(track, stream));\r\n\r\n    peer.setRemoteDescription(new RTCSessionDescription(incomingOffer)).then(() =>\r\n      peer.createAnswer()\r\n    ).then((answer) => peer.setLocalDescription(answer)).then(() => {\r\n      socket.emit(\"answer\", { to: callerId, answer: peer.localDescription });\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const updateRemoteStreams = () => {\r\n    setRemoteStreams(Object.values(remoteStreamsRef.current));\r\n  };\r\n\r\n  const toggleAudio = () => {\r\n    if (!localStream) return;\r\n    const audioTrack = localStream.getAudioTracks()[0];\r\n    if (audioTrack) {\r\n      audioTrack.enabled = !audioTrack.enabled;\r\n      setAudioEnabled(audioTrack.enabled);\r\n    }\r\n  };\r\n\r\n  const toggleVideo = () => {\r\n    if (!localStream) return;\r\n    const videoTrack = localStream.getVideoTracks()[0];\r\n    if (videoTrack) {\r\n      videoTrack.enabled = !videoTrack.enabled;\r\n      setVideoEnabled(videoTrack.enabled);\r\n    }\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    if (screenSharing) {\r\n      stopScreenShare();\r\n    } else {\r\n      startScreenShare();\r\n    }\r\n  };\r\n\r\n  const startScreenShare = async () => {\r\n    try {\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n      const screenTrack = screenStream.getVideoTracks()[0];\r\n      const videoTrack = localStream.getVideoTracks()[0];\r\n\r\n      Object.values(peersRef.current).forEach(({ peer }) => {\r\n        const sender = peer.getSenders().find((s) => s.track.kind === \"video\");\r\n        if (sender) sender.replaceTrack(screenTrack);\r\n      });\r\n\r\n      if (localVideoRef.current) localVideoRef.current.srcObject = screenStream;\r\n      screenTrack.onended = () => stopScreenShare();\r\n      setScreenSharing(true);\r\n    } catch (err) {\r\n      alert(\"Error sharing screen: \" + err.message);\r\n    }\r\n  };\r\n\r\n  const stopScreenShare = () => {\r\n    const videoTrack = localStream.getVideoTracks()[0];\r\n    Object.values(peersRef.current).forEach(({ peer }) => {\r\n      const sender = peer.getSenders().find((s) => s.track.kind === \"video\");\r\n      if (sender) sender.replaceTrack(videoTrack);\r\n    });\r\n    if (localVideoRef.current) localVideoRef.current.srcObject = localStream;\r\n    setScreenSharing(false);\r\n  };\r\n\r\n  const handleLeave = () => {\r\n    Object.values(peersRef.current).forEach(({ peer }) => peer.close());\r\n    peersRef.current = {};\r\n    remoteStreamsRef.current = {};\r\n    setRemoteStreams([]);\r\n    setUsers([]);\r\n    localStream?.getTracks().forEach((track) => track.stop());\r\n    setLocalStream(null);\r\n    socket.emit(\"leave-room\", { roomId });\r\n    setJoined(false);\r\n    setRoomId(\"\");\r\n    setName(\"\");\r\n  };\r\n\r\n  if (!joined) {\r\n    return (\r\n      <div className=\"join-container\">\r\n        <h1 className=\"logo\">Ve Meet</h1>\r\n        <h2>Join a Meeting</h2>\r\n        <input placeholder=\"Enter Room Code\" value={roomId} onChange={(e) => setRoomId(e.target.value)} />\r\n        <input placeholder=\"Enter Your Name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n        <select value={selectedDeviceId || \"\"} onChange={(e) => setSelectedDeviceId(e.target.value)}>\r\n          {videoDevices.map((device) => (\r\n            <option key={device.deviceId} value={device.deviceId}>{device.label}</option>\r\n          ))}\r\n        </select>\r\n        <button onClick={handleJoin} className=\"btn\">Join</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"guestroom-container\">\r\n      <header className=\"header\">\r\n        <h1 className=\"logo\">Ve Meet</h1>\r\n        <div>\r\n          <span>Room: {roomId}</span> | <span>You: {name}</span>\r\n          <button onClick={handleLeave} className=\"btn leave-btn\">Leave Meeting</button>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"video-grid\">\r\n        <div className=\"video-block local\">\r\n          <video ref={localVideoRef} autoPlay muted playsInline className=\"video\" />\r\n          <p className=\"video-name\">{name} (You)</p>\r\n        </div>\r\n        {remoteStreams.map(({ id, stream, name: userName }) => (\r\n          <div className=\"video-block\" key={id}>\r\n            <video\r\n              autoPlay\r\n              playsInline\r\n              ref={(video) => {\r\n                if (video) video.srcObject = stream;\r\n              }}\r\n              className=\"video\"\r\n            />\r\n            <p className=\"video-name\">{userName}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        <button onClick={toggleAudio} className=\"btn control-btn\">{audioEnabled ? \"Mute\" : \"Unmute\"}</button>\r\n        <button onClick={toggleVideo} className=\"btn control-btn\">{videoEnabled ? \"Stop Video\" : \"Start Video\"}</button>\r\n        <button onClick={handleScreenShare} className=\"btn control-btn\">{screenSharing ? \"Stop Sharing\" : \"Share Screen\"}</button>\r\n        <button onClick={handleLeave} className=\"btn control-btn leave-btn\">Leave Meeting</button>\r\n      </div>\r\n\r\n      <aside className=\"sidebar\">\r\n        <h3>Participants ({users.length})</h3>\r\n        <ul>\r\n          {users.map(({ id, name: userName }) => (\r\n            <li key={id}>{userName} {id === socket.id ? \"(You)\" : \"\"}</li>\r\n          ))}\r\n        </ul>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GuestRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}