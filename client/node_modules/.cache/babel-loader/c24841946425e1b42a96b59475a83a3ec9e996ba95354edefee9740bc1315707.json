{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./Room.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"https://abcdef.ngrok.io\", {\n  secure: true\n});\nconst Room = () => {\n  _s();\n  const [roomId, setRoomId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [joined, setJoined] = useState(false);\n  const [participants, setParticipants] = useState([]); // {id, name, stream}\n  const [localStream, setLocalStream] = useState(null);\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const [videoEnabled, setVideoEnabled] = useState(true);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const localVideoRef = useRef();\n  const peersRef = useRef({}); // peer connections by socket id\n  const remoteStreamsRef = useRef({}); // remote streams by socket id\n  const screenTrackRef = useRef(null);\n  useEffect(() => {\n    if (!joined) return;\n\n    // Get user media for host\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setLocalStream(stream);\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n      }\n      socket.emit(\"join-room\", {\n        roomId,\n        name\n      });\n\n      // Listen to socket events\n      setupSocketListeners(stream);\n    }).catch(err => {\n      alert(\"Error accessing camera/mic: \" + err.message);\n    });\n    return () => {\n      // Cleanup on leave\n      if (localStream) {\n        localStream.getTracks().forEach(t => t.stop());\n      }\n      Object.values(peersRef.current).forEach(peer => peer.close());\n      peersRef.current = {};\n      remoteStreamsRef.current = {};\n      setParticipants([]);\n      socket.offAny();\n      setScreenSharing(false);\n      screenTrackRef.current = null;\n    };\n  }, [joined]);\n  const setupSocketListeners = stream => {\n    socket.off(\"all-users\");\n    socket.off(\"user-joined\");\n    socket.off(\"offer\");\n    socket.off(\"answer\");\n    socket.off(\"ice-candidate\");\n    socket.off(\"user-left\");\n\n    // Receive all existing users in room\n    socket.on(\"all-users\", users => {\n      // users: [{ id, name }]\n      // Create peer connections to all users (guests)\n      users.forEach(({\n        id: userId,\n        name: userName\n      }) => {\n        if (userId === socket.id) return; // skip self\n\n        createPeerConnection(userId, userName, stream, true);\n      });\n\n      // Add self to participants list\n      setParticipants(prev => [...prev, {\n        id: socket.id,\n        name,\n        stream\n      }, ...users.map(({\n        id,\n        name\n      }) => ({\n        id,\n        name,\n        stream: null\n      }))]);\n    });\n\n    // New user joined\n    socket.on(\"user-joined\", ({\n      id: userId,\n      name: userName\n    }) => {\n      // Add new user to participants list with null stream (will be updated when track arrives)\n      setParticipants(prev => {\n        if (prev.find(p => p.id === userId)) return prev;\n        return [...prev, {\n          id: userId,\n          name: userName,\n          stream: null\n        }];\n      });\n      createPeerConnection(userId, userName, stream, false);\n    });\n\n    // Incoming offer from guest\n    socket.on(\"offer\", async ({\n      from,\n      offer\n    }) => {\n      const peer = createPeerConnection(from, null, stream, false, true);\n      await peer.setRemoteDescription(new RTCSessionDescription(offer));\n      const answer = await peer.createAnswer();\n      await peer.setLocalDescription(answer);\n      socket.emit(\"answer\", {\n        to: from,\n        answer: peer.localDescription\n      });\n    });\n\n    // Incoming answer from guest\n    socket.on(\"answer\", async ({\n      from,\n      answer\n    }) => {\n      const peer = peersRef.current[from];\n      if (!peer) return;\n      await peer.setRemoteDescription(new RTCSessionDescription(answer));\n    });\n\n    // ICE candidate from guest\n    socket.on(\"ice-candidate\", ({\n      from,\n      candidate\n    }) => {\n      const peer = peersRef.current[from];\n      if (!peer) return;\n      peer.addIceCandidate(new RTCIceCandidate(candidate)).catch(e => console.error(\"Error adding ICE candidate\", e));\n    });\n\n    // User left\n    socket.on(\"user-left\", ({\n      id: userId\n    }) => {\n      if (peersRef.current[userId]) {\n        peersRef.current[userId].close();\n        delete peersRef.current[userId];\n      }\n      if (remoteStreamsRef.current[userId]) {\n        delete remoteStreamsRef.current[userId];\n      }\n      setParticipants(prev => prev.filter(p => p.id !== userId));\n    });\n  };\n  const createPeerConnection = (userId, userName, stream, isInitiator, isOfferAnswer = false) => {\n    if (peersRef.current[userId]) return peersRef.current[userId];\n    const peer = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    });\n    peersRef.current[userId] = peer;\n\n    // Add local tracks\n    if (stream) {\n      stream.getTracks().forEach(track => {\n        peer.addTrack(track, stream);\n      });\n    }\n    peer.onicecandidate = event => {\n      if (event.candidate) {\n        socket.emit(\"ice-candidate\", {\n          to: userId,\n          candidate: event.candidate\n        });\n      }\n    };\n    peer.ontrack = event => {\n      remoteStreamsRef.current[userId] = event.streams[0];\n      setParticipants(prev => prev.map(p => p.id === userId ? {\n        ...p,\n        stream: event.streams[0]\n      } : p));\n    };\n    peer.oniceconnectionstatechange = () => {\n      if (peer.iceConnectionState === \"disconnected\" || peer.iceConnectionState === \"failed\" || peer.iceConnectionState === \"closed\") {\n        peer.close();\n        delete peersRef.current[userId];\n        delete remoteStreamsRef.current[userId];\n        setParticipants(prev => prev.filter(p => p.id !== userId));\n      }\n    };\n    if (isInitiator && !isOfferAnswer) {\n      peer.createOffer().then(offer => peer.setLocalDescription(offer)).then(() => {\n        socket.emit(\"offer\", {\n          to: userId,\n          offer: peer.localDescription\n        });\n      });\n    }\n    return peer;\n  };\n  const toggleAudio = () => {\n    if (!localStream) return;\n    localStream.getAudioTracks().forEach(track => {\n      track.enabled = !track.enabled;\n      setAudioEnabled(track.enabled);\n    });\n  };\n  const toggleVideo = () => {\n    if (!localStream) return;\n    localStream.getVideoTracks().forEach(track => {\n      track.enabled = !track.enabled;\n      setVideoEnabled(track.enabled);\n    });\n  };\n  const handleScreenShare = async () => {\n    if (!localStream) return;\n    if (!screenSharing) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true\n        });\n        const screenTrack = screenStream.getVideoTracks()[0];\n        screenTrackRef.current = screenTrack;\n\n        // Replace video track for all peers\n        Object.values(peersRef.current).forEach(peer => {\n          const sender = peer.getSenders().find(s => s.track.kind === \"video\");\n          if (sender) sender.replaceTrack(screenTrack);\n        });\n        screenTrack.onended = () => {\n          stopScreenShare();\n        };\n        setScreenSharing(true);\n      } catch (err) {\n        alert(\"Screen sharing failed: \" + err.message);\n      }\n    } else {\n      stopScreenShare();\n    }\n  };\n  const stopScreenShare = () => {\n    if (!screenTrackRef.current || !localStream) return;\n    const videoTrack = localStream.getVideoTracks()[0];\n    Object.values(peersRef.current).forEach(peer => {\n      const sender = peer.getSenders().find(s => s.track.kind === \"video\");\n      if (sender) sender.replaceTrack(videoTrack);\n    });\n    screenTrackRef.current.stop();\n    setScreenSharing(false);\n  };\n  const handleEndMeeting = () => {\n    // Close all peers and cleanup\n    Object.values(peersRef.current).forEach(peer => peer.close());\n    peersRef.current = {};\n    remoteStreamsRef.current = {};\n    setParticipants([]);\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    socket.emit(\"leave-room\", {\n      roomId\n    });\n    setJoined(false);\n  };\n  if (!joined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-container\",\n      style: styles.joinContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.logo,\n        children: \"Ve Meet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"#FFD700\"\n        },\n        children: \"Join a Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Room Code\",\n        value: roomId,\n        onChange: e => setRoomId(e.target.value),\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Your Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setJoined(true),\n        style: styles.button,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.roomContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.logo,\n        children: \"Ve Meet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: styles.roomName,\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            ...styles.userName,\n            marginLeft: 15\n          },\n          children: [\"User: \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const inviteLink = `${window.location.origin}/guest?roomId=${roomId}`;\n            navigator.clipboard.writeText(inviteLink).then(() => alert(\"Invite link copied to clipboard!\")).catch(() => alert(\"Failed to copy invite link\"));\n          },\n          style: {\n            marginLeft: 20,\n            padding: \"6px 12px\",\n            fontSize: 14,\n            cursor: \"pointer\",\n            backgroundColor: \"#FFD700\",\n            border: \"none\",\n            borderRadius: 6,\n            fontWeight: \"bold\",\n            color: \"black\"\n          },\n          title: \"Copy invite link\",\n          children: \"Copy Invite Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: styles.videoGrid,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.videoBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          muted: true,\n          playsInline: true,\n          style: styles.video\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.videoLabel,\n          children: [\"You (\", name, \") \", audioEnabled ? \"🔊\" : \"🔇\", \" \", videoEnabled ? \"🎥\" : \"🚫\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), participants.filter(p => p.id !== socket.id).map(({\n        id,\n        name: pName,\n        stream\n      }) => /*#__PURE__*/_jsxDEV(VideoBlock, {\n        name: pName,\n        stream: stream\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      style: styles.controls,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleAudio,\n        style: styles.controlButton,\n        children: audioEnabled ? \"Mute\" : \"Unmute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVideo,\n        style: styles.controlButton,\n        children: videoEnabled ? \"Stop Video\" : \"Start Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleScreenShare,\n        style: styles.controlButton,\n        children: screenSharing ? \"Stop Sharing\" : \"Share Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEndMeeting,\n        style: styles.controlButtonEnd,\n        children: \"End Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      style: styles.sidebar,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"#FFD700\"\n        },\n        children: [\"Participants (\", participants.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: styles.participantList,\n        children: participants.map(({\n          id,\n          name\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: styles.participantItem,\n          children: [name, \" \", id === socket.id && \"(You)\"]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"buuGtJtXxBumOadElxBzSmbqF+o=\");\n_c = Room;\nconst VideoBlock = ({\n  stream,\n  name\n}) => {\n  _s2();\n  const videoRef = useRef();\n  useEffect(() => {\n    if (videoRef.current && stream) {\n      videoRef.current.srcObject = stream;\n    }\n  }, [stream]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.videoBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true,\n      muted: false,\n      style: styles.video\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.videoLabel,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 386,\n    columnNumber: 5\n  }, this);\n};\n_s2(VideoBlock, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c2 = VideoBlock;\nconst styles = {\n  joinContainer: {\n    backgroundColor: \"black\",\n    color: \"#FFD700\",\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    gap: 20\n  },\n  logo: {\n    fontFamily: \"'Lucida Handwriting', cursive\",\n    fontSize: 48,\n    color: \"#FFD700\",\n    marginBottom: 20\n  },\n  input: {\n    fontSize: 18,\n    padding: \"10px 15px\",\n    borderRadius: 8,\n    border: \"2px solid #FFD700\",\n    backgroundColor: \"#111\",\n    color: \"#FFD700\",\n    width: 300\n  },\n  button: {\n    fontSize: 20,\n    backgroundColor: \"#FFD700\",\n    border: \"none\",\n    padding: \"10px 25px\",\n    borderRadius: 8,\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    color: \"black\"\n  },\n  roomContainer: {\n    backgroundColor: \"black\",\n    height: \"100vh\",\n    display: \"grid\",\n    gridTemplateAreas: `\n      \"header header\"\n      \"main sidebar\"\n      \"controls controls\"\n    `,\n    gridTemplateColumns: \"1fr 300px\",\n    gridTemplateRows: \"60px 1fr 60px\",\n    gap: 10,\n    padding: 10,\n    color: \"#FFD700\"\n  },\n  header: {\n    gridArea: \"header\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderBottom: \"2px solid #FFD700\",\n    padding: \"0 20px\"\n  },\n  roomName: {\n    marginRight: 15,\n    fontWeight: \"bold\"\n  },\n  userName: {\n    fontStyle: \"italic\"\n  },\n  videoGrid: {\n    gridArea: \"main\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n    gap: 10,\n    overflowY: \"auto\"\n  },\n  videoBlock: {\n    backgroundColor: \"#222\",\n    borderRadius: 10,\n    overflow: \"hidden\",\n    textAlign: \"center\",\n    color: \"#FFD700\",\n    boxShadow: \"0 0 10px #FFD700\"\n  },\n  video: {\n    width: \"100%\",\n    height: \"180px\",\n    objectFit: \"cover\",\n    borderRadius: 10\n  },\n  videoLabel: {\n    margin: 5,\n    fontWeight: \"bold\",\n    fontFamily: \"'Lucida Handwriting', cursive\"\n  },\n  controls: {\n    gridArea: \"controls\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    gap: 20,\n    borderTop: \"2px solid #FFD700\",\n    padding: \"0 20px\"\n  },\n  controlButton: {\n    fontSize: 16,\n    padding: \"10px 15px\",\n    borderRadius: 8,\n    border: \"2px solid #FFD700\",\n    backgroundColor: \"black\",\n    color: \"#FFD700\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\"\n  },\n  controlButtonEnd: {\n    fontSize: 16,\n    padding: \"10px 15px\",\n    borderRadius: 8,\n    border: \"2px solid red\",\n    backgroundColor: \"red\",\n    color: \"white\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\"\n  },\n  sidebar: {\n    gridArea: \"sidebar\",\n    backgroundColor: \"#111\",\n    borderRadius: 8,\n    padding: 10,\n    overflowY: \"auto\"\n  },\n  participantList: {\n    listStyle: \"none\",\n    paddingLeft: 0\n  },\n  participantItem: {\n    padding: \"6px 10px\",\n    borderBottom: \"1px solid #333\",\n    fontWeight: \"bold\"\n  }\n};\nexport default Room;\nvar _c, _c2;\n$RefreshReg$(_c, \"Room\");\n$RefreshReg$(_c2, \"VideoBlock\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","secure","Room","_s","roomId","setRoomId","name","setName","joined","setJoined","participants","setParticipants","localStream","setLocalStream","audioEnabled","setAudioEnabled","videoEnabled","setVideoEnabled","screenSharing","setScreenSharing","localVideoRef","peersRef","remoteStreamsRef","screenTrackRef","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","emit","setupSocketListeners","catch","err","alert","message","getTracks","forEach","t","stop","Object","values","peer","close","offAny","off","on","users","id","userId","userName","createPeerConnection","prev","map","find","p","from","offer","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","to","localDescription","candidate","addIceCandidate","RTCIceCandidate","e","console","error","filter","isInitiator","isOfferAnswer","RTCPeerConnection","iceServers","urls","track","addTrack","onicecandidate","event","ontrack","streams","oniceconnectionstatechange","iceConnectionState","createOffer","toggleAudio","getAudioTracks","enabled","toggleVideo","getVideoTracks","handleScreenShare","screenStream","getDisplayMedia","screenTrack","sender","getSenders","s","kind","replaceTrack","onended","stopScreenShare","videoTrack","handleEndMeeting","className","style","styles","joinContainer","children","logo","fileName","_jsxFileName","lineNumber","columnNumber","color","placeholder","value","onChange","target","input","onClick","button","roomContainer","header","roomName","marginLeft","inviteLink","window","location","origin","clipboard","writeText","padding","fontSize","cursor","backgroundColor","border","borderRadius","fontWeight","title","videoGrid","videoBlock","ref","autoPlay","muted","playsInline","videoLabel","pName","VideoBlock","controls","controlButton","controlButtonEnd","sidebar","length","participantList","participantItem","_c","_s2","videoRef","_c2","height","display","flexDirection","justifyContent","alignItems","gap","fontFamily","marginBottom","width","gridTemplateAreas","gridTemplateColumns","gridTemplateRows","gridArea","borderBottom","marginRight","fontStyle","overflowY","overflow","textAlign","boxShadow","objectFit","margin","borderTop","listStyle","paddingLeft","$RefreshReg$"],"sources":["C:/projects/Ve Meet/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"./Room.css\";\r\n\r\nconst socket = io(\"https://abcdef.ngrok.io\", { secure: true });\r\n\r\nconst Room = () => {\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [joined, setJoined] = useState(false);\r\n  const [participants, setParticipants] = useState([]); // {id, name, stream}\r\n  const [localStream, setLocalStream] = useState(null);\r\n  const [audioEnabled, setAudioEnabled] = useState(true);\r\n  const [videoEnabled, setVideoEnabled] = useState(true);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n\r\n  const localVideoRef = useRef();\r\n  const peersRef = useRef({}); // peer connections by socket id\r\n  const remoteStreamsRef = useRef({}); // remote streams by socket id\r\n  const screenTrackRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!joined) return;\r\n\r\n    // Get user media for host\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        setLocalStream(stream);\r\n        if (localVideoRef.current) {\r\n          localVideoRef.current.srcObject = stream;\r\n        }\r\n        socket.emit(\"join-room\", { roomId, name });\r\n\r\n        // Listen to socket events\r\n        setupSocketListeners(stream);\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Error accessing camera/mic: \" + err.message);\r\n      });\r\n\r\n    return () => {\r\n      // Cleanup on leave\r\n      if (localStream) {\r\n        localStream.getTracks().forEach((t) => t.stop());\r\n      }\r\n      Object.values(peersRef.current).forEach((peer) => peer.close());\r\n      peersRef.current = {};\r\n      remoteStreamsRef.current = {};\r\n      setParticipants([]);\r\n      socket.offAny();\r\n      setScreenSharing(false);\r\n      screenTrackRef.current = null;\r\n    };\r\n  }, [joined]);\r\n\r\n  const setupSocketListeners = (stream) => {\r\n    socket.off(\"all-users\");\r\n    socket.off(\"user-joined\");\r\n    socket.off(\"offer\");\r\n    socket.off(\"answer\");\r\n    socket.off(\"ice-candidate\");\r\n    socket.off(\"user-left\");\r\n\r\n    // Receive all existing users in room\r\n    socket.on(\"all-users\", (users) => {\r\n      // users: [{ id, name }]\r\n      // Create peer connections to all users (guests)\r\n      users.forEach(({ id: userId, name: userName }) => {\r\n        if (userId === socket.id) return; // skip self\r\n\r\n        createPeerConnection(userId, userName, stream, true);\r\n      });\r\n\r\n      // Add self to participants list\r\n      setParticipants((prev) => [\r\n        ...prev,\r\n        { id: socket.id, name, stream },\r\n        ...users.map(({ id, name }) => ({ id, name, stream: null })),\r\n      ]);\r\n    });\r\n\r\n    // New user joined\r\n    socket.on(\"user-joined\", ({ id: userId, name: userName }) => {\r\n      // Add new user to participants list with null stream (will be updated when track arrives)\r\n      setParticipants((prev) => {\r\n        if (prev.find((p) => p.id === userId)) return prev;\r\n        return [...prev, { id: userId, name: userName, stream: null }];\r\n      });\r\n\r\n      createPeerConnection(userId, userName, stream, false);\r\n    });\r\n\r\n    // Incoming offer from guest\r\n    socket.on(\"offer\", async ({ from, offer }) => {\r\n      const peer = createPeerConnection(from, null, stream, false, true);\r\n\r\n      await peer.setRemoteDescription(new RTCSessionDescription(offer));\r\n      const answer = await peer.createAnswer();\r\n      await peer.setLocalDescription(answer);\r\n\r\n      socket.emit(\"answer\", { to: from, answer: peer.localDescription });\r\n    });\r\n\r\n    // Incoming answer from guest\r\n    socket.on(\"answer\", async ({ from, answer }) => {\r\n      const peer = peersRef.current[from];\r\n      if (!peer) return;\r\n      await peer.setRemoteDescription(new RTCSessionDescription(answer));\r\n    });\r\n\r\n    // ICE candidate from guest\r\n    socket.on(\"ice-candidate\", ({ from, candidate }) => {\r\n      const peer = peersRef.current[from];\r\n      if (!peer) return;\r\n      peer\r\n        .addIceCandidate(new RTCIceCandidate(candidate))\r\n        .catch((e) => console.error(\"Error adding ICE candidate\", e));\r\n    });\r\n\r\n    // User left\r\n    socket.on(\"user-left\", ({ id: userId }) => {\r\n      if (peersRef.current[userId]) {\r\n        peersRef.current[userId].close();\r\n        delete peersRef.current[userId];\r\n      }\r\n      if (remoteStreamsRef.current[userId]) {\r\n        delete remoteStreamsRef.current[userId];\r\n      }\r\n      setParticipants((prev) => prev.filter((p) => p.id !== userId));\r\n    });\r\n  };\r\n\r\n  const createPeerConnection = (\r\n    userId,\r\n    userName,\r\n    stream,\r\n    isInitiator,\r\n    isOfferAnswer = false\r\n  ) => {\r\n    if (peersRef.current[userId]) return peersRef.current[userId];\r\n\r\n    const peer = new RTCPeerConnection({\r\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\r\n    });\r\n\r\n    peersRef.current[userId] = peer;\r\n\r\n    // Add local tracks\r\n    if (stream) {\r\n      stream.getTracks().forEach((track) => {\r\n        peer.addTrack(track, stream);\r\n      });\r\n    }\r\n\r\n    peer.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        socket.emit(\"ice-candidate\", { to: userId, candidate: event.candidate });\r\n      }\r\n    };\r\n\r\n    peer.ontrack = (event) => {\r\n      remoteStreamsRef.current[userId] = event.streams[0];\r\n      setParticipants((prev) =>\r\n        prev.map((p) =>\r\n          p.id === userId ? { ...p, stream: event.streams[0] } : p\r\n        )\r\n      );\r\n    };\r\n\r\n    peer.oniceconnectionstatechange = () => {\r\n      if (\r\n        peer.iceConnectionState === \"disconnected\" ||\r\n        peer.iceConnectionState === \"failed\" ||\r\n        peer.iceConnectionState === \"closed\"\r\n      ) {\r\n        peer.close();\r\n        delete peersRef.current[userId];\r\n        delete remoteStreamsRef.current[userId];\r\n        setParticipants((prev) => prev.filter((p) => p.id !== userId));\r\n      }\r\n    };\r\n\r\n    if (isInitiator && !isOfferAnswer) {\r\n      peer\r\n        .createOffer()\r\n        .then((offer) => peer.setLocalDescription(offer))\r\n        .then(() => {\r\n          socket.emit(\"offer\", { to: userId, offer: peer.localDescription });\r\n        });\r\n    }\r\n\r\n    return peer;\r\n  };\r\n\r\n  const toggleAudio = () => {\r\n    if (!localStream) return;\r\n    localStream.getAudioTracks().forEach((track) => {\r\n      track.enabled = !track.enabled;\r\n      setAudioEnabled(track.enabled);\r\n    });\r\n  };\r\n\r\n  const toggleVideo = () => {\r\n    if (!localStream) return;\r\n    localStream.getVideoTracks().forEach((track) => {\r\n      track.enabled = !track.enabled;\r\n      setVideoEnabled(track.enabled);\r\n    });\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    if (!localStream) return;\r\n\r\n    if (!screenSharing) {\r\n      try {\r\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\r\n          video: true,\r\n        });\r\n        const screenTrack = screenStream.getVideoTracks()[0];\r\n        screenTrackRef.current = screenTrack;\r\n\r\n        // Replace video track for all peers\r\n        Object.values(peersRef.current).forEach((peer) => {\r\n          const sender = peer\r\n            .getSenders()\r\n            .find((s) => s.track.kind === \"video\");\r\n          if (sender) sender.replaceTrack(screenTrack);\r\n        });\r\n\r\n        screenTrack.onended = () => {\r\n          stopScreenShare();\r\n        };\r\n\r\n        setScreenSharing(true);\r\n      } catch (err) {\r\n        alert(\"Screen sharing failed: \" + err.message);\r\n      }\r\n    } else {\r\n      stopScreenShare();\r\n    }\r\n  };\r\n\r\n  const stopScreenShare = () => {\r\n    if (!screenTrackRef.current || !localStream) return;\r\n    const videoTrack = localStream.getVideoTracks()[0];\r\n    Object.values(peersRef.current).forEach((peer) => {\r\n      const sender = peer.getSenders().find((s) => s.track.kind === \"video\");\r\n      if (sender) sender.replaceTrack(videoTrack);\r\n    });\r\n    screenTrackRef.current.stop();\r\n    setScreenSharing(false);\r\n  };\r\n\r\n  const handleEndMeeting = () => {\r\n    // Close all peers and cleanup\r\n    Object.values(peersRef.current).forEach((peer) => peer.close());\r\n    peersRef.current = {};\r\n    remoteStreamsRef.current = {};\r\n    setParticipants([]);\r\n    if (localStream) {\r\n      localStream.getTracks().forEach((track) => track.stop());\r\n    }\r\n    socket.emit(\"leave-room\", { roomId });\r\n    setJoined(false);\r\n  };\r\n\r\n  if (!joined) {\r\n    return (\r\n      <div className=\"join-container\" style={styles.joinContainer}>\r\n        <h1 style={styles.logo}>Ve Meet</h1>\r\n        <h2 style={{ color: \"#FFD700\" }}>Join a Meeting</h2>\r\n        <input\r\n          placeholder=\"Enter Room Code\"\r\n          value={roomId}\r\n          onChange={(e) => setRoomId(e.target.value)}\r\n          style={styles.input}\r\n        />\r\n        <input\r\n          placeholder=\"Enter Your Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          style={styles.input}\r\n        />\r\n        <button onClick={() => setJoined(true)} style={styles.button}>\r\n          Join\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={styles.roomContainer}>\r\n      <header style={styles.header}>\r\n  <h1 style={styles.logo}>Ve Meet</h1>\r\n  <div>\r\n    <span style={styles.roomName}>Room: {roomId}</span>\r\n    <span style={{ ...styles.userName, marginLeft: 15 }}>User: {name}</span>\r\n    <button\r\n      onClick={() => {\r\n        const inviteLink = `${window.location.origin}/guest?roomId=${roomId}`;\r\n        navigator.clipboard.writeText(inviteLink)\r\n          .then(() => alert(\"Invite link copied to clipboard!\"))\r\n          .catch(() => alert(\"Failed to copy invite link\"));\r\n      }}\r\n      style={{ \r\n        marginLeft: 20,\r\n        padding: \"6px 12px\",\r\n        fontSize: 14,\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#FFD700\",\r\n        border: \"none\",\r\n        borderRadius: 6,\r\n        fontWeight: \"bold\",\r\n        color: \"black\",\r\n      }}\r\n      title=\"Copy invite link\"\r\n    >\r\n      Copy Invite Link\r\n    </button>\r\n  </div>\r\n</header>\r\n\r\n        <main style={styles.videoGrid}>\r\n        {/* Local Video */}\r\n        <div style={styles.videoBlock}>\r\n          <video\r\n            ref={localVideoRef}\r\n            autoPlay\r\n            muted\r\n            playsInline\r\n            style={styles.video}\r\n          />\r\n          <p style={styles.videoLabel}>\r\n            You ({name}) {audioEnabled ? \"🔊\" : \"🔇\"} {videoEnabled ? \"🎥\" : \"🚫\"}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Remote Videos */}\r\n        {participants\r\n          .filter((p) => p.id !== socket.id)\r\n          .map(({ id, name: pName, stream }) => (\r\n            <VideoBlock key={id} name={pName} stream={stream} />\r\n          ))}\r\n      </main>\r\n\r\n      <footer style={styles.controls}>\r\n        <button onClick={toggleAudio} style={styles.controlButton}>\r\n          {audioEnabled ? \"Mute\" : \"Unmute\"}\r\n        </button>\r\n        <button onClick={toggleVideo} style={styles.controlButton}>\r\n          {videoEnabled ? \"Stop Video\" : \"Start Video\"}\r\n        </button>\r\n        <button onClick={handleScreenShare} style={styles.controlButton}>\r\n          {screenSharing ? \"Stop Sharing\" : \"Share Screen\"}\r\n        </button>\r\n        <button onClick={handleEndMeeting} style={styles.controlButtonEnd}>\r\n          End Meeting\r\n        </button>\r\n      </footer>\r\n\r\n      <aside style={styles.sidebar}>\r\n        <h3 style={{ color: \"#FFD700\" }}>Participants ({participants.length})</h3>\r\n        <ul style={styles.participantList}>\r\n          {participants.map(({ id, name }) => (\r\n            <li key={id} style={styles.participantItem}>\r\n              {name} {id === socket.id && \"(You)\"}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VideoBlock = ({ stream, name }) => {\r\n  const videoRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (videoRef.current && stream) {\r\n      videoRef.current.srcObject = stream;\r\n    }\r\n  }, [stream]);\r\n\r\n  return (\r\n    <div style={styles.videoBlock}>\r\n      <video\r\n        ref={videoRef}\r\n        autoPlay\r\n        playsInline\r\n        muted={false}\r\n        style={styles.video}\r\n      />\r\n      <p style={styles.videoLabel}>{name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  joinContainer: {\r\n    backgroundColor: \"black\",\r\n    color: \"#FFD700\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    gap: 20,\r\n  },\r\n  logo: {\r\n    fontFamily: \"'Lucida Handwriting', cursive\",\r\n    fontSize: 48,\r\n    color: \"#FFD700\",\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    fontSize: 18,\r\n    padding: \"10px 15px\",\r\n    borderRadius: 8,\r\n    border: \"2px solid #FFD700\",\r\n    backgroundColor: \"#111\",\r\n    color: \"#FFD700\",\r\n    width: 300,\r\n  },\r\n  button: {\r\n    fontSize: 20,\r\n    backgroundColor: \"#FFD700\",\r\n    border: \"none\",\r\n    padding: \"10px 25px\",\r\n    borderRadius: 8,\r\n    cursor: \"pointer\",\r\n    fontWeight: \"bold\",\r\n    color: \"black\",\r\n  },\r\n  roomContainer: {\r\n    backgroundColor: \"black\",\r\n    height: \"100vh\",\r\n    display: \"grid\",\r\n    gridTemplateAreas: `\r\n      \"header header\"\r\n      \"main sidebar\"\r\n      \"controls controls\"\r\n    `,\r\n    gridTemplateColumns: \"1fr 300px\",\r\n    gridTemplateRows: \"60px 1fr 60px\",\r\n    gap: 10,\r\n    padding: 10,\r\n    color: \"#FFD700\",\r\n  },\r\n  header: {\r\n    gridArea: \"header\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    borderBottom: \"2px solid #FFD700\",\r\n    padding: \"0 20px\",\r\n  },\r\n  roomName: {\r\n    marginRight: 15,\r\n    fontWeight: \"bold\",\r\n  },\r\n  userName: {\r\n    fontStyle: \"italic\",\r\n  },\r\n  videoGrid: {\r\n    gridArea: \"main\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\r\n    gap: 10,\r\n    overflowY: \"auto\",\r\n  },\r\n  videoBlock: {\r\n    backgroundColor: \"#222\",\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n    textAlign: \"center\",\r\n    color: \"#FFD700\",\r\n    boxShadow: \"0 0 10px #FFD700\",\r\n  },\r\n  video: {\r\n    width: \"100%\",\r\n    height: \"180px\",\r\n    objectFit: \"cover\",\r\n    borderRadius: 10,\r\n  },\r\n  videoLabel: {\r\n    margin: 5,\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"'Lucida Handwriting', cursive\",\r\n  },\r\n  controls: {\r\n    gridArea: \"controls\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    gap: 20,\r\n    borderTop: \"2px solid #FFD700\",\r\n    padding: \"0 20px\",\r\n  },\r\n  controlButton: {\r\n    fontSize: 16,\r\n    padding: \"10px 15px\",\r\n    borderRadius: 8,\r\n    border: \"2px solid #FFD700\",\r\n    backgroundColor: \"black\",\r\n    color: \"#FFD700\",\r\n    cursor: \"pointer\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  controlButtonEnd: {\r\n    fontSize: 16,\r\n    padding: \"10px 15px\",\r\n    borderRadius: 8,\r\n    border: \"2px solid red\",\r\n    backgroundColor: \"red\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  sidebar: {\r\n    gridArea: \"sidebar\",\r\n    backgroundColor: \"#111\",\r\n    borderRadius: 8,\r\n    padding: 10,\r\n    overflowY: \"auto\",\r\n  },\r\n  participantList: {\r\n    listStyle: \"none\",\r\n    paddingLeft: 0,\r\n  },\r\n  participantItem: {\r\n    padding: \"6px 10px\",\r\n    borderBottom: \"1px solid #333\",\r\n    fontWeight: \"bold\",\r\n  },\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}