{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\Ve Meet TEST\\\\client\\\\src\\\\components\\\\Room.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"https://192.168.29.23:5000\", {\n  secure: true,\n  reconnection: true,\n  rejectUnauthorized: false\n});\nconst Room = () => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [participants, setParticipants] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [roomID, setRoomID] = useState(\"\");\n  const [micOn, setMicOn] = useState(true);\n  const [camOn, setCamOn] = useState(true);\n  const [screenSharing, setScreenSharing] = useState(false);\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const streamRef = useRef();\n  const screenTrackRef = useRef();\n  const videoRefs = useRef({});\n  useEffect(() => {\n    const name = prompt(\"Enter your name\");\n    const room = prompt(\"Enter room code\");\n    setUserName(name);\n    setRoomID(room);\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      streamRef.current = stream;\n      if (userVideo.current) userVideo.current.srcObject = stream;\n      socket.emit(\"join-room\", {\n        roomId: room,\n        userName: name\n      });\n      socket.on(\"all-users\", users => {\n        const newPeers = [];\n        users.forEach(user => {\n          if (user.id === socket.id) return;\n          const peer = createPeer(user.id, socket.id, stream);\n          peersRef.current.push({\n            peerID: user.id,\n            peer,\n            userName: user.name\n          });\n          newPeers.push({\n            peerID: user.id,\n            peer,\n            userName: user.name\n          });\n        });\n        setPeers(newPeers);\n        setParticipants(users.map(u => u.name));\n      });\n      socket.on(\"user-joined\", payload => {\n        const peer = addPeer(payload.signal, payload.id, payload.name, stream);\n        peersRef.current.push({\n          peerID: payload.id,\n          peer,\n          userName: payload.name\n        });\n        setPeers(users => [...users, {\n          peerID: payload.id,\n          peer,\n          userName: payload.name\n        }]);\n        setParticipants(list => [...list, payload.name]);\n      });\n      socket.on(\"receiving-signal\", ({\n        signal,\n        from,\n        name\n      }) => {\n        const existingPeer = peersRef.current.find(p => p.peerID === from);\n        if (!existingPeer) {\n          const peer = addPeer(signal, from, name, streamRef.current);\n          peersRef.current.push({\n            peerID: from,\n            peer,\n            userName: name\n          });\n          setPeers(prev => [...prev, {\n            peerID: from,\n            peer,\n            userName: name\n          }]);\n          setParticipants(prev => [...prev, name]);\n        } else if (existingPeer.peer && !existingPeer.peer.destroyed) {\n          existingPeer.peer.signal(signal);\n        }\n      });\n      socket.on(\"receiving-returned-signal\", payload => {\n        const item = peersRef.current.find(p => p.peerID === payload.id);\n        if (item && item.peer && !item.peer.destroyed) {\n          item.peer.signal(payload.signal);\n        } else {\n          console.warn(\"Peer not found or destroyed for returned signal:\", payload.id);\n        }\n      });\n      socket.on(\"user-disconnected\", id => {\n        setPeers(users => users.filter(p => p.peerID !== id));\n        peersRef.current = peersRef.current.filter(p => p.peerID !== id);\n        setParticipants(list => list.filter(name => peersRef.current.some(p => p.userName === name)));\n      });\n    });\n    return () => {\n      socket.disconnect();\n      peersRef.current.forEach(({\n        peer\n      }) => peer.destroy());\n      if (streamRef.current) streamRef.current.getTracks().forEach(t => t.stop());\n    };\n  }, []);\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"sending-signal\", {\n        userToSignal,\n        callerID,\n        signal\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const assignStream = () => {\n        const videoElement = videoRefs.current[userToSignal];\n        if (videoElement) {\n          videoElement.srcObject = remoteStream;\n        } else {\n          setTimeout(assignStream, 100);\n        }\n      };\n      assignStream();\n    });\n    return peer;\n  };\n  const addPeer = (incomingSignal, callerId, name, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", signal => {\n      socket.emit(\"returning-signal\", {\n        signal,\n        to: callerId,\n        name: userName\n      });\n    });\n    peer.on(\"stream\", remoteStream => {\n      const assignStream = () => {\n        const videoElement = videoRefs.current[callerId];\n        if (videoElement) {\n          videoElement.srcObject = remoteStream;\n        } else {\n          setTimeout(assignStream, 100);\n        }\n      };\n      assignStream();\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  };\n  const toggleMic = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getAudioTracks().forEach(track => {\n      track.enabled = !micOn;\n    });\n    setMicOn(!micOn);\n  };\n  const toggleCam = () => {\n    if (!streamRef.current) return;\n    streamRef.current.getVideoTracks().forEach(track => {\n      track.enabled = !camOn;\n    });\n    setCamOn(!camOn);\n  };\n  const handleScreenShare = async () => {\n    if (!screenSharing) {\n      try {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true\n        });\n        const screenTrack = screenStream.getVideoTracks()[0];\n        screenTrackRef.current = screenTrack;\n        peersRef.current.forEach(({\n          peer\n        }) => {\n          peer.replaceTrack(streamRef.current.getVideoTracks()[0], screenTrack, streamRef.current);\n        });\n        screenTrack.onended = () => {\n          peersRef.current.forEach(({\n            peer\n          }) => {\n            peer.replaceTrack(screenTrack, streamRef.current.getVideoTracks()[0], streamRef.current);\n          });\n          setScreenSharing(false);\n        };\n        setScreenSharing(true);\n      } catch (err) {\n        console.error(\"Screen share error:\", err);\n      }\n    } else {\n      if (screenTrackRef.current) screenTrackRef.current.stop();\n      setScreenSharing(false);\n    }\n  };\n  const endMeeting = () => {\n    peersRef.current.forEach(({\n      peer\n    }) => peer.destroy());\n    peersRef.current = [];\n    if (streamRef.current) streamRef.current.getTracks().forEach(track => track.stop());\n    socket.disconnect();\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"room-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"logo\",\n        children: \"Ve Meet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Room: \", roomID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: [\"You: \", userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          muted: true,\n          ref: userVideo,\n          autoPlay: true,\n          playsInline: true,\n          className: \"video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), peers.map(({\n        peerID,\n        userName\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          autoPlay: true,\n          className: \"video\",\n          ref: el => {\n            videoRefs.current[peerID] = el;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, peerID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"participants-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Participants (\", participants.length + 1, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [userName, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), participants.map((pName, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: pName\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMic,\n          children: micOn ? \"Mute\" : \"Unmute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleCam,\n          children: camOn ? \"Video Off\" : \"Video On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleScreenShare,\n          children: screenSharing ? \"Stop Sharing\" : \"Share Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"end-btn\",\n          onClick: endMeeting,\n          children: \"End Meeting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"RoaFfDUeVEuuIrkPVDHyKrTb4ZA=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Peer","jsxDEV","_jsxDEV","socket","secure","reconnection","rejectUnauthorized","Room","_s","peers","setPeers","participants","setParticipants","userName","setUserName","roomID","setRoomID","micOn","setMicOn","camOn","setCamOn","screenSharing","setScreenSharing","userVideo","peersRef","streamRef","screenTrackRef","videoRefs","name","prompt","room","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","emit","roomId","on","users","newPeers","forEach","user","id","peer","createPeer","push","peerID","map","u","payload","addPeer","signal","list","from","existingPeer","find","p","prev","destroyed","item","console","warn","filter","some","disconnect","destroy","getTracks","t","stop","userToSignal","callerID","initiator","trickle","remoteStream","assignStream","videoElement","setTimeout","incomingSignal","callerId","to","toggleMic","getAudioTracks","track","enabled","toggleCam","getVideoTracks","handleScreenShare","screenStream","getDisplayMedia","screenTrack","replaceTrack","onended","err","error","endMeeting","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","muted","ref","autoPlay","playsInline","el","length","pName","idx","onClick","_c","$RefreshReg$"],"sources":["C:/projects/Ve Meet TEST/client/src/components/Room.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./Room.css\";\r\n\r\nconst socket = io(\"https://192.168.29.23:5000\", {\r\n  secure: true,\r\n  reconnection: true,\r\n  rejectUnauthorized: false,\r\n});\r\n\r\nconst Room = () => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [micOn, setMicOn] = useState(true);\r\n  const [camOn, setCamOn] = useState(true);\r\n  const [screenSharing, setScreenSharing] = useState(false);\r\n\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const streamRef = useRef();\r\n  const screenTrackRef = useRef();\r\n  const videoRefs = useRef({});\r\n\r\n  useEffect(() => {\r\n    const name = prompt(\"Enter your name\");\r\n    const room = prompt(\"Enter room code\");\r\n    setUserName(name);\r\n    setRoomID(room);\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true, audio: true })\r\n      .then((stream) => {\r\n        streamRef.current = stream;\r\n        if (userVideo.current) userVideo.current.srcObject = stream;\r\n\r\n        socket.emit(\"join-room\", { roomId: room, userName: name });\r\n\r\n        socket.on(\"all-users\", (users) => {\r\n          const newPeers = [];\r\n          users.forEach((user) => {\r\n            if (user.id === socket.id) return;\r\n            const peer = createPeer(user.id, socket.id, stream);\r\n            peersRef.current.push({ peerID: user.id, peer, userName: user.name });\r\n            newPeers.push({ peerID: user.id, peer, userName: user.name });\r\n          });\r\n          setPeers(newPeers);\r\n          setParticipants(users.map((u) => u.name));\r\n        });\r\n\r\n        socket.on(\"user-joined\", (payload) => {\r\n          const peer = addPeer(payload.signal, payload.id, payload.name, stream);\r\n          peersRef.current.push({ peerID: payload.id, peer, userName: payload.name });\r\n          setPeers((users) => [...users, { peerID: payload.id, peer, userName: payload.name }]);\r\n          setParticipants((list) => [...list, payload.name]);\r\n        });\r\n\r\n        socket.on(\"receiving-signal\", ({ signal, from, name }) => {\r\n          const existingPeer = peersRef.current.find((p) => p.peerID === from);\r\n          if (!existingPeer) {\r\n            const peer = addPeer(signal, from, name, streamRef.current);\r\n            peersRef.current.push({ peerID: from, peer, userName: name });\r\n            setPeers((prev) => [...prev, { peerID: from, peer, userName: name }]);\r\n            setParticipants((prev) => [...prev, name]);\r\n          } else if (existingPeer.peer && !existingPeer.peer.destroyed) {\r\n            existingPeer.peer.signal(signal);\r\n          }\r\n        });\r\n\r\n        socket.on(\"receiving-returned-signal\", (payload) => {\r\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\r\n          if (item && item.peer && !item.peer.destroyed) {\r\n            item.peer.signal(payload.signal);\r\n          } else {\r\n            console.warn(\"Peer not found or destroyed for returned signal:\", payload.id);\r\n          }\r\n        });\r\n\r\n        socket.on(\"user-disconnected\", (id) => {\r\n          setPeers((users) => users.filter((p) => p.peerID !== id));\r\n          peersRef.current = peersRef.current.filter((p) => p.peerID !== id);\r\n          setParticipants((list) => list.filter((name) => peersRef.current.some((p) => p.userName === name)));\r\n        });\r\n      });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n      peersRef.current.forEach(({ peer }) => peer.destroy());\r\n      if (streamRef.current) streamRef.current.getTracks().forEach((t) => t.stop());\r\n    };\r\n  }, []);\r\n\r\n  const createPeer = (userToSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"sending-signal\", { userToSignal, callerID, signal });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const assignStream = () => {\r\n        const videoElement = videoRefs.current[userToSignal];\r\n        if (videoElement) {\r\n          videoElement.srcObject = remoteStream;\r\n        } else {\r\n          setTimeout(assignStream, 100);\r\n        }\r\n      };\r\n      assignStream();\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (incomingSignal, callerId, name, stream) => {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socket.emit(\"returning-signal\", { signal, to: callerId, name: userName });\r\n    });\r\n\r\n    peer.on(\"stream\", (remoteStream) => {\r\n      const assignStream = () => {\r\n        const videoElement = videoRefs.current[callerId];\r\n        if (videoElement) {\r\n          videoElement.srcObject = remoteStream;\r\n        } else {\r\n          setTimeout(assignStream, 100);\r\n        }\r\n      };\r\n      assignStream();\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n    return peer;\r\n  };\r\n\r\n  const toggleMic = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getAudioTracks().forEach((track) => {\r\n      track.enabled = !micOn;\r\n    });\r\n    setMicOn(!micOn);\r\n  };\r\n\r\n  const toggleCam = () => {\r\n    if (!streamRef.current) return;\r\n    streamRef.current.getVideoTracks().forEach((track) => {\r\n      track.enabled = !camOn;\r\n    });\r\n    setCamOn(!camOn);\r\n  };\r\n\r\n  const handleScreenShare = async () => {\r\n    if (!screenSharing) {\r\n      try {\r\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n        const screenTrack = screenStream.getVideoTracks()[0];\r\n        screenTrackRef.current = screenTrack;\r\n\r\n        peersRef.current.forEach(({ peer }) => {\r\n          peer.replaceTrack(streamRef.current.getVideoTracks()[0], screenTrack, streamRef.current);\r\n        });\r\n\r\n        screenTrack.onended = () => {\r\n          peersRef.current.forEach(({ peer }) => {\r\n            peer.replaceTrack(screenTrack, streamRef.current.getVideoTracks()[0], streamRef.current);\r\n          });\r\n          setScreenSharing(false);\r\n        };\r\n\r\n        setScreenSharing(true);\r\n      } catch (err) {\r\n        console.error(\"Screen share error:\", err);\r\n      }\r\n    } else {\r\n      if (screenTrackRef.current) screenTrackRef.current.stop();\r\n      setScreenSharing(false);\r\n    }\r\n  };\r\n\r\n  const endMeeting = () => {\r\n    peersRef.current.forEach(({ peer }) => peer.destroy());\r\n    peersRef.current = [];\r\n    if (streamRef.current) streamRef.current.getTracks().forEach((track) => track.stop());\r\n    socket.disconnect();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-container\">\r\n      <header className=\"room-header\">\r\n        <h2 className=\"logo\">Ve Meet</h2>\r\n        <div>\r\n          <span>Room: {roomID}</span>\r\n          <span className=\"username\">You: {userName}</span>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"video-grid\">\r\n        <div className=\"video-block\">\r\n          <video muted ref={userVideo} autoPlay playsInline className=\"video\" />\r\n          <p>{userName} (You)</p>\r\n        </div>\r\n        {peers.map(({ peerID, userName }) => (\r\n          <div className=\"video-block\" key={peerID}>\r\n            <video\r\n              playsInline\r\n              autoPlay\r\n              className=\"video\"\r\n              ref={(el) => {\r\n                videoRefs.current[peerID] = el;\r\n              }}\r\n            />\r\n            <p>{userName}</p>\r\n          </div>\r\n        ))}\r\n      </main>\r\n\r\n      <aside className=\"participants-panel\">\r\n        <h3>Participants ({participants.length + 1})</h3>\r\n        <ul>\r\n          <li>{userName} (You)</li>\r\n          {participants.map((pName, idx) => (\r\n            <li key={idx}>{pName}</li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"controls\">\r\n          <button onClick={toggleMic}>{micOn ? \"Mute\" : \"Unmute\"}</button>\r\n          <button onClick={toggleCam}>{camOn ? \"Video Off\" : \"Video On\"}</button>\r\n          <button onClick={handleScreenShare}>{screenSharing ? \"Stop Sharing\" : \"Share Screen\"}</button>\r\n          <button className=\"end-btn\" onClick={endMeeting}>\r\n            End Meeting\r\n          </button>\r\n        </div>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}